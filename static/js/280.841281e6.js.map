{"version":3,"file":"js/280.841281e6.js","mappings":"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","sources":["webpack://kube-manage-web/./src/views/deployment/Deployment.vue","webpack://kube-manage-web/./src/views/deployment/Deployment.vue?3a4e"],"sourcesContent":["<template>\n  <div class=\"deploy\">\n    <el-row>\n      <!-- 头部1 -->\n      <el-col :span=\"24\">\n        <div>\n          <!-- 包一层卡片 -->\n          <el-card class=\"deploy-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n            <el-row>\n              <!-- 命名空间的下拉框 -->\n              <el-col :span=\"6\">\n                <div>\n                  <span>命名空间: </span>\n                  <!-- 下拉框 -->\n                  <!-- filterable：带搜索功能 -->\n                  <!-- placeholder 默认提示 -->\n                  <!-- label 显示内容 -->\n                  <!-- value 绑定到v-model的值中 -->\n                  <el-select v-model=\"namespaceValue\" filterable placeholder=\"请选择\">\n                    <el-option\n                        v-for=\"(item, index) in namespaceList\"\n                        :key=\"index\"\n                        :label=\"item.metadata.name\"\n                        :value=\"item.metadata.name\">\n                    </el-option>\n                  </el-select>\n                </div>\n              </el-col>\n              <!-- 刷新按钮 -->\n              <el-col :span=\"2\" :offset=\"16\">\n                <div>\n                  <!-- 每次刷新，都重新调一次list接口，刷新表格中的数据 -->\n                  <el-button style=\"border-radius:2px;\" icon=\"Refresh\" plain @click=\"getDeployments()\">刷新</el-button>\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <!-- 头部2 -->\n      <el-col :span=\"24\">\n        <div>\n          <!-- 包一层卡片 -->\n          <el-card class=\"deploy-head-card\" shadow=\"never\" :body-style=\"{padding:'10px'}\">\n            <el-row>\n              <!-- 创建按钮 -->\n              <el-col :span=\"2\">\n                <div>\n                  <!-- 点击后打开抽屉，填入创建deployment需要的数据 -->\n                  <el-button style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" @click=\"createDeploymentDrawer = true\" v-loading.fullscreen.lock=\"fullscreenLoading\">创建</el-button>\n                </div>\n              </el-col>\n              <!-- 搜索框和搜索按钮 -->\n              <el-col :span=\"6\">\n                <div>\n                  <el-input class=\"deploy-head-search\" clearable placeholder=\"请输入\" v-model=\"searchInput\"></el-input>\n                  <el-button style=\"border-radius:2px;\" icon=\"Search\" type=\"primary\" plain @click=\"getDeployments()\">搜索</el-button>\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <!-- 数据表格 -->\n      <el-col :span=\"24\">\n        <div>\n          <!-- 包一层卡片 -->\n          <el-card class=\"deploy-body-card\" shadow=\"never\" :body-style=\"{padding:'5px'}\">\n            <!-- 数据表格 -->\n            <!-- v-loading用于加载时的loading动画 -->\n            <el-table\n                style=\"width:100%;font-size:12px;margin-bottom:10px;\"\n                :data=\"deploymentList\"\n                v-loading=\"appLoading\">\n              <!-- 最左侧留出20px的宽度，更加没关 -->\n              <el-table-column width=\"20\"></el-table-column>\n              <!-- deployment名字 -->\n              <el-table-column align=left label=\"Deployment名\">\n                <!-- 插槽，scope.row获取当前行的数据 -->\n                <template v-slot=\"scope\">\n                  <a class=\"deploy-body-deployname\">{{ scope.row.metadata.name }}</a>\n                </template>\n              </el-table-column>\n              <!-- 标签 -->\n              <el-table-column align=center label=\"标签\">\n                <template v-slot=\"scope\">\n                  <!-- for循环，每个label只显示固定长度，鼠标悬停后气泡弹出框显示完整长度 -->\n                  <div v-for=\"(val, key) in scope.row.metadata.labels\" :key=\"key\">\n                    <!-- 气泡弹出框 -->\n                    <!-- placement 弹出位置 -->\n                    <!-- trigger 触发条件 -->\n                    <!-- content 弹出框内容 -->\n                    <el-popover\n                        placement=\"right\"\n                        :width=\"200\"\n                        trigger=\"hover\"\n                        :content=\"key + ':' + val\">\n                      <template #reference>\n                        <!-- ellipsis方法用于剪裁字符串 -->\n                        <el-tag style=\"margin-bottom: 5px\" type=\"warning\">{{ ellipsis(key + \":\" + val) }}</el-tag>\n                      </template>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <!-- 容器组 -->\n              <el-table-column align=center label=\"容器组\">\n                <!-- 可用数量/总数量,三元运算，若值大于0则显示值，否则显示0 -->\n                <template v-slot=\"scope\">\n                  <span>{{ scope.row.status.availableReplicas>0?scope.row.status.availableReplicas:0  }} / {{ scope.row.spec.replicas>0?scope.row.spec.replicas:0 }} </span>\n                </template>\n              </el-table-column>\n              <!-- 创建时间 -->\n              <el-table-column align=center min-width=\"100\" label=\"创建时间\">\n                <!-- timeTrans函数用于将格林威治时间转成北京时间 -->\n                <template v-slot=\"scope\">\n                  <el-tag type=\"info\">{{ timeTrans(scope.row.metadata.creationTimestamp) }} </el-tag>\n                </template>\n              </el-table-column>\n              <!-- 容器镜像 -->\n              <el-table-column align=center label=\"镜像\">\n                <!-- 与label的显示逻辑一致 -->\n                <template v-slot=\"scope\">\n                  <div v-for=\"(val, key) in scope.row.spec.template.spec.containers\" :key=\"key\">\n                    <el-popover\n                        placement=\"right\"\n                        :width=\"200\"\n                        trigger=\"hover\"\n                        :content=\"val.image\">\n                      <template #reference>\n                        <el-tag style=\"margin-bottom: 5px\">{{ ellipsis(val.image.split('/')[2]==undefined?val.image:val.image.split('/')[2]) }}</el-tag>\n                      </template>\n                    </el-popover>\n                  </div>\n                </template>\n              </el-table-column>\n              <!-- 操作列，放按钮 -->\n              <el-table-column align=center label=\"操作\" width=\"400\">\n                <template v-slot=\"scope\">\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Edit\" type=\"primary\" plain @click=\"getDeploymentDetail(scope)\">YAML</el-button>\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Plus\" type=\"primary\" @click=\"handleScale(scope)\">扩缩</el-button>\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"RefreshLeft\" type=\"primary\" @click=\"handleConfirm(scope, '重启', restartDeployment)\">重启</el-button>\n                  <el-button size=\"small\" style=\"border-radius:2px;\" icon=\"Delete\" type=\"danger\" @click=\"handleConfirm(scope, '删除', delDeployment)\">删除</el-button>\n                </template>\n              </el-table-column>\n            </el-table>\n            <!-- 分页配置 -->\n            <!-- background 背景色灰 -->\n            <!-- size-change 单页大小改变后触发 -->\n            <!-- current-change 页数改变后触发 -->\n            <!-- current-page 当前页 -->\n            <!-- page-size 单页大小 -->\n            <!-- layout 分页器支持的功能 -->\n            <!-- total 数据总条数 -->\n            <el-pagination\n                class=\"deploy-body-pagination\"\n                background\n                @size-change=\"handleSizeChange\"\n                @current-change=\"handleCurrentChange\"\n                :current-page=\"currentPage\"\n                :page-sizes=\"pagesizeList\"\n                :page-size=\"pagesize\"\n                layout=\"total, sizes, prev, pager, next, jumper\"\n                :total=\"deploymentTotal\">\n            </el-pagination>\n          </el-card>\n        </div>\n      </el-col>\n    </el-row>\n    <!-- 抽屉：创建Deployment的表单 -->\n    <!-- v-model 值是bool，用于显示与隐藏 -->\n    <!-- direction 显示的位置 -->\n    <!-- before-close 关闭时触发，点击关闭或者点击空白都会触发 -->\n    <el-drawer\n        v-model=\"createDeploymentDrawer\"\n        :direction=\"direction\"\n        :before-close=\"handleClose\">\n      <!-- 插槽，抽屉标题 -->\n      <template #title>\n        <h4>创建Deployment</h4>\n      </template>\n      <!-- 插槽，抽屉body -->\n      <template #default>\n        <!-- flex布局,居中 -->\n        <el-row type=\"flex\" justify=\"center\">\n          <el-col :span=\"20\">\n            <!-- ref绑定控件后，js中才能用this.$ref获取该控件 -->\n            <!-- rules 定义form表单校验规则 -->\n            <el-form ref=\"createDeployment\" :rules=\"createDeploymentRules\" :model=\"createDeployment\" label-width=\"80px\">\n              <!-- prop用于rules中的校验规则的key -->\n              <el-form-item class=\"deploy-create-form\" label=\"名称\" prop=\"name\">\n                <el-input v-model=\"createDeployment.name\"></el-input>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"命名空间\" prop=\"namespace\">\n                <el-select v-model=\"createDeployment.namespace\" filterable placeholder=\"请选择\">\n                  <el-option\n                      v-for=\"(item, index) in namespaceList\"\n                      :key=\"index\"\n                      :label=\"item.metadata.name\"\n                      :value=\"item.metadata.name\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n              <!-- 数字输入框，最小为1，最大为10 -->\n              <el-form-item class=\"deploy-create-form\" label=\"副本数\" prop=\"replicas\">\n                <el-input-number v-model=\"createDeployment.replicas\" :min=\"1\" :max=\"10\"></el-input-number>\n                <!-- 气泡弹出框用于提醒上限 -->\n                <el-popover\n                    placement=\"top\"\n                    :width=\"100\"\n                    trigger=\"hover\"\n                    content=\"申请副本数上限为10个\">\n                  <template #reference>\n                    <el-icon style=\"width:2em;font-size:18px;color:#4795EE\"><WarningFilled/></el-icon>\n                  </template>\n                </el-popover>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"镜像\" prop=\"image\">\n                <el-input v-model=\"createDeployment.image\"></el-input>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"标签\" prop=\"label_str\">\n                <el-input v-model=\"createDeployment.label_str\" placeholder=\"示例: project=ms,app=gateway\"></el-input>\n              </el-form-item>\n              <!-- 下拉框，用于规格的选择，之后用/分割，得到cpu和内存 -->\n              <el-form-item class=\"deploy-create-form\" label=\"资源配额\" prop=\"resource\">\n                <el-select v-model=\"createDeployment.resource\" placeholder=\"请选择\">\n                  <el-option value=\"0.5/1\" label=\"0.5C1G\"></el-option>\n                  <el-option value=\"1/2\" label=\"1C2G\"></el-option>\n                  <el-option value=\"2/4\" label=\"2C4G\"></el-option>\n                  <el-option value=\"4/8\" label=\"4C8G\"></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"容器端口\" prop=\"container_port\">\n                <el-input v-model=\"createDeployment.container_port\" placeholder=\"示例: 80\"></el-input>\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"健康检查\" prop=\"health\">\n                <el-switch v-model=\"createDeployment.health_check\" />\n              </el-form-item>\n              <el-form-item class=\"deploy-create-form\" label=\"检查路径\" prop=\"healthPath\">\n                <el-input v-model=\"createDeployment.health_path\" placeholder=\"示例: /health\"></el-input>\n              </el-form-item>\n            </el-form>\n          </el-col>\n        </el-row>\n      </template>\n      <!-- 插槽，抽屉footer -->\n      <template #footer>\n        <!-- 点击后赋值false，隐藏抽屉 -->\n        <el-button @click=\"createDeploymentDrawer = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm('createDeployment')\">立即创建</el-button>\n      </template>\n    </el-drawer>\n    <!-- 展示YAML信息的弹框 -->\n    <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"2%\">\n      <!-- codemirror编辑器 -->\n      <!-- border 带边框 -->\n      <!-- options  编辑器配置 -->\n      <!-- change 编辑器中的内容变化时触发 -->\n      <codemirror\n          v-model:value=\"contentYaml\"\n          border\n          :options=\"cmOptions\"\n          :style=\"{ height: '500px' }\"\n          :autofocus=\"true\"\n          :tab-size=\"2\"\n          @change=\"onChange\"\n      ></codemirror>\n      <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"this.yamlDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"updateDeployment()\">更 新</el-button>\n                </span>\n      </template>\n    </el-dialog>\n    <!-- 调整副本数的弹框 -->\n    <el-dialog title=\"副本数调整\" v-model=\"scaleDialog\" width=\"25%\">\n      <div style=\"text-align:center\">\n        <span>实例数: </span>\n        <el-input-number :step=\"1\" v-model=\"scaleNum\" :min=\"0\" :max=\"30\" label=\"描述文字\"></el-input-number>\n      </div>\n      <template #footer>\n                <span class=\"dialog-footer\">\n                    <el-button @click=\"scaleDialog = false\">取 消</el-button>\n                    <el-button type=\"primary\" @click=\"scaleDeployment()\">更 新</el-button>\n                </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport yaml2obj from 'js-yaml';\nimport json2yaml from 'json2yaml';\nimport {\n  createDeployment, deleteDeployment,\n  getdeploymentdetail,\n  getdeploymentlist,\n  restartdeployment,\n  scaledeployment,\n  updatedeployment\n} from \"@/api/deployment\";\nimport {getNamespecelist} from \"@/api/namespace\";\n\n\n\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: {\n        // 语言及语法模式\n        mode: 'text/yaml',\n        // 主题\n        theme: 'darcula',\n        // 显示行数\n        lineNumbers: true,\n        smartIndent: true, //智能缩进\n        indentUnit: 4, // 智能缩进单元长度为 4 个空格\n        styleActiveLine: true, // 显示选中行的样式\n        matchBrackets: true, //每当光标位于匹配的方括号旁边时，都会使其高亮显示\n        readOnly: false,\n        lineWrapping: true //自动换行\n      },\n      contentYaml: '',\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //搜索框内容\n      searchInput: '',\n      //命名空间\n      namespaceValue: 'default',\n      namespaceList: [],\n      //列表\n      appLoading: false,\n      deploymentList: [],\n      deploymentTotal: 0,\n      getDeploymentsData: {\n        url: common.k8sDeploymentList,\n        params: {\n          filter_name: '',\n          namespace: '',\n          page: '',\n          limit: '',\n        }\n      },\n      //创建\n      fullscreenLoading: false,\n      direction: 'rtl',\n      createDeploymentDrawer: false,\n      createDeployment: {\n        name: '',\n        namespace: '',\n        replicas: 1,\n        image: '',\n        resource: '',\n        health_check: false,\n        health_path: '',\n        label_str: '',\n        label: {},\n        container_port: ''\n      },\n      //创建请求的参数\n      createDeploymentData: {\n        url: common.k8sDeploymentCreate,\n        params: {}\n      },\n      //创建deployment的表单校验规则\n      createDeploymentRules: {\n        name: [{\n          required: true,\n          message: '请填写名称',\n          trigger: 'change'\n        }],\n        image: [{\n          required: true,\n          message: '请填写镜像',\n          trigger: 'change'\n        }],\n        namespace: [{\n          required: true,\n          message: '请选择命名空间',\n          trigger: 'change'\n        }],\n        resource: [{\n          required: true,\n          message: '请选择配额',\n          trigger: 'change'\n        }],\n        label_str: [{\n          required: true,\n          message: '请填写标签',\n          trigger: 'change'\n        }],\n        container_port: [{\n          required: true,\n          message: '请填写容器端口',\n          trigger: 'change'\n        }],\n      },\n      //详情\n      deploymentDetail: {},\n      getDeploymentDetailData: {\n        params: {\n          deployment_name: '',\n          namespace: ''\n        }\n      },\n      //yaml更新\n      yamlDialog: false,\n      updateDeploymentData: {\n        params: {\n          namespace: '',\n          content: ''\n        }\n      },\n      //扩缩容\n      scaleNum: 0,\n      scaleDialog: false,\n      scaleDeploymentData: {\n        params: {\n          deployment_name: '',\n          namespace: '',\n          scale_num: ''\n        }\n      },\n      //重启\n      restartDeploymentData: {\n        params: {\n          deployment_name: '',\n          namespace: '',\n        }\n      },\n      //删除\n      delDeploymentData: {\n        params: {\n          deployment_name: '',\n          namespace: '',\n        }\n      },\n    }\n  },\n  methods: {\n    //json转yaml方法\n    transYaml(content) {\n      return json2yaml.stringify(content)\n    },\n    //yaml转对象\n    transObj(content) {\n      return yaml2obj.load(content)\n    },\n    //编辑器内容变化时触发的方式,用于将更新的内容复制到变量中\n    onChange(val) {\n      this.contentYaml = val\n    },\n    //页面大小发生变化时触发，赋值并重新获取列表\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getDeployments()\n    },\n    //页数发生变化时触发，复制并重新获取列表\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getDeployments()\n    },\n    //处理抽屉的关闭，增加体验感\n    handleClose(done) {\n      this.$confirm('确认关闭？')\n          .then(() => {\n            done();\n          })\n          .catch(() => {});\n    },\n    //字符串截取、拼接并返回\n    ellipsis(value) {\n      return value.length>15?value.substring(0,15)+'...':value\n    },\n    //格林威治时间转为北京时间\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000)\n      date = date.toJSON();\n      date = date.substring(0, 19).replace('T', ' ')\n      return date\n    },\n    //获取Namespace列表\n    getNamespaces() {\n      getNamespecelist().then(res => {\n            this.namespaceList = res.data.items\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //获取Deployment列表\n    getDeployments() {\n      //表格加载动画开启\n      this.appLoading = true\n      //getDeploymentsData是用于发起deployment列表请求的专用的对象，里面有url和params参数,以下是赋值\n      this.getDeploymentsData.params.filter_name = this.searchInput\n      this.getDeploymentsData.params.namespace = this.namespaceValue\n      this.getDeploymentsData.params.page = this.currentPage\n      this.getDeploymentsData.params.limit = this.pagesize\n      getdeploymentlist(this.getDeploymentsData.params).then(res => {\n            //响应成功，获取deployment列表和total\n            this.deploymentList = res.data.items\n            this.deploymentTotal = res.data.total\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //加载动画关闭\n      this.appLoading = false\n    },\n    //获取deployment详情，e参数标识传入的scope插槽，.row是该行的数据\n    getDeploymentDetail(e) {\n      this.getDeploymentDetailData.params.deployment_name = e.row.metadata.name\n      this.getDeploymentDetailData.params.namespace = this.namespaceValue\n      getdeploymentdetail(this.getDeploymentDetailData.params).then(res => {\n            //响应成功，获得deployment详情\n            this.deploymentDetail = res.data\n            //将对象转成yaml格式的字符串\n            this.contentYaml = this.transYaml(this.deploymentDetail)\n        console.log(this.contentYaml)\n            //打开弹出框\n            this.yamlDialog = true\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //更新deployment\n    updateDeployment() {\n      //将yaml格式的deployment对象转为json\n      let content = JSON.stringify(this.transObj(this.contentYaml))\n      this.updateDeploymentData.params.namespace = this.namespaceValue\n      this.updateDeploymentData.params.content = content\n      updatedeployment(this.updateDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            //更新后重新获取列表\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //关闭弹出框\n      this.yamlDialog = false\n    },\n    //扩缩容的中间方法，用于赋值及打开弹出框\n    handleScale(e) {\n      this.scaleDialog = true\n      this.deploymentDetail = e.row\n      this.scaleNum = e.row.spec.replicas\n    },\n    //扩缩容deployment\n    scaleDeployment() {\n      this.scaleDeploymentData.params.deployment_name = this.deploymentDetail.metadata.name\n      this.scaleDeploymentData.params.namespace = this.namespaceValue\n      this.scaleDeploymentData.params.scale_num = this.scaleNum\n      scaledeployment(this.scaleDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            //更新后重新获取列表\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //关闭弹出框\n      this.scaleDialog = false\n    },\n    //重启deployment\n    restartDeployment(e) {\n      this.restartDeploymentData.params.deployment_name = e.row.metadata.name\n      this.restartDeploymentData.params.namespace = this.namespaceValue\n      restartdeployment(this.restartDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //删除deployment\n    delDeployment(e) {\n      this.delDeploymentData.params.deployment_name = e.row.metadata.name\n      this.delDeploymentData.params.namespace = this.namespaceValue\n      deleteDeployment(this.delDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n    },\n    //弹出确认框，用于危险操作的double check\n    //obj是行数据，opeateName是操作名，fn是操作的方法\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = '确认继续 ' + operateName + ' 操作吗？'\n      //$confirm用于弹出确认框\n      this.$confirm(this.confirmContent,'提示',{\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n      })\n          .then(() => {\n            fn(obj)\n          })\n          .catch(() => {\n            this.$message.info({\n              message: '已取消操作'\n            })\n          })\n    },\n    //创建deployment，加Func的原因是因为createDeploy用于属性了\n    createDeployFunc() {\n      //正则匹配，验证label的合法性\n      let reg = new RegExp(\"(^[A-Za-z]+=[A-Za-z0-9]+).*\")\n      if (!reg.test(this.createDeployment.label_str)) {\n        this.$message.warning({\n          message: \"标签填写异常，请确认后重新填写\"\n        })\n        return\n      }\n      //加载loading动画\n      this.fullscreenLoading = true\n      //定义label、cpu和memory变量\n      let label = new Map()\n      let cpu, memory\n      //将label字符串转成数组\n      let a = (this.createDeployment.label_str).split(\",\")\n      //将数组转成map\n      a.forEach(item => {\n        let b = item.split(\"=\")\n        label[b[0]] = b[1]\n      })\n      //将deployment的规格转成cpu和memory\n      let resourceList = this.createDeployment.resource.split(\"/\")\n      cpu = resourceList[0]\n      memory = resourceList[1] + \"Gi\"\n      //赋值\n      this.createDeploymentData.params = this.createDeployment\n      this.createDeploymentData.params.container_port = parseInt(this.createDeployment.container_port)\n      this.createDeploymentData.params.label = label\n      this.createDeploymentData.params.cpu = cpu\n      this.createDeploymentData.params.memory = memory\n      createDeployment(this.createDeploymentData.params)\n          .then(res => {\n            this.$message.success({\n              message: res.msg\n            })\n            //创建后重新获取列表\n            this.getDeployments()\n          })\n          .catch(res => {\n            this.$message.error({\n              message: res.msg\n            })\n          })\n      //重置表单\n      this.resetForm('createDeployment')\n      //关闭加载动画\n      this.fullscreenLoading = false\n      //关闭抽屉\n      this.createDeploymentDrawer = false\n    },\n    //重置表单方法，element plus课程讲过的\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    //提交表单，校验参数合法性\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.createDeployFunc()\n        } else {\n          return false;\n        }\n      })\n    }\n  },\n  watch: {\n    //监听namespace的值,若发生变化，则执行handler方法中的内容\n    namespaceValue: {\n      handler() {\n        //将namespace的值存入本地，用于path切换时依旧能获取得到\n        localStorage.setItem('namespace', this.namespaceValue)\n        //重置当前页为1\n        this.currentPage = 1\n        //获取deployment列表\n        this.getDeployments()\n      }\n    },\n  },\n  beforeMount() {\n    //加载页面时先获取localStorage中的namespace值，若获取不到则默认default\n    if (localStorage.getItem('namespace') !== undefined && localStorage.getItem('namespace') !== null) {\n      this.namespaceValue = localStorage.getItem('namespace')\n    }\n    this.getNamespaces()\n    this.getDeployments()\n  }\n}\n</script>\n\n\n<style scoped>\n/* 卡片属性 */\n.deploy-head-card,.deploy-body-card {\n  border-radius: 1px;\n  margin-bottom: 5px;\n}\n/* 搜索框 */\n.deploy-head-search {\n  width:160px;\n  margin-right:10px;\n}\n/* 数据表格deployment名颜色 */\n.deploy-body-deployname {\n  color: #4795EE;\n}\n/* deployment名鼠标悬停 */\n.deploy-body-deployname:hover {\n  color: rgb(84, 138, 238);\n  cursor: pointer;\n  font-weight: bold;\n}\n</style>","import { render } from \"./Deployment.vue?vue&type=template&id=733980bc&scoped=true\"\nimport script from \"./Deployment.vue?vue&type=script&lang=js\"\nexport * from \"./Deployment.vue?vue&type=script&lang=js\"\n\nimport \"./Deployment.vue?vue&type=style&index=0&id=733980bc&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/allen/k8s-platform-fe/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-733980bc\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","style","_createElementBlock","_createVNode","_component_el_row","_component_el_col","span","_component_el_card","shadow","padding","_hoisted_2","_component_el_select","$data","$event","filterable","placeholder","_Fragment","_renderList","item","index","_createBlock","_component_el_option","key","label","metadata","name","value","offset","_component_el_button","icon","plain","onClick","$options","type","_component_el_input","clearable","_component_el_table","data","_component_el_table_column","width","align","scope","_toDisplayString","row","labels","val","_component_el_popover","placement","trigger","content","reference","_component_el_tag","status","availableReplicas","spec","replicas","creationTimestamp","template","containers","image","undefined","split","size","_component_el_pagination","background","onSizeChange","onCurrentChange","layout","total","_component_el_drawer","direction","title","_hoisted_11","default","justify","_component_el_form","ref","rules","model","_component_el_form_item","prop","namespace","_component_el_input_number","min","max","_component_el_icon","_component_WarningFilled","label_str","resource","container_port","_component_el_switch","health_check","health_path","footer","_component_el_dialog","top","yamlDialog","_component_codemirror","border","options","height","autofocus","onChange","_hoisted_18","step","cmOptions","mode","theme","lineNumbers","smartIndent","indentUnit","styleActiveLine","matchBrackets","readOnly","lineWrapping","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","appLoading","deploymentList","deploymentTotal","getDeploymentsData","url","common","params","filter_name","page","limit","fullscreenLoading","createDeploymentDrawer","createDeployment","createDeploymentData","createDeploymentRules","required","message","deploymentDetail","getDeploymentDetailData","deployment_name","updateDeploymentData","scaleNum","scaleDialog","scaleDeploymentData","scale_num","restartDeploymentData","delDeploymentData","methods","transYaml","json2yaml","stringify","transObj","yaml2obj","this","handleSizeChange","getDeployments","handleCurrentChange","handleClose","done","$confirm","then","catch","ellipsis","length","substring","timeTrans","timestamp","date","Date","getTime","toJSON","replace","getNamespaces","getNamespecelist","res","items","$message","error","msg","getdeploymentlist","getDeploymentDetail","e","getdeploymentdetail","console","log","updateDeployment","JSON","updatedeployment","success","handleScale","scaleDeployment","scaledeployment","restartDeployment","restartdeployment","delDeployment","deleteDeployment","handleConfirm","obj","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","info","createDeployFunc","reg","RegExp","test","warning","cpu","memory","Map","a","forEach","b","resourceList","parseInt","resetForm","formName","$refs","resetFields","submitForm","validate","valid","watch","handler","localStorage","setItem","beforeMount","getItem","__exports__","render"],"sourceRoot":""}