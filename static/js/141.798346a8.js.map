{"version":3,"file":"js/141.798346a8.js","mappings":"gHAAA,IAAIA,EAAc,EAAQ,MACtBC,EAAiB,EAAQ,MAE7BC,EAAOC,QAAU,SAAUC,EAAQC,EAAMC,GAGvC,OAFIA,EAAWC,KAAKP,EAAYM,EAAWC,IAAKF,EAAM,CAAEG,QAAQ,IAC5DF,EAAWG,KAAKT,EAAYM,EAAWG,IAAKJ,EAAM,CAAEK,QAAQ,IACzDT,EAAeU,EAAEP,EAAQC,EAAMC,EACxC,C,oCCNA,IAAIM,EAAW,EAAQ,MAIvBV,EAAOC,QAAU,WACf,IAAIU,EAAOD,EAASE,MAChBC,EAAS,GASb,OARIF,EAAKG,aAAYD,GAAU,KAC3BF,EAAKI,SAAQF,GAAU,KACvBF,EAAKK,aAAYH,GAAU,KAC3BF,EAAKM,YAAWJ,GAAU,KAC1BF,EAAKO,SAAQL,GAAU,KACvBF,EAAKQ,UAASN,GAAU,KACxBF,EAAKS,cAAaP,GAAU,KAC5BF,EAAKU,SAAQR,GAAU,KACpBA,CACT,C,sBCjBA,IAAIE,EAAS,EAAQ,MACjBO,EAAc,EAAQ,MACtBC,EAAwB,EAAQ,MAChCC,EAAc,EAAQ,MACtBC,EAAQ,EAAQ,MAGhBC,EAASX,EAAOW,OAChBC,EAAkBD,EAAOE,UAEzBC,EAASP,GAAeG,GAAM,WAChC,IAAIK,GAAkB,EACtB,IACEJ,EAAO,IAAK,IAGd,CAFE,MAAOK,GACPD,GAAkB,CACpB,CAEA,IAAIE,EAAI,CAAC,EAELC,EAAQ,GACRC,EAAWJ,EAAkB,SAAW,QAExCK,EAAY,SAAUC,EAAKC,GAE7BC,OAAOvC,eAAeiC,EAAGI,EAAK,CAAE/B,IAAK,WAEnC,OADA4B,GAASI,GACF,CACT,GACF,EAEIE,EAAQ,CACVrB,OAAQ,IACRH,OAAQ,IACRC,WAAY,IACZC,UAAW,IACXI,OAAQ,KAKV,IAAK,IAAIe,KAFLN,IAAiBS,EAAMzB,WAAa,KAExByB,EAAOJ,EAAUC,EAAKG,EAAMH,IAG5C,IAAIvB,EAASyB,OAAOE,yBAAyBb,EAAiB,SAAStB,IAAIoC,KAAKT,GAEhF,OAAOnB,IAAWqB,GAAYD,IAAUC,CAC1C,IAIIL,GAAQN,EAAsBI,EAAiB,QAAS,CAC1De,cAAc,EACdrC,IAAKmB,G,oBCrDP,SAA2CmB,EAAMC,GAE/C5C,EAAOC,QAAU2C,GAFnB,EASGC,MAAM,WACT,MAAO,M,mGCSP,IAGAC,EAAAA,WAGE,aA4DF,QA1DSC,EAAAA,UAAAA,SAAP,SAAgBC,GACdpC,KAAKqC,UAAYD,CAAAA,EAGZD,EAAAA,UAAAA,QAAP,aAEOA,EAAAA,UAAAA,IAAP,WACE,IAAMG,EAAOtC,KAAKuC,oBAClB,GAAKD,GAAStC,KAAKqC,UAAnB,CAKA,IAAMG,EAAQxC,KAAKqC,UAAkBI,MAGjCzC,KAAKqC,UAAUK,OAASJ,EAAKI,MAAQ1C,KAAKqC,UAAUM,OAASL,EAAKK,OACpEH,EAAKI,eAAeC,QACpB7C,KAAKqC,UAAUS,OAAOR,EAAKK,KAAML,EAAKI,MAAAA,CAAAA,EAInCP,EAAAA,UAAAA,kBAAP,WACE,GAAKnC,KAAKqC,WAILrC,KAAKqC,UAAUU,SAAY/C,KAAKqC,UAAUU,QAAQC,cAAvD,CAKA,IAAMR,EAAQxC,KAAKqC,UAAkBI,MAErC,GAAuD,IAAnDD,EAAKI,eAAeK,WAAWC,iBAA6E,IAApDV,EAAKI,eAAeK,WAAWE,iBAA3F,CAIA,IAAMC,EAAqBC,OAAOC,iBAAiBtD,KAAKqC,UAAUU,QAAQC,eACpEO,EAAsBC,SAASJ,EAAmBK,iBAAiB,WACnEC,EAAqBC,KAAKC,IAAI,EAAGJ,SAASJ,EAAmBK,iBAAiB,WAC9EI,EAAeR,OAAOC,iBAAiBtD,KAAKqC,UAAUU,SAStDe,EAAkBP,GAPjBC,SAASK,EAAaJ,iBAAiB,gBACpCD,SAASK,EAAaJ,iBAAiB,oBAO3CM,EAAiBL,GANdF,SAASK,EAAaJ,iBAAiB,kBACxCD,SAASK,EAAaJ,iBAAiB,kBAKiBjB,EAAKwB,SAASC,eAK9E,MAJiB,CACftB,KAAMgB,KAAKC,IA7DI,EA6DcD,KAAKO,MAAMH,EAAiBvB,EAAKI,eAAeK,WAAWC,kBACxFR,KAAMiB,KAAKC,IA7DI,EA6DcD,KAAKO,MAAMJ,EAAkBtB,EAAKI,eAAeK,WAAWE,mBAAAA,CAAAA,CAAAA,EAI/FhB,CA/DA,CAAAD,GAAaiC,EAAAA,SAAAA,CAAAA,GCrBTC,EAA2B,CAAC,ECEhC,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUjF,QAG3C,IAAID,EAASgF,EAAyBE,GAAY,CAGjDjF,QAAS,CAAC,GAOX,OAHAkF,EAAoBD,GAAUlF,EAAQA,EAAOC,QAASgF,GAG/CjF,EAAOC,OCjBRgF,CDCP,CCD2B,MHOpB,E,iFIVP,SAA2CtC,EAAMC,GAE/C5C,EAAOC,QAAU2C,GAFnB,EASGC,MAAM,WACT,MAAO,M,ulBCLP,cAGAuC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MASAhF,EAAAA,SAAAA,GA0BE,WACmBwC,EACAO,GAFnB,MAIET,EAAAA,KAAAA,OAAO,KAHU2C,EAAAA,UAAAA,EACAA,EAAAA,eAAAA,EAvBXA,EAAAA,qBAA+B,EAiB/BA,EAAAA,gBAA4B,GAE5BA,EAAAA,iBAA2B,GAOjCA,EAAKC,uBAAyBC,SAASC,cAAc,OACrDH,EAAKC,uBAAuBG,UAAUC,IAAI,uBAC1CL,EAAKC,uBAAuBK,SAAW,EAEvCN,EAAKO,cAAgBL,SAASC,cAAc,OAC5CH,EAAKO,cAAcC,aAAa,OAAQ,QACxCR,EAAKO,cAAcH,UAAUC,IAAI,4BACjCL,EAAKS,aAAe,GACpB,IAAK,IAAIT,EAAI,EAAGA,EAAIA,EAAKzC,UAAUK,KAAMoC,IACvCA,EAAKS,aAAaT,GAAKA,EAAKU,+BAC5BV,EAAKO,cAAcI,YAAYX,EAAKS,aAAaT,IAmBnD,GAhBAA,EAAKY,0BAA4B,SAAAvD,GAAK,SAAKwD,iBAAiBxD,EAAG,IAC/D2C,EAAKc,6BAA+B,SAAAzD,GAAK,SAAKwD,iBAAiBxD,EAAG,IAClE2C,EAAKS,aAAa,GAAGM,iBAAiB,QAASf,EAAKY,2BACpDZ,EAAKS,aAAaT,EAAKS,aAAaO,OAAS,GAAGD,iBAAiB,QAASf,EAAKc,8BAE/Ed,EAAKiB,yBACLjB,EAAKC,uBAAuBU,YAAYX,EAAKO,eAE7CP,EAAKkB,qBAAuB,IAAIvB,EAAAA,mBAAmBK,EAAKmB,YAAYC,KAAKpB,IACzEA,EAAKqB,eAELrB,EAAKsB,YAAcpB,SAASC,cAAc,OAC1CH,EAAKsB,YAAYlB,UAAUC,IAAI,eAC/BL,EAAKsB,YAAYd,aAAa,YAAa,aAC3CR,EAAKC,uBAAuBU,YAAYX,EAAKsB,cAExCtB,EAAKzC,UAAUU,QAClB,MAAM,IAAIsD,MAAM,oD,OAElBvB,EAAKzC,UAAUU,QAAQuD,sBAAsB,aAAcxB,EAAKC,wBAEhED,EAAKyB,SAASzB,EAAKkB,sBACnBlB,EAAKyB,SAASzB,EAAKzC,UAAUmE,UAAS,SAAArE,GAAK,SAAKsE,UAAUtE,EAAEO,KAAAA,KAC5DoC,EAAKyB,SAASzB,EAAKzC,UAAUqE,UAAS,SAAAvE,GAAK,SAAKgE,aAAahE,EAAEwE,MAAOxE,EAAEyE,IAAAA,KACxE9B,EAAKyB,SAASzB,EAAKzC,UAAUwE,UAAS,WAAM,SAAKV,cAAAA,KAEjDrB,EAAKyB,SAASzB,EAAKzC,UAAUyE,YAAW,YAAQ,SAAKC,QAAQC,EAAAA,KAC7DlC,EAAKyB,SAASzB,EAAKzC,UAAU4E,YAAW,WAAM,SAAKF,QAAQ,UAC3DjC,EAAKyB,SAASzB,EAAKzC,UAAU6E,WAAU,YAAc,SAAKC,OAAOC,EAAAA,KACjEtC,EAAKyB,SAASzB,EAAKzC,UAAUgF,OAAM,SAAAlF,GAAK,SAAKmF,OAAOnF,EAAEX,IAAAA,KACtDsD,EAAKyB,SAASzB,EAAKzC,UAAUkF,QAAO,WAAM,SAAKC,kBAAAA,KAC/C1C,EAAKyB,SAASzB,EAAKlC,eAAe6E,oBAAmB,WAAM,SAAK1B,wBAAAA,KAEhEjB,EAAK4C,kBAAoB,IAAI9C,EAAAA,iBAC7BE,EAAKyB,SAASzB,EAAK4C,mBACnB5C,EAAK4C,kBAAkBC,aAAY,WAAM,SAAK5B,wBAAAA,IAG9CjB,EAAKyB,UAAAA,EAAS,EAAAqB,0BAAyBvE,OAAQ,UAAU,WAAM,SAAK0C,wBAAAA,KAnBpE,CAsNJ,QArR0C8B,EAAAA,EAAAA,GAqFjC1D,EAAAA,UAAAA,QAAP,WACEhC,EAAAA,UAAM2F,QAAOjG,KAAA,SACb,EAAAkG,yBAAwB/H,KAAK+E,wBAC7B/E,KAAKuF,aAAaO,OAAS,GAGrB3B,EAAAA,UAAAA,iBAAR,SAAyBhC,EAAe6F,GACtC,IAAMC,EAAkB9F,EAAE7C,OACpB4I,EAAwBlI,KAAKuF,aAA0B,IAAbyC,EAAoC,EAAIhI,KAAKuF,aAAaO,OAAS,GAKnH,GAFiBmC,EAAgBE,aAAa,oBACd,IAAbH,EAAoC,IAAM,GAAGhI,KAAKqC,UAAU+F,OAAOC,MAAMvC,SAOxF3D,EAAEmG,gBAAkBJ,EAAxB,CAKA,IAAIK,EACAC,EAgBJ,GAfiB,IAAbR,GACFO,EAAqBN,EACrBO,EAAwBxI,KAAKuF,aAAakD,MAC1CzI,KAAKqF,cAAcqD,YAAYF,KAE/BD,EAAqBvI,KAAKuF,aAAaoD,QACvCH,EAAwBP,EACxBjI,KAAKqF,cAAcqD,YAAYH,IAIjCA,EAAmBK,oBAAoB,QAAS5I,KAAK0F,2BACrD8C,EAAsBI,oBAAoB,QAAS5I,KAAK4F,8BAGvC,IAAboC,EAAmC,CACrC,IAAMa,EAAa7I,KAAKwF,+BACxBxF,KAAKuF,aAAauD,QAAQD,GAC1B7I,KAAKqF,cAAciB,sBAAsB,aAAcuC,EAAAA,MAEjDA,EAAa7I,KAAKwF,+BACxBxF,KAAKuF,aAAawD,KAAKF,GACvB7I,KAAKqF,cAAcI,YAAYoD,GAIjC7I,KAAKuF,aAAa,GAAGM,iBAAiB,QAAS7F,KAAK0F,2BACpD1F,KAAKuF,aAAavF,KAAKuF,aAAaO,OAAS,GAAGD,iBAAiB,QAAS7F,KAAK4F,8BAG/E5F,KAAKqC,UAAU2G,YAAyB,IAAbhB,GAAqC,EAAI,GAGpEhI,KAAKuF,aAA0B,IAAbyC,EAAoC,EAAIhI,KAAKuF,aAAaO,OAAS,GAAGmD,QAGxF9G,EAAE+G,iBACF/G,EAAEgH,0BAAAA,CAAAA,EAGIhF,EAAAA,UAAAA,UAAR,SAAkBzB,GAEhB1C,KAAKuF,aAAavF,KAAKuF,aAAaO,OAAS,GAAG8C,oBAAoB,QAAS5I,KAAK4F,8BAGlF,IAAK,IAAId,EAAI9E,KAAKqF,cAAc+D,SAAStD,OAAQhB,EAAI9E,KAAKqC,UAAUK,KAAMoC,IACxE9E,KAAKuF,aAAaT,GAAK9E,KAAKwF,+BAC5BxF,KAAKqF,cAAcI,YAAYzF,KAAKuF,aAAaT,IAGnD,KAAO9E,KAAKuF,aAAaO,OAASpD,GAChC1C,KAAKqF,cAAcqD,YAAY1I,KAAKuF,aAAakD,OAInDzI,KAAKuF,aAAavF,KAAKuF,aAAaO,OAAS,GAAGD,iBAAiB,QAAS7F,KAAK4F,8BAE/E5F,KAAK+F,wBAAAA,EAGC5B,EAAAA,UAAAA,6BAAR,WACE,IAAMpB,EAAUiC,SAASC,cAAc,OAIvC,OAHAlC,EAAQuC,aAAa,OAAQ,YAC7BvC,EAAQqC,UAAY,EACpBpF,KAAKqJ,sBAAsBtG,GACpBA,CAAAA,EAGDoB,EAAAA,UAAAA,OAAR,SAAeiD,GACb,IAAK,IAAItC,EAAI,EAAGA,EAAIsC,EAAYtC,IAC9B9E,KAAK+G,QAAQ,MAIT5C,EAAAA,UAAAA,QAAR,SAAgB6C,GAAhB,WACMhH,KAAKsJ,qBAAuBC,KAC1BvJ,KAAKwJ,gBAAgB1D,OAAS,EAEZ9F,KAAKwJ,gBAAgBb,UACrB3B,IAClBhH,KAAKyJ,kBAAoBzC,GAG3BhH,KAAKyJ,kBAAoBzC,EAGd,OAATA,IACFhH,KAAKsJ,uBAC6BC,KAA9BvJ,KAAKsJ,uBACPtJ,KAAKoG,YAAYsD,aAAeC,EAAQC,gBAKxCpF,EAAAA,OACExE,KAAKoG,YAAYsD,aAAe1J,KAAKoG,YAAYsD,YAAY5D,OAAS,IAAM9F,KAAKoG,YAAYyD,YAC/FC,YAAW,WACT3F,EAAKY,uBAAuBU,YAAYtB,EAAKiC,YAAAA,GAC5C,KAMHjC,EAAAA,UAAAA,iBAAR,WACEnE,KAAKoG,YAAYsD,YAAc,GAC/B1J,KAAKsJ,qBAAuB,EAGxB9E,EAAAA,QAAAA,EACF,EAAAuD,yBAAwB/H,KAAKoG,YAAAA,EAIzBjC,EAAAA,UAAAA,OAAR,SAAe4F,GACb/J,KAAKwH,mBACLxH,KAAKwJ,gBAAgBT,KAAKgB,EAAAA,EAGpB5F,EAAAA,UAAAA,aAAR,SAAqBwC,EAAgBC,GACnC5G,KAAKgG,qBAAqBgE,QAAQrD,EAAOC,EAAK5G,KAAKqC,UAAUK,KAAAA,EAGvDyB,EAAAA,UAAAA,YAAR,SAAoBwC,EAAeC,GAGjC,IAFA,IAAMwB,EAAkBpI,KAAKqC,UAAU+F,OACjC6B,EAAU7B,EAAOC,MAAMvC,OAAOoE,WAC3BpF,EAAI6B,EAAO7B,GAAK8B,EAAK9B,IAAK,CACjC,IAAMqF,EAAW/B,EAAOgC,4BAA4BhC,EAAOiC,MAAQvF,GAAAA,GAC7DwF,GAAYlC,EAAOiC,MAAQvF,EAAI,GAAGoF,WAClCnH,EAAU/C,KAAKuF,aAAaT,GAC9B/B,IACsB,IAApBoH,EAASrE,OACX/C,EAAQwH,UAAY,IAEpBxH,EAAQ2G,YAAcS,EAExBpH,EAAQuC,aAAa,gBAAiBgF,GACtCvH,EAAQuC,aAAa,eAAgB2E,GAGzCjK,CAAAA,KAAKwK,qBAAAA,EAGCrG,EAAAA,UAAAA,uBAAR,WACE,GAAKnE,KAAK4C,eAAeK,WAAWE,iBAApC,CAGInD,KAAKuF,aAAaO,SAAW9F,KAAKqC,UAAUK,MAC9C1C,KAAKyG,UAAUzG,KAAKqC,UAAUK,MAEhC,IAAK,IAAIoC,EAAI,EAAGA,EAAI9E,KAAKqC,UAAUK,KAAMoC,IACvC9E,KAAKqJ,sBAAsBrJ,KAAKuF,aAAaT,GAAAA,CAAAA,EAIzCX,EAAAA,UAAAA,sBAAR,SAA8BpB,GAC5BA,EAAQ0H,MAAMC,OAAY1K,KAAK4C,eAAeK,WAAWE,iBAAgB,MAGnEgB,EAAAA,UAAAA,oBAAR,WACuC,IAAjCnE,KAAKyJ,iBAAiB3D,SAG1B9F,KAAKoG,YAAYsD,aAAe1J,KAAKyJ,iBACrCzJ,KAAKyJ,iBAAmB,KAE5BtF,CArRA,CAAAtE,CAA0C8E,EAAAA,YAA7BR,EAAAA,qBAAAA,CAAAwG,E,aCXb,SAAgBC,EAAuBC,GACrC,OAAOA,EAAKC,QAAQ,SAAU,KAOhC,UAAgBC,EAAoBF,EAAcG,GAChD,OAAIA,EACK,SAAcH,EAAO,SAEvBA,CA4BT,UAAgBI,EAAMJ,EAAcK,EAA+BC,GAEjEN,EAAOE,EADPF,EAAOD,EAAuBC,GACGM,EAAYC,gBAAgBJ,oBAC7DG,EAAYE,iBAAiBR,GAAAA,GAC7BK,EAASI,MAAQ,EAQnB,UAAgBC,EAA6BC,EAAgBN,EAA+BO,GAG1F,IAAMC,EAAMD,EAAcE,wBACpBC,EAAOJ,EAAGK,QAAUH,EAAIE,KAAO,GAC/BE,EAAMN,EAAGO,QAAUL,EAAII,IAAM,GAGnCZ,EAAST,MAAMuB,MAAQ,OACvBd,EAAST,MAAMC,OAAS,OACxBQ,EAAST,MAAMmB,KAAUA,EAAI,KAC7BV,EAAST,MAAMqB,IAASA,EAAG,KAC3BZ,EAAST,MAAMwB,OAAS,OAExBf,EAASjC,O,oMAlEX9E,EAAAA,uBAAAA,EAQAA,EAAAA,oBAAAA,EAWAA,EAAAA,YAAAA,SAA4BqH,EAAoBU,GAC1CV,EAAGW,eACLX,EAAGW,cAAcC,QAAQ,aAAcF,EAAiBG,eAG1Db,EAAGtC,gBAAAA,EAQL/E,EAAAA,iBAAAA,SAAiCqH,EAAoBN,EAA+BC,GAClFK,EAAGc,kBACCd,EAAGW,eAELlB,EADaO,EAAGW,cAAcI,QAAQ,cAC1BrB,EAAUC,EAAAA,EAI1BhH,EAAAA,MAAAA,EAYAA,EAAAA,6BAAAA,EAwBAA,EAAAA,kBAAAA,SAAkCqH,EAAgBN,EAA+BO,EAA4BS,EAAqCM,GAChJjB,EAA6BC,EAAIN,EAAUO,GAEvCe,GACFN,EAAiBO,iBAAiBjB,GAIpCN,EAASI,MAAQY,EAAiBG,cAClCnB,EAASwB,QAAAA,CAAAA,E,0FCzFX,0BAAAvK,IACU,KAAAwK,OAAoF,CAAC,EACrF,KAAAC,MAAmF,CAAC,CA4B9F,QA1BSzK,EAAAA,UAAAA,MAAP,WACEnC,KAAK2M,OAAS,CAAC,EACf3M,KAAK4M,MAAQ,CAAC,CAAD,EAGRzK,EAAAA,UAAAA,OAAP,SAAc0K,EAAYC,EAAYxB,GAC/BtL,KAAK4M,MAAMC,KACd7M,KAAK4M,MAAMC,GAAM,CAAC,GAEpB7M,KAAK4M,MAAMC,GAAKC,GAAMxB,CAAAA,EAGjBnJ,EAAAA,UAAAA,OAAP,SAAc0K,EAAYC,GACxB,OAAO9M,KAAK4M,MAAMC,GAAM7M,KAAK4M,MAAMC,GAAKC,QAAAA,CAAMC,EAGzC5K,EAAAA,UAAAA,SAAP,SAAgB0K,EAAYC,EAAYxB,GACjCtL,KAAK2M,OAAOE,KACf7M,KAAK2M,OAAOE,GAAM,CAAC,GAErB7M,KAAK2M,OAAOE,GAAKC,GAAMxB,CAAAA,EAGlBnJ,EAAAA,UAAAA,SAAP,SAAgB0K,EAAYC,GAC1B,OAAO9M,KAAK2M,OAAOE,GAAM7M,KAAK2M,OAAOE,GAAKC,QAAAA,CAAMC,EAEpD5K,CA9BA,IAAagC,EAAAA,mBAAAA,CAAAA,E,maCDb,cACA6I,EAAAA,EAAAA,MAYMC,EAAqBpF,EAAAA,IAAIqF,QAAQ,WACjCC,EAAqBtF,EAAAA,IAAIqF,QAAQ,WACjCE,EAAiBvF,EAAAA,IAAIqF,QAAQ,WAC7BG,EAAwBxF,EAAAA,IAAIqF,QAAQ,WACpCI,EAAoB,CACxBC,IAAK,2BACLC,KAAM,YAIKrJ,EAAAA,oBAAsBzC,OAAO+L,OAAO,WAyB/C,IAxBA,IAAMC,EAAS,CAEb7F,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WAEZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,WACZrF,EAAAA,IAAIqF,QAAQ,YAKRS,EAAI,CAAC,EAAM,GAAM,IAAM,IAAM,IAAM,KAChC7I,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAM5C,EAAIyL,EAAG7I,EAAI,GAAM,EAAI,GACrB8I,EAAID,EAAG7I,EAAI,EAAK,EAAI,GACpB+I,EAAIF,EAAE7I,EAAI,GAChB4I,EAAO3E,KAAK,CACVwE,IAAK1F,EAAAA,SAASiG,MAAM5L,EAAG0L,EAAGC,GAC1BL,KAAM3F,EAAAA,SAASkG,OAAO7L,EAAG0L,EAAGC,IAKhC,KAAS/I,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMJ,EAAI,EAAQ,GAAJI,EACd4I,EAAO3E,KAAK,CACVwE,IAAK1F,EAAAA,SAASiG,MAAMpJ,EAAGA,EAAGA,GAC1B8I,KAAM3F,EAAAA,SAASkG,OAAOrJ,EAAGA,EAAGA,IAIhC,QAAOgJ,CA5CwC,KAkDjD,iBAOE,WAAY1I,EAA2BgJ,GAAA,KAAAA,kBAAA,EACrC,IAAMC,EAASjJ,EAASC,cAAc,UACtCgJ,EAAOjC,MAAQ,EACfiC,EAAOvD,OAAS,EAChB,IAAMwD,EAAMD,EAAOE,WAAW,MAC9B,IAAKD,EACH,MAAM,IAAI7H,MAAM,mCAElBrG,KAAKoO,KAAOF,EACZlO,KAAKoO,KAAKC,yBAA2B,OACrCrO,KAAKsO,aAAetO,KAAKoO,KAAKG,qBAAqB,EAAG,EAAG,EAAG,GAC5DvO,KAAKwO,eAAiB,IAAIxB,EAAAA,mBAC1BhN,KAAK0N,OAAS,CACZe,WAAYxB,EACZyB,WAAYvB,EACZwB,OAAQvB,EACRwB,aAAcvB,EACdwB,qBAAsBvB,EACtBwB,gBAAiBjH,EAAAA,MAAMkH,MAAM5B,EAAoBG,GACjD0B,yBAAqB,EACrBC,KAAM9K,EAAAA,oBAAoB+K,QAC1BC,cAAenP,KAAKwO,gBAEtBxO,KAAKoP,sBA6JT,QA1JSjN,EAAAA,UAAAA,gBAAP,SAAuBX,GACT,yBAARA,GACFxB,KAAKwO,eAAe3L,OAAAA,EASjBV,EAAAA,UAAAA,SAAP,SAAgBkN,QAAAA,IAAAA,IAAAA,EAAAA,CAAAA,GACdrP,KAAK0N,OAAOe,WAAazO,KAAKsP,YAAYD,EAAMZ,WAAYxB,GAC5DjN,KAAK0N,OAAOgB,WAAa1O,KAAKsP,YAAYD,EAAMX,WAAYvB,GAC5DnN,KAAK0N,OAAOiB,OAAS3O,KAAKsP,YAAYD,EAAMV,OAAQvB,GAAAA,GACpDpN,KAAK0N,OAAOkB,aAAe5O,KAAKsP,YAAYD,EAAMT,aAAcvB,GAAAA,GAChErN,KAAK0N,OAAOmB,qBAAuB7O,KAAKsP,YAAYD,EAAME,UAAWjC,GAAAA,GACrEtN,KAAK0N,OAAOoB,gBAAkBjH,EAAAA,MAAMkH,MAAM/O,KAAK0N,OAAOgB,WAAY1O,KAAK0N,OAAOmB,sBAC9E,IAAMW,EAAoB,CACxBjC,IAAK,GACLC,KAAM,GAERxN,KAAK0N,OAAOsB,oBAAsBK,EAAML,oBAAsBhP,KAAKsP,YAAYD,EAAML,oBAAqBQ,QAAAA,EACtGxP,KAAK0N,OAAOsB,sBAAwBQ,IACtCxP,KAAK0N,OAAOsB,yBAAAA,GAOVnH,EAAAA,MAAM4H,SAASzP,KAAK0N,OAAOmB,wBAE7B7O,KAAK0N,OAAOmB,qBAAuBhH,EAAAA,MAAM6H,QAAQ1P,KAAK0N,OAAOmB,qBAD7C,KAGlB7O,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMM,MAAOxL,EAAAA,oBAAoB,IACxEnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMO,IAAKzL,EAAAA,oBAAoB,IACtEnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMQ,MAAO1L,EAAAA,oBAAoB,IACxEnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMS,OAAQ3L,EAAAA,oBAAoB,IACzEnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMU,KAAM5L,EAAAA,oBAAoB,IACvEnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMW,QAAS7L,EAAAA,oBAAoB,IAC1EnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMY,KAAM9L,EAAAA,oBAAoB,IACvEnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMa,MAAO/L,EAAAA,oBAAoB,IACxEnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMc,YAAahM,EAAAA,oBAAoB,IAC9EnE,KAAK0N,OAAOuB,KAAK,GAAKjP,KAAKsP,YAAYD,EAAMe,UAAWjM,EAAAA,oBAAoB,IAC5EnE,KAAK0N,OAAOuB,KAAK,IAAMjP,KAAKsP,YAAYD,EAAMgB,YAAalM,EAAAA,oBAAoB,KAC/EnE,KAAK0N,OAAOuB,KAAK,IAAMjP,KAAKsP,YAAYD,EAAMiB,aAAcnM,EAAAA,oBAAoB,KAChFnE,KAAK0N,OAAOuB,KAAK,IAAMjP,KAAKsP,YAAYD,EAAMkB,WAAYpM,EAAAA,oBAAoB,KAC9EnE,KAAK0N,OAAOuB,KAAK,IAAMjP,KAAKsP,YAAYD,EAAMmB,cAAerM,EAAAA,oBAAoB,KACjFnE,KAAK0N,OAAOuB,KAAK,IAAMjP,KAAKsP,YAAYD,EAAMoB,WAAYtM,EAAAA,oBAAoB,KAC9EnE,KAAK0N,OAAOuB,KAAK,IAAMjP,KAAKsP,YAAYD,EAAMqB,YAAavM,EAAAA,oBAAoB,KAE/EnE,KAAKwO,eAAe3L,QACpB7C,KAAKoP,sBAAAA,EAGAjN,EAAAA,UAAAA,aAAP,SAAoBwO,GAElB,QAAI,IAAAA,EAMJ,OAAQA,GACN,KAAK,IACH3Q,KAAK0N,OAAOe,WAAazO,KAAK4Q,eAAenC,WAC7C,MACF,KAAK,IACHzO,KAAK0N,OAAOgB,WAAa1O,KAAK4Q,eAAelC,WAC7C,MACF,KAAK,IACH1O,KAAK0N,OAAOiB,OAAS3O,KAAK4Q,eAAejC,OACzC,MACF,QACE3O,KAAK0N,OAAOuB,KAAK0B,GAAQ3Q,KAAK4Q,eAAe3B,KAAK0B,QAhBpD,IAAK,IAAI7L,EAAI,EAAGA,EAAI9E,KAAK4Q,eAAe3B,KAAKnJ,SAAUhB,EACrD9E,KAAK0N,OAAOuB,KAAKnK,GAAK9E,KAAK4Q,eAAe3B,KAAKnK,EAAAA,EAmB7C3C,EAAAA,UAAAA,qBAAR,WACEnC,KAAK4Q,eAAiB,CACpBnC,WAAYzO,KAAK0N,OAAOe,WACxBC,WAAY1O,KAAK0N,OAAOgB,WACxBC,OAAQ3O,KAAK0N,OAAOiB,OACpBM,KAAMjP,KAAK0N,OAAOuB,KAAKC,QAAAA,EAInB/M,EAAAA,UAAAA,YAAR,SACEoL,EACAsD,EACA7C,GAEA,QAAI,IAFJA,IAAAA,EAA6BhO,KAAKgO,wBAAAA,IAE9BT,EACF,OAAOsD,EAQT,GAFA7Q,KAAKoO,KAAK0C,UAAY9Q,KAAKsO,aAC3BtO,KAAKoO,KAAK0C,UAAYvD,EACa,iBAAxBvN,KAAKoO,KAAK0C,UAEnB,OADAC,QAAQC,KAAK,UAAUzD,EAAG,8BAA8BsD,EAAStD,KAC1DsD,EAGT7Q,KAAKoO,KAAK6C,SAAS,EAAG,EAAG,EAAG,GAC5B,IAAMC,EAAOlR,KAAKoO,KAAK+C,aAAa,EAAG,EAAG,EAAG,GAAGD,KAGhD,GAAgB,MAAZA,EAAK,GAAa,CACpB,IAAKlD,EAqBH,OAJA+C,QAAQC,KACN,UAAUzD,EAAV,0EACkBsD,EAAStD,IAAG,KAEzBsD,EAKH,QAAe7Q,KAAKoO,KAAK0C,UAAUM,UAAU,EAAGpR,KAAKoO,KAAK0C,UAAUhL,OAAS,GAAGuL,MAAM,KAAKC,KAAI,YAAa,OAAAC,OAAOC,EAAAA,IAAW,GAA7HtP,EAACsC,EAAAA,GAAEoJ,EAACpJ,EAAAA,GAAEqJ,EAACrJ,EAAAA,GAAEC,EAACD,EAAAA,GACXiN,EAAQ9N,KAAK+N,MAAU,IAAJjN,GAEzB,MAAO,CACL+I,KAFmB3F,EAAAA,SAASkG,OAAO7L,EAAG0L,EAAGC,EAAG4D,GAG5ClE,IAAGpL,EAIP,OAAO,CAGLoL,IAAKvN,KAAKoO,KAAK0C,UACftD,KAAM3F,EAAAA,SAASkG,OAAOmD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAG5D/O,CA3LA,IAAagC,EAAAA,aAAAA,CAAAwN,E,0aC3EbxN,EAAAA,wBAAAA,W,cAAwC0D,EAAAA,GAAAmF,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAnF,EAAAA,GAAAA,UAAAA,G,IACtC,IAAgB,WAAQpD,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAArB,IAAMtC,EAACsC,EAAAA,MACM,QAAhBK,EAAAA,MAAAA,OAAAA,EAAA3C,EAAGa,qBAAAA,IAAa8B,GAAAA,EAAE4D,YAAYvG,EAAAA,C,qMCKlCgC,EAAAA,yBAAAA,SACEyN,EACAC,EACAC,EACAC,GAEAH,EAAK/L,iBAAiBgM,EAAMC,EAASC,GACrC,IAAIC,GAAAA,EACJ,MAAO,CACLlK,QAAS,WACHkK,IAGJA,GAAAA,EACAJ,EAAKhJ,oBAAoBiJ,EAAMC,EAASC,GAAAA,EAAAA,CAAAA,E,0gBCnB9C,cACAvN,EAAAA,EAAAA,MAYAC,EAAAA,WAwBE,WACqCwN,EACLC,EACIC,GAFC,KAAAF,eAAA,EACL,KAAAC,YAAA,EACI,KAAAC,gBAAA,EAnB1B,KAAAC,cAA0C,GAM5C,KAAAC,mBAAqB,EAGrB,KAAAC,qBAAuB,IAAItF,EAAAA,aAE3B,KAAAuF,qBAAuB,IAAIvF,EAAAA,aAE3B,KAAAwF,eAAiB,IAAIxF,EAAAA,aAQ3BhN,KAAKyS,eAAiB,CACpB9L,WAAO,EACPC,SAAK,EAiSX,QA9SElF,OAAAA,eAAWS,EAAAA,UAAA,sBAAmB,C,IAA9B,WAA4D,OAAOnC,KAAKsS,qBAAqBI,KAAAA,E,gCAE7FhR,OAAAA,eAAWS,EAAAA,UAAA,sBAAmB,C,IAA9B,WAA4D,OAAOnC,KAAKuS,qBAAqBG,KAAAA,E,gCAE7FhR,OAAAA,eAAWS,EAAAA,UAAA,gBAAa,C,IAAxB,WAAsD,OAAOnC,KAAKwS,eAAeE,KAAAA,E,gCAiB1EvQ,EAAAA,UAAAA,YAAP,SAAmBY,EAAsB4P,GACvC3S,KAAK4S,SAAW7P,EAChB/C,KAAK6S,kBAAoBF,CAAAA,EAQpBxQ,EAAAA,UAAAA,YAAP,SAAmBwE,EAAeC,GAAlC,WAEO5G,KAAK6S,yBAAAA,IAKN7S,KAAKyS,eAAe9L,YAAAA,IAAuB3G,KAAKyS,eAAe7L,KACjE5G,KAAKyS,eAAe9L,MAAQA,EAC5B3G,KAAKyS,eAAe7L,IAAMA,IAE1B5G,KAAKyS,eAAe9L,MAAQhD,KAAKmP,IAAI9S,KAAKyS,eAAe9L,MAAOA,GAChE3G,KAAKyS,eAAe7L,IAAMjD,KAAKC,IAAI5D,KAAKyS,eAAe7L,IAAKA,IAI9D5G,KAAK6S,kBAAkBE,SAASpM,EAAOC,GAGnC5G,KAAKgT,gBACPC,aAAajT,KAAKgT,gBAIpBhT,KAAKgT,eAAiBlJ,YAAW,WAAM,SAAKoJ,cAAAA,GAAgBC,EAAUC,oBAAAA,EAMhEjR,EAAAA,UAAAA,aAAR,WACEnC,KAAKgT,oBAAAA,EACL,IAAM5K,EAASpI,KAAKiS,eAAe7J,OAEnC,QAAI,IAAApI,KAAKyS,eAAe9L,YAAAA,IAAuB3G,KAAKyS,eAAe7L,IAAnE,CAMA,IAAMyM,EAAwBjL,EAAOiC,MAAQrK,KAAKyS,eAAe9L,MACjE,KAAI0M,GAAyBjL,EAAOC,MAAMvC,QAA1C,CAoBA,IAfA,IAAMwN,EAAsBlL,EAAOiC,MAAQ1G,KAAKmP,IAAI9S,KAAKyS,eAAe7L,IAAK5G,KAAKiS,eAAevP,MAAQ,EAYnG6Q,EAAoB5P,KAAK6P,KAhHP,IAgHkCxT,KAAKiS,eAAetP,MACxE8Q,EAAWzT,KAAKiS,eAAe7J,OAAOqL,UAAAA,EACnCJ,EAAuBC,EAAqBC,EAAmBA,GACjEE,EAASC,WAEd,IADA,IAAMvJ,EAAwCsJ,EAASE,OAC9C7O,EAAI,EAAGA,EAAI9E,KAAKoS,cAActM,OAAQhB,IAC7C9E,KAAK4T,cAAczJ,EAAS0J,MAAMC,MAAO3J,EAAS4J,QAAS/T,KAAKoS,cAActN,IAIlF9E,KAAKyS,eAAe9L,WAAAA,EACpB3G,KAAKyS,eAAe7L,SAAAA,CAAMmG,CAAAA,MAlCxB/M,KAAKkS,YAAY8B,MAAM,2DA+CpB7R,EAAAA,UAAAA,oBAAP,SAA2B8R,EAAenC,EAA6BC,GACrE,QAAI,IADiEA,IAAAA,EAAAA,CAAAA,IAChED,EACH,MAAM,IAAIzL,MAAM,2BAElB,IAAM6N,EAAkC,CACtCC,GAAInU,KAAKqS,qBACT4B,MAAK9R,EACL2P,QAAO3N,EACPiQ,WAAYrC,EAAQqC,WACpBC,mBAAoBtC,EAAQsC,mBAC5BC,qBAAsBvC,EAAQwC,gBAC9BC,mBAAoBzC,EAAQ0C,cAC5BC,iBAAkB3C,EAAQ2C,iBAC1BC,SAAU5C,EAAQ4C,UAAY,GAGhC,OADA3U,KAAK4U,sBAAsBV,GACpBA,EAAQC,EAAAA,EASThS,EAAAA,UAAAA,sBAAR,SAA8B+R,GAC5B,GAAkC,IAA9BlU,KAAKoS,cAActM,OAAvB,CAKA,IAAK,IAAIhB,EAAI9E,KAAKoS,cAActM,OAAS,EAAGhB,GAAK,EAAGA,IAClD,GAAIoP,EAAQS,UAAY3U,KAAKoS,cAActN,GAAG6P,SAE5C,YADA3U,KAAKoS,cAAcyC,OAAO/P,EAAI,EAAG,EAAGoP,GAKxClU,KAAKoS,cAAcyC,OAAO,EAAG,EAAGX,EAAAA,MAX9BlU,KAAKoS,cAAcrJ,KAAKmL,EAAAA,EAmBrB/R,EAAAA,UAAAA,sBAAP,SAA6B2S,GAC3B,IAAK,IAAIhQ,EAAI,EAAGA,EAAI9E,KAAKoS,cAActM,OAAQhB,IAC7C,GAAI9E,KAAKoS,cAActN,GAAGqP,KAAOW,EAE/B,OADA9U,KAAKoS,cAAcyC,OAAO/P,EAAG,MAIjC,OAAO,GASD3C,EAAAA,UAAAA,cAAR,SAAsB4S,EAAkBlK,EAAcqJ,GAKpD,IALF,IAGMc,EAHN,OAEQC,EAAM,IAAInU,OAAOoT,EAAQD,MAAMiB,QAAShB,EAAQD,MAAMkB,OAAS,IAAM,KAEvEC,GAAe,EAJrB,aAMI,IAAMC,EAAML,EAAoC,iBAAvBd,EAAQE,WAA0B,EAAIF,EAAQE,YACvE,IAAKiB,EAAL,OAGE3Q,EAAKwN,YAAY8B,MAAM,+CAAgDgB,EAAOd,GAA9E,QAUF,GAFAkB,EAAcvK,EAAKyK,QAAQD,EAAKD,EAAc,GAC9CH,EAAIM,UAAYH,EAAcC,EAAIvP,OAC9BsP,EAAc,EAAlB,cAMA,IAAMI,EAAc9Q,EAAKuN,eAAe7J,OAAOqN,yBAAyBV,EAAUK,GAClF,GAAII,EAAY,GAAK,EAArB,cAKA,IAAME,EAAOhR,EAAKuN,eAAe7J,OAAOC,MAAM5I,IAAI+V,EAAY,IAC9D,IAAKE,EAAL,cAIA,IAAMC,EAAOD,EAAKE,MAAMJ,EAAY,IAC9B1I,EAAK6I,EAAQA,GAAQ,EAAK,WAE5BzB,EAAQG,mBACVH,EAAQG,mBAAmBgB,GAAK,YAE1BxN,EAAKmL,gBAGL6C,GACFhO,EAAKiO,SAASN,EAAY,GAAIA,EAAY,GAAK3N,EAAKoK,eAAe7J,OAAOiC,MAAOgL,EAAKnB,EAASpH,EAAAA,IAInGpI,EAAKoR,SAASN,EAAY,GAAIA,EAAY,GAAK9Q,EAAKuN,eAAe7J,OAAOiC,MAAOgL,EAAKnB,EAASpH,EAAAA,EAnDrG,OAKsC,QAA5BkI,EAAQC,EAAIc,KAAKlL,KAAW,gB,EA2D9B1I,EAAAA,UAAAA,SAAR,SAAiB6T,EAAWC,EAAWZ,EAAanB,EAAuBpH,GAA3E,WACE,GAAK9M,KAAK6S,mBAAsB7S,KAAK4S,SAArC,CAIA,IAAM5G,EAAQhM,KAAKmS,gBAAgB+D,mBAAmBb,GAChDc,EAAKH,EAAIhW,KAAKiS,eAAetP,KAC7ByT,EAAKH,EAAItS,KAAKO,MAAM8R,EAAIhW,KAAKiS,eAAetP,MAC9C0T,GAAMF,EAAKnK,GAAShM,KAAKiS,eAAetP,KACxC2T,EAAKF,EAAKzS,KAAKO,OAAOiS,EAAKnK,GAAShM,KAAKiS,eAAetP,MACjD,IAAP0T,IACFA,EAAKrW,KAAKiS,eAAetP,KACzB2T,KAGFtW,KAAK6S,kBAAkB1N,IAAI,IAAIoR,EAC7BJ,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,GACL,SAAAnU,GACE,GAAI+R,EAAQpC,QACV,OAAOoC,EAAQpC,QAAQ3P,EAAGkT,GAE5B,IAAMmB,EAAYnT,OAAOoT,OACrBD,GACFA,EAAUE,OAAS,KACnBF,EAAUG,SAASC,KAAOvB,GAE1BtE,QAAQC,KAAK,0DAGjB,WACEhE,EAAKsF,qBAAqBuE,KAAK7J,EAAK8J,sBAAsBX,EAAIC,EAAIC,EAAIC,EAAIxJ,IAC1EE,EAAK4F,SAAU1N,UAAUC,IAAI,2BAE/B,SAAAhD,GACE6K,EAAKwF,eAAeqE,KAAK7J,EAAK8J,sBAAsBX,EAAIC,EAAIC,EAAIC,EAAIxJ,IAChEoH,EAAQI,sBAGVJ,EAAQI,qBAAqBnS,EAAGkT,EAAK,CAAE1O,MAAO,CAAEqP,EAAGG,EAAIF,EAAGG,GAAMxP,IAAK,CAAEoP,EAAGK,EAAIJ,EAAGK,IAAAA,IAGrF,WACEtJ,EAAKuF,qBAAqBsE,KAAK7J,EAAK8J,sBAAsBX,EAAIC,EAAIC,EAAIC,EAAIxJ,IAC1EE,EAAK4F,SAAU1N,UAAU6R,OAAO,wBAC5B7C,EAAQM,oBACVN,EAAQM,oBAAAA,IAGZ,SAAArS,GACE,OAAI+R,EAAQQ,kBACHR,EAAQQ,iBAAiBvS,EAAGkT,EAAAA,IAAAA,CAAAA,EAOnClT,EAAAA,UAAAA,sBAAR,SAA8BgU,EAAYC,EAAYC,EAAYC,EAAYxJ,GAC5E,MAAO,CAAEqJ,GAAEhU,EAAEiU,GAAEjS,EAAEkS,GAAEnU,EAAEoU,GAAExR,EAAEnC,KAAM3C,KAAKiS,eAAetP,KAAMmK,GAAEjF,EAAA,EAxT5C1F,EAAAA,mBAAqB,IAN3BgR,EAASrO,EAAAA,CAyBjB+C,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,aACAA,EAAAA,EAAAA,EAAAA,kBA3BQsL,EAAb,CAAA1O,GAAaN,EAAAA,UAAAA,EAkUb,MACE,SACSgS,EACAC,EACAC,EACAC,EACAU,EACAC,EACA1C,EACAE,EACAC,GARA,KAAAyB,GAAA,EACA,KAAAC,GAAA,EACA,KAAAC,GAAA,EACA,KAAAC,GAAA,EACA,KAAAU,cAAA,EACA,KAAAC,cAAA,EACA,KAAA1C,gBAAA,EACA,KAAAE,cAAA,EACA,KAAAC,iBAAA,CAAAA,EAVEvQ,EAAAA,UAAAA,CAAAoS,E,wkDC9Ub,cACA3R,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAhF,EAAAA,EAAAA,MAEAqX,EAAAA,SAAAA,GAoBE,WACmCjF,GADnC,MAGE9P,EAAAA,KAAAA,OAAO,K,OAF0BD,EAAAA,eAAAA,EAjB3BA,EAAAA,eAAkC,GAKlCA,EAAAA,sBAAuC,GAEvCA,EAAAA,aAAAA,EAEAA,EAAAA,aAAuB,EAEvBA,EAAAA,qBAAuBA,EAAKqE,SAAS,IAAI3B,EAAAA,cAEzC1C,EAAAA,qBAAuBA,EAAKqE,SAAS,IAAI3B,EAAAA,cAO/C1C,EAAKqE,UAAAA,EAAS,EAAA4Q,2BAA0BjV,EAAKkV,wBAHZ,CA0WrC,QA/XgCvP,EAAAA,EAAAA,GAK9BnG,OAAAA,eAAWyC,EAAAA,UAAA,cAAW,C,IAAtB,WAAuD,OAAOnE,KAAKqX,YAAAA,E,gCAWnE3V,OAAAA,eAAWyC,EAAAA,UAAA,sBAAmB,C,IAA9B,WAA4D,OAAOnE,KAAKsS,qBAAqBI,KAAAA,E,gCAE7FhR,OAAAA,eAAWyC,EAAAA,UAAA,sBAAmB,C,IAA9B,WAA4D,OAAOnE,KAAKuS,qBAAqBG,KAAAA,E,gCAStFvO,EAAAA,UAAAA,qBAAP,SAA4BmT,GAA5B,WAEE,OADAtX,KAAKuX,eAAexO,KAAKuO,GAClB,CACLxP,QAAS,WAEP,IAAM0P,EAAgBrT,EAAKoT,eAAejC,QAAQgC,IAE3B,IAAnBE,GACFrT,EAAKoT,eAAe1C,OAAO2C,EAAe,MAM3CrT,EAAAA,UAAAA,YAAP,SAAmBpB,EAAsB0U,EAA6BC,GAAtE,WACE1X,KAAK4S,SAAW7P,EAChB/C,KAAK2X,cAAgBF,EACrBzX,KAAK4C,eAAiB8U,EAEtB1X,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK4S,SAAU,cAAc,WAClE9N,EAAK8S,aAAAA,EACL9S,EAAK+S,mBAAAA,KAEP7X,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK4S,SAAU,YAAa5S,KAAK8X,aAAa5R,KAAKlG,QAC1FA,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK4S,SAAU,YAAa5S,KAAK+X,iBAAiB7R,KAAKlG,QAC9FA,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK4S,SAAU,UAAW5S,KAAKgY,eAAe9R,KAAKlG,OAAAA,EAGpFmE,EAAAA,UAAAA,aAAR,SAAqBuO,GAGnB,GAFA1S,KAAKiY,gBAAkBvF,EAElB1S,KAAK4S,UAAa5S,KAAK2X,cAA5B,CAIA,IAAM3P,EAAWhI,KAAKkY,wBAAwBxF,EAAO1S,KAAK4S,SAAU5S,KAAK2X,eACzE,GAAK3P,EAAL,CAGAhI,KAAK4X,aAAAA,EAIL,IADA,IAAMO,EAAezF,EAAMyF,eAClBrT,EAAI,EAAGA,EAAIqT,EAAarS,OAAQhB,IAAK,CAC5C,IAAMxF,EAAS6Y,EAAarT,GAE5B,GAAIxF,EAAO4F,UAAUkT,SAAS,SAC5B,MAGF,GAAI9Y,EAAO4F,UAAUkT,SAAS,eAC5B,MAICpY,CAAAA,KAAKqY,iBAAoBrQ,EAASgO,IAAMhW,KAAKqY,gBAAgBrC,GAAKhO,EAASiO,IAAMjW,KAAKqY,gBAAgBpC,IACzGjW,KAAKsY,SAAStQ,GACdhI,KAAKqY,gBAAkBrQ,EAAAA,CAAAA,CAAAA,EAInB7D,EAAAA,UAAAA,SAAR,SAAiB6D,GAGf,GAAIhI,KAAKuY,cAAgBvQ,EAASiO,EAGhC,OAFAjW,KAAK6X,yBACL7X,KAAKwY,YAAYxQ,GAAAA,GAKahI,KAAKqX,cAAgBrX,KAAKyY,gBAAgBzY,KAAKqX,aAAaqB,KAAM1Q,KAEhGhI,KAAK6X,oBACL7X,KAAKwY,YAAYxQ,GAAAA,GAAU,EAIvB7D,EAAAA,UAAAA,YAAR,SAAoB6D,EAA+B2Q,G,YAAnDnU,EAAAA,KACOxE,KAAK4Y,wBAA2BD,IACR,QAA3B9Q,EAAAA,KAAK+Q,8BAAAA,IAAsB/Q,GAAAA,EAAEgR,SAAQ,YACnCC,MAAAA,GAAAA,EAAOD,SAAQ,YACTE,EAAcL,KAAK5Q,SACrBiR,EAAcL,KAAK5Q,SAAAA,GAAAA,IAIzB9H,KAAK4Y,uBAAyB,IAAII,IAClChZ,KAAKuY,YAAcvQ,EAASiO,GAE9B,IAAIgD,GAAAA,EAAJ,WAGYnU,EAAGwS,GACTqB,GAC+C,QAA3B3L,EAAAA,EAAK4L,8BAAAA,IAAsB5L,OAAAA,EAAAA,EAAEvN,IAAIqF,MAOrDmU,EAAepU,EAAKqU,yBAAyBpU,EAAGkD,EAAUiR,IAG5D3B,EAAa6B,aAAanR,EAASiO,GAAG,SAACmD,G,QACrC,IAAI5U,EAAKoT,YAAT,CAGA,IAAMyB,EAA+CD,MAAAA,OAAAA,EAAAA,EAAO9H,KAAI,YAAS,OAAGoH,KAAIvW,EAAA,IACrD,QAA3B2C,EAAAA,EAAK8T,8BAAAA,IAAsB9T,GAAAA,EAAEnF,IAAImF,EAAGuU,GACpCJ,EAAezU,EAAK0U,yBAAyBpU,EAAGkD,EAAUiR,IAI3B,QAA3BpR,EAAAA,EAAK+Q,8BAAAA,IAAsB/Q,OAAAA,EAAAA,EAAEyR,QAAS9U,EAAK+S,eAAezR,QAC5DtB,EAAK+U,yBAAyBvR,EAASiO,EAAGzR,EAAKoU,uBAAAA,CAAAA,GAAAA,EA1BvD,O,IAGA,IAAgC,QAAA5Y,KAAKuX,eAAeiC,WAAStC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAA,CAAlD,mB,EAAEuC,EAAAA,GAAcA,EAAAA,GAAA,C,oGA8BrBtV,EAAAA,UAAAA,yBAAR,SAAiC8R,EAAWyD,GAE1C,IADA,IAAMC,EAAgB,IAAIC,IACjB9U,EAAI,EAAGA,EAAI4U,EAAQJ,KAAMxU,IAAK,CACrC,IAAM+U,EAAgBH,EAAQja,IAAIqF,GAClC,GAAK+U,EAGL,IAAK,IAAI7M,EAAI,EAAGA,EAAI6M,EAAc/T,OAAQkH,IAIxC,IAHA,IAAM+L,EAAgBc,EAAc7M,GAC9B8M,EAASf,EAAcL,KAAK7E,MAAMlN,MAAMsP,EAAIA,EAAI,EAAI8C,EAAcL,KAAK7E,MAAMlN,MAAMqP,EACnF+D,EAAOhB,EAAcL,KAAK7E,MAAMjN,IAAIqP,EAAIA,EAAIjW,KAAKiS,eAAetP,KAAOoW,EAAcL,KAAK7E,MAAMjN,IAAIoP,EACjGA,EAAI8D,EAAQ9D,GAAK+D,EAAM/D,IAAK,CACnC,GAAI2D,EAAcK,IAAIhE,GAAI,CACxB6D,EAAchF,OAAO7H,IAAK,GAC1B,KAEF2M,CAAAA,EAAcxU,IAAI6Q,EAAAA,CAAAA,CAAAA,EAMlB7R,EAAAA,UAAAA,yBAAR,SAAiC8V,EAAejS,EAA+BiR,GAA/E,aACE,IAAKjZ,KAAK4Y,uBACR,OAAOK,EAOT,IAJA,IAAMG,EAAQpZ,KAAK4Y,uBAAuBnZ,IAAIwa,GAG1CC,GAAAA,EACKC,EAAI,EAAGA,EAAIF,EAAOE,IACpBna,KAAK4Y,uBAAuBoB,IAAIG,KAAMna,KAAK4Y,uBAAuBnZ,IAAI0a,KACzED,GAAAA,GAMJ,IAAKA,GAAiBd,EAAO,CAC3B,IAAMgB,EAAiBhB,EAAMiB,MAAK,YAAQ,SAAK5B,gBAAgBC,EAAKA,KAAM1Q,EAAAA,IACtEoS,IACFnB,GAAAA,EACAjZ,KAAKsa,eAAeF,GAKxB,IAAIpa,KAAK4Y,uBAAuBU,OAAStZ,KAAKuX,eAAezR,SAAWmT,EAEtE,IAASkB,EAAI,EAAGA,EAAIna,KAAK4Y,uBAAuBU,KAAMa,IAAK,CACzD,IAAMI,EAAgD,QAAlCzV,EAAAA,KAAK8T,uBAAuBnZ,IAAI0a,UAAAA,IAAErV,OAAAA,EAAAA,EAAEuV,MAAK,YAAQ,SAAK5B,gBAAgBC,EAAKA,KAAM1Q,EAAAA,IACrG,GAAIuS,EAAa,CACftB,GAAAA,EACAjZ,KAAKsa,eAAeC,GACpB,MAKN,QAAOtB,CAAAA,EAGD9U,EAAAA,UAAAA,iBAAR,WACEnE,KAAKwa,eAAiBxa,KAAKqX,YAAAA,EAGrBlT,EAAAA,UAAAA,eAAR,SAAuBuO,GACrB,GAAK1S,KAAK4S,UAAa5S,KAAK2X,eAAkB3X,KAAKqX,aAAnD,CAIA,IAAMrP,EAAWhI,KAAKkY,wBAAwBxF,EAAO1S,KAAK4S,SAAU5S,KAAK2X,eACpE3P,GAIDhI,KAAKwa,iBAAmBxa,KAAKqX,cAAgBrX,KAAKyY,gBAAgBzY,KAAKqX,aAAaqB,KAAM1Q,IAC5FhI,KAAKqX,aAAaqB,KAAK+B,SAAS/H,EAAO1S,KAAKqX,aAAaqB,KAAK7N,KAAAA,CAAAA,EAI1D1G,EAAAA,UAAAA,kBAAR,SAA0BuW,EAAmBC,GACtC3a,KAAK4S,UAAa5S,KAAKqX,cAAiBrX,KAAKiY,mBAK7CyC,IAAaC,GAAW3a,KAAKqX,aAAaqB,KAAK7E,MAAMlN,MAAMsP,GAAKyE,GAAY1a,KAAKqX,aAAaqB,KAAK7E,MAAMjN,IAAIqP,GAAK0E,KACrH3a,KAAK4a,WAAW5a,KAAK4S,SAAU5S,KAAKqX,aAAaqB,KAAM1Y,KAAKiY,iBAC5DjY,KAAKqX,kBAAAA,GAAetK,EACpB,EAAA8N,cAAa7a,KAAKoX,uBAAAA,EAIdjT,EAAAA,UAAAA,eAAR,SAAuB4U,GAAvB,WACE,GAAK/Y,KAAK4S,UAAa5S,KAAKiY,iBAAoBjY,KAAK2X,cAArD,CAIA,IAAM3P,EAAWhI,KAAKkY,wBAAwBlY,KAAKiY,gBAAiBjY,KAAK4S,SAAU5S,KAAK2X,eAEnF3P,GAKDhI,KAAKyY,gBAAgBM,EAAcL,KAAM1Q,KAC3ChI,KAAKqX,aAAe0B,EACpB/Y,KAAKqX,aAAayD,MAAQ,CACxBC,YAAa,CACXC,eAAW,IAAAjC,EAAcL,KAAKqC,aAAmChC,EAAcL,KAAKqC,YAAYC,UAChGC,mBAAe,IAAAlC,EAAcL,KAAKqC,aAAmChC,EAAcL,KAAKqC,YAAYE,eAEtGC,WAAW,GAEblb,KAAKmb,WAAWnb,KAAK4S,SAAUmG,EAAcL,KAAM1Y,KAAKiY,iBAGxDc,EAAcL,KAAKqC,YAAc,CAAC,EAClCrZ,OAAO0Z,iBAAiBrC,EAAcL,KAAKqC,YAAa,CACtDE,cAAe,CACbxb,IAAK,mBAAM,OAAwB,QAAxByC,EAAiB,QAAjBC,EAAAA,EAAKkV,oBAAAA,IAAYlV,OAAAA,EAAAA,EAAE2Y,aAAAA,IAAK5Y,OAAAA,EAAAA,EAAE6Y,YAAYE,aAAAA,EACjDtb,IAAK,Y,SACkB,QAAjBuC,EAAAA,EAAKmV,oBAAAA,IAAYnV,OAAAA,EAAAA,EAAE4Y,QAAS3W,EAAKkT,aAAayD,MAAMC,YAAYE,gBAAkBtN,IACpFxJ,EAAKkT,aAAayD,MAAMC,YAAYE,cAAgBtN,EAChDxJ,EAAKkT,aAAayD,MAAMI,YACb,QAAbpW,EAAAA,EAAK8N,gBAAAA,IAAQ9N,GAAAA,EAAEI,UAAUmW,OAAO,uBAAwB1N,IAAAA,GAKhEqN,UAAW,CACTvb,IAAK,mBAAM,OAAwB,QAAxByC,EAAiB,QAAjBC,EAAAA,EAAKkV,oBAAAA,IAAYlV,OAAAA,EAAAA,EAAE2Y,aAAAA,IAAK5Y,OAAAA,EAAAA,EAAE6Y,YAAYC,SAAAA,EACjDrb,IAAK,Y,WACkB,QAAjBmF,EAAAA,EAAKuS,oBAAAA,IAAYvS,OAAAA,EAAAA,EAAEgW,SAAiC,QAAxB9N,EAAiB,QAAjBnF,EAAAA,EAAKwP,oBAAAA,IAAYxP,OAAAA,EAAAA,EAAEiT,aAAAA,IAAK9N,OAAAA,EAAAA,EAAE+N,YAAYC,aAAcrN,IAClFxJ,EAAKkT,aAAayD,MAAMC,YAAYC,UAAYrN,EAC5CxJ,EAAKkT,aAAayD,MAAMI,WAC1B/W,EAAKmX,oBAAoBvC,EAAcL,KAAM/K,GAAAA,KAQnD3N,KAAK4C,gBACP5C,KAAKoX,sBAAsBrO,KAAK/I,KAAK4C,eAAe2Y,0BAAyB,SAAApZ,GAG3E,IAAMwE,EAAoB,IAAZxE,EAAEwE,MAAc,EAAIxE,EAAEwE,MAAQ,EAAIxC,EAAK8N,eAAe7J,OAAOiC,MAC3ElG,EAAK0T,kBAAkBlR,EAAOxE,EAAEyE,IAAM,EAAIzC,EAAK8N,eAAe7J,OAAOiC,MAAAA,KAAAA,CAAAA,EAMnElG,EAAAA,UAAAA,WAAV,SAAqBpB,EAAsB2V,EAAahG,G,OACjC,QAAjB5N,EAAAA,KAAKuS,oBAAAA,IAAYvS,OAAAA,EAAAA,EAAEgW,SACrB9a,KAAKqX,aAAayD,MAAMI,WAAAA,EACpBlb,KAAKqX,aAAayD,MAAMC,YAAYC,WACtChb,KAAKsb,oBAAoB5C,GAAAA,GAEvB1Y,KAAKqX,aAAayD,MAAMC,YAAYE,eACtClY,EAAQmC,UAAUC,IAAI,yBAItBuT,EAAK8C,OACP9C,EAAK8C,MAAM9I,EAAOgG,EAAK7N,KAAAA,EAInB1G,EAAAA,UAAAA,oBAAR,SAA4BuU,EAAa+C,GACvC,IAAM5H,EAAQ6E,EAAK7E,MACb6H,EAAe1b,KAAKiS,eAAe7J,OAAOiC,MAC1CqI,EAAQ1S,KAAK2b,0BAA0B9H,EAAMlN,MAAMqP,EAAI,EAAGnC,EAAMlN,MAAMsP,EAAIyF,EAAe,EAAG7H,EAAMjN,IAAIoP,EAAGnC,EAAMjN,IAAIqP,EAAIyF,EAAe,WAC5HD,EAAYzb,KAAKsS,qBAAuBtS,KAAKuS,sBACrDsE,KAAKnE,EAAAA,EAGLvO,EAAAA,UAAAA,WAAV,SAAqBpB,EAAsB2V,EAAahG,G,OACjC,QAAjB5N,EAAAA,KAAKuS,oBAAAA,IAAYvS,OAAAA,EAAAA,EAAEgW,SACrB9a,KAAKqX,aAAayD,MAAMI,WAAAA,EACpBlb,KAAKqX,aAAayD,MAAMC,YAAYC,WACtChb,KAAKsb,oBAAoB5C,GAAAA,GAEvB1Y,KAAKqX,aAAayD,MAAMC,YAAYE,eACtClY,EAAQmC,UAAU6R,OAAO,yBAIzB2B,EAAKkD,OACPlD,EAAKkD,MAAMlJ,EAAOgG,EAAK7N,KAAAA,EASnB1G,EAAAA,UAAAA,gBAAR,SAAwBuU,EAAa1Q,GACnC,IAAM6T,EAAWnD,EAAK7E,MAAMlN,MAAMsP,IAAMyC,EAAK7E,MAAMjN,IAAIqP,EACjD6F,EAAkBpD,EAAK7E,MAAMlN,MAAMsP,EAAIjO,EAASiO,EAChD8F,EAAiBrD,EAAK7E,MAAMjN,IAAIqP,EAAIjO,EAASiO,EAInD,OAAS4F,GAAYnD,EAAK7E,MAAMlN,MAAMqP,GAAKhO,EAASgO,GAAK0C,EAAK7E,MAAMjN,IAAIoP,GAAKhO,EAASgO,GACnF8F,GAAmBpD,EAAK7E,MAAMjN,IAAIoP,GAAKhO,EAASgO,GAChD+F,GAAkBrD,EAAK7E,MAAMlN,MAAMqP,GAAKhO,EAASgO,GACjD8F,GAAmBC,IACpBrD,EAAK7E,MAAMlN,MAAMsP,GAAKjO,EAASiO,GAC/ByC,EAAK7E,MAAMjN,IAAIqP,GAAKjO,EAASiO,CAAAA,EAOzB9R,EAAAA,UAAAA,wBAAR,SAAgCuO,EAAmB3P,EAAsB0U,GACvE,IAAMuE,EAASvE,EAAawE,UAAUvJ,EAAO3P,EAAS/C,KAAKiS,eAAetP,KAAM3C,KAAKiS,eAAevP,MACpG,GAAKsZ,EAIL,MAAO,CAAEhG,EAAGgG,EAAO,GAAI/F,EAAG+F,EAAO,GAAKhc,KAAKiS,eAAe7J,OAAOiC,MAAAA,EAG3DlG,EAAAA,UAAAA,0BAAR,SAAkCgS,EAAYC,EAAYC,EAAYC,EAAYxJ,GAChF,MAAO,CAAEqJ,GAAEhU,EAAEiU,GAAEjS,EAAEkS,GAAEnU,EAAEoU,GAAExR,EAAEnC,KAAM3C,KAAKiS,eAAetP,KAAMmK,GAAEjF,EAAA,EA7XxCmF,EAAAA,CAqBlBxI,EAAAA,EAAAA,EAAAA,iBArBQ0X,EAAb,CAAAhF,CAAgCrS,EAAAA,YAAnBV,EAAAA,WAAAA,CAAA+X,E,mGCPF/X,EAAAA,YAAc,iBAGdA,EAAAA,cAAgB,kE,g+BCJ3B,aACAO,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MAUAC,EAAAA,SAAAA,GAaE,WACmB+N,EACAuJ,EACgBlK,EACD0F,EACIyE,EACFC,GANpC,MAQEla,EAAAA,KAAAA,OAAO,K,OAPUsC,EAAAA,SAAAA,EACAA,EAAAA,eAAAA,EACgBA,EAAAA,eAAAA,EACDA,EAAAA,cAAAA,EACIA,EAAAA,kBAAAA,EACFA,EAAAA,gBAAAA,EAlB5BA,EAAAA,OAAuB,GAEvBA,EAAAA,iBAAAA,EAOAA,EAAAA,iBAA6D,MAAC,OAAAsI,GAC9DtI,EAAAA,wBAAkC,EAYxCA,EAAK8B,UAAAA,EAAS,EAAAqB,0BAAyBnD,EAAKmO,SAAU,aAAa,SAAAzQ,GAAK,SAAKma,aAAana,EAAAA,KAG1FsC,EAAK8X,mBAAqB,SAAApa,GAAK,SAAK2V,aAAa3V,EAAAA,EACjDsC,EAAK+X,oBAAsB,SAAAra,GAAK,SAAKsa,cAActa,EAAAA,EACnDsC,EAAKiY,eAAiB,SAAAva,GAAK,SAAKwa,SAASxa,EAAAA,EAdxB,CA0MrB,QAxNsC0F,EAAAA,EAAAA,GA+B7B1D,EAAAA,UAAAA,QAAP,WACEhC,EAAAA,UAAM2F,QAAOjG,KAAA,MACb7B,KAAK4c,aAAAA,EAGAzY,EAAAA,UAAAA,IAAP,SAAW0Y,GACT7c,KAAK8c,OAAO/T,KAAK8T,GACU,IAAvB7c,KAAK8c,OAAOhX,QACd9F,KAAK+c,WAAAA,EAIF5Y,EAAAA,UAAAA,SAAP,SAAgBwC,EAAgBC,GAE9B,GAA2B,IAAvB5G,KAAK8c,OAAOhX,OAAhB,CAKKa,GAAUC,IACbD,EAAQ,EACRC,EAAM5G,KAAKiS,eAAevP,KAAO,GAInC,IAAK,IAAIoC,EAAI,EAAGA,EAAI9E,KAAK8c,OAAOhX,OAAQhB,IAAK,CAC3C,IAAM+X,EAAO7c,KAAK8c,OAAOhY,IACpB+X,EAAKzG,GAAKzP,GAASkW,EAAKzG,IAAMxP,EAAM,GACpCiW,EAAKvG,GAAK3P,GAASkW,EAAKvG,IAAM1P,EAAM,GACpCiW,EAAKzG,GAAKzP,GAASkW,EAAKvG,GAAK1P,EAAM,KAClC5G,KAAKgd,cAAgBhd,KAAKgd,eAAiBH,IAC7C7c,KAAKgd,aAAavI,gBAClBzU,KAAKgd,kBAAAA,GAEPhd,KAAK8c,OAAOjI,OAAO/P,IAAK,GAKD,KAAvB9E,KAAK8c,OAAOhX,QACd9F,KAAK4c,aAAAA,CAAAA,EAIDzY,EAAAA,UAAAA,UAAR,WACOnE,KAAKid,kBACRjd,KAAKid,iBAAAA,EACLjd,KAAK4S,SAAS/M,iBAAiB,YAAa7F,KAAKuc,oBACjDvc,KAAK4S,SAAS/M,iBAAiB,aAAc7F,KAAKwc,qBAClDxc,KAAK4S,SAAS/M,iBAAiB,QAAS7F,KAAK0c,gBAAAA,EAIzCvY,EAAAA,UAAAA,YAAR,WACMnE,KAAKid,kBACPjd,KAAKid,iBAAAA,EACLjd,KAAK4S,SAAShK,oBAAoB,YAAa5I,KAAKuc,oBACpDvc,KAAK4S,SAAShK,oBAAoB,aAAc5I,KAAKwc,qBACrDxc,KAAK4S,SAAShK,oBAAoB,QAAS5I,KAAK0c,gBAAAA,EAI5CvY,EAAAA,UAAAA,aAAR,SAAqBhC,GAGfnC,KAAKkd,iBAAiB,KAAO/a,EAAEgb,OAASnd,KAAKkd,iBAAiB,KAAO/a,EAAEib,QACzEpd,KAAKsY,SAASnW,GAEdnC,KAAKkd,iBAAmB,CAAC/a,EAAEgb,MAAOhb,EAAEib,OAAAA,EAIhCjZ,EAAAA,UAAAA,SAAR,SAAiBhC,GAAjB,WACQ0a,EAAO7c,KAAKqd,iBAAiBlb,GAG/B0a,IAAS7c,KAAKgd,eAMdhd,KAAKgd,eACPhd,KAAKgd,aAAavI,gBAClBzU,KAAKgd,kBAAAA,EACDhd,KAAKsd,iBACPrK,aAAajT,KAAKsd,kBAKjBT,IAGL7c,KAAKgd,aAAeH,EAGhBA,EAAK5F,eACP4F,EAAK5F,cAAc9U,GAIrBnC,KAAKsd,gBAAkBja,OAAOyG,YAAW,WAAM,OAAA3F,EAAKoZ,WAAWpb,EAAAA,GAAInC,KAAKqc,gBAAgBmB,WAAWC,2BAAAA,EAG7FtZ,EAAAA,UAAAA,WAAR,SAAmBhC,GACjBnC,KAAKsd,qBAAAA,EACL,IAAMT,EAAO7c,KAAKqd,iBAAiBlb,GACnC0a,MAAAA,GAAAA,EAAMtI,gBAAgBpS,EAAAA,EAGhBgC,EAAAA,UAAAA,aAAR,SAAqBhC,GAMnB,GAHAnC,KAAK0d,wBAA0B1d,KAAK2d,sBAG/B3d,KAAKid,gBAAV,CAMA,IAAMJ,EAAO7c,KAAKqd,iBAAiBlb,IAC/B0a,MAAAA,OAAAA,EAAAA,EAAMnI,iBAAiBvS,MACzBA,EAAE+G,iBACF/G,EAAEgH,2BAAAA,CAAAA,EAIEhF,EAAAA,UAAAA,cAAR,SAAsBhC,GAGhBnC,KAAKgd,eACPhd,KAAKgd,aAAavI,gBAClBzU,KAAKgd,kBAAAA,EACDhd,KAAKsd,iBACPrK,aAAajT,KAAKsd,iBAAAA,EAKhBnZ,EAAAA,UAAAA,SAAR,SAAiBhC,GAGf,IAAM0a,EAAO7c,KAAKqd,iBAAiBlb,GAC7Byb,EAAyB5d,KAAK2d,sBAEhCd,GAAQe,IAA2B5d,KAAK0d,0BAC1Cb,EAAK7F,cAAc7U,GACnBA,EAAE+G,iBACF/G,EAAEgH,2BAAAA,EAIEhF,EAAAA,UAAAA,oBAAR,WACE,IAAMkI,EAAgBrM,KAAKoc,kBAAkB/P,cAC7C,OAAOA,EAAgBA,EAAcvG,OAAS,GAGxC3B,EAAAA,UAAAA,iBAAR,SAAyBhC,GACvB,IAAM6Z,EAAShc,KAAK2X,cAAcsE,UAAU9Z,EAAGnC,KAAKmc,eAAgBnc,KAAKiS,eAAetP,KAAM3C,KAAKiS,eAAevP,MAClH,GAAKsZ,EAKL,IAFA,IAAMhG,EAAIgG,EAAO,GACX/F,EAAI+F,EAAO,GACRlX,EAAI,EAAGA,EAAI9E,KAAK8c,OAAOhX,OAAQhB,IAAK,CAC3C,IAAM+X,EAAO7c,KAAK8c,OAAOhY,GACzB,GAAI+X,EAAKzG,KAAOyG,EAAKvG,IAEnB,GAAIL,IAAM4G,EAAKzG,IAAMJ,GAAK6G,EAAK1G,IAAMH,EAAI6G,EAAKxG,GAC5C,OAAOwG,OAIT,GAAK5G,IAAM4G,EAAKzG,IAAMJ,GAAK6G,EAAK1G,IAC3BF,IAAM4G,EAAKvG,IAAMN,EAAI6G,EAAKxG,IAC1BJ,EAAI4G,EAAKzG,IAAMH,EAAI4G,EAAKvG,GAC3B,OAAOuG,CAAAA,CAAAA,EAlNY7P,EAAAA,CAgBxBxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,eACAA,EAAAA,EAAAA,EAAAA,mBACAA,EAAAA,EAAAA,EAAAA,kBAnBQqZ,EAAb,CAAAhZ,CAAsCJ,EAAAA,YAAzBN,EAAAA,iBAAAA,CAAA0Z,E,kaCTb,iBAOE,WACUC,GAAA,KAAAA,gBAAA,EAHF,KAAAC,kBAA4C,EAkEtD,QA3DS5b,EAAAA,UAAAA,QAAP,WACMnC,KAAKge,kBACP3a,OAAO4a,qBAAqBje,KAAKge,iBACjChe,KAAKge,qBAAAA,EAAkBjR,EAIpB5K,EAAAA,UAAAA,mBAAP,SAA0B+b,GAA1B,WAKE,OAJAle,KAAK+d,kBAAkBhV,KAAKmV,GACvBle,KAAKge,kBACRhe,KAAKge,gBAAkB3a,OAAO8a,uBAAsB,WAAM,OAAAha,EAAKia,eAAAA,KAE1Dpe,KAAKge,eAAAA,EAGP7b,EAAAA,UAAAA,QAAP,SAAekc,EAA8BC,EAA4BC,GAAzE,WACEve,KAAKwe,UAAYD,EAEjBF,OAAAA,IAAWA,EAAyBA,EAAW,EAC/CC,OAAAA,IAASA,EAAuBA,EAASte,KAAKwe,UAAY,EAE1Dxe,KAAKye,eAAAA,IAAYze,KAAKye,UAA0B9a,KAAKmP,IAAI9S,KAAKye,UAAWJ,GAAYA,EACrFre,KAAK0e,aAAAA,IAAU1e,KAAK0e,QAAwB/a,KAAKC,IAAI5D,KAAK0e,QAASJ,GAAUA,EAEzEte,KAAKge,kBAIThe,KAAKge,gBAAkB3a,OAAO8a,uBAAsB,WAAM,SAAKC,eAAAA,IAAAA,EAGzDjc,EAAAA,UAAAA,cAAR,WAIE,GAHAnC,KAAKge,qBAAAA,OAAkBjR,IAGnB/M,KAAKye,gBAAAA,IAA2Bze,KAAK0e,cAAAA,IAAyB1e,KAAKwe,UAAvE,CAMA,IAAM7X,EAAQhD,KAAKC,IAAI5D,KAAKye,UAAW,GACjC7X,EAAMjD,KAAKmP,IAAI9S,KAAK0e,QAAS1e,KAAKwe,UAAY,GAGpDxe,KAAKye,eAAAA,EACLze,KAAK0e,aAAAA,EAGL1e,KAAK8d,gBAAgBnX,EAAOC,GAC5B5G,KAAK2e,sBAAAA,MAdH3e,KAAK2e,sBAAAA,EAiBDxc,EAAAA,UAAAA,qBAAR,W,YACE,IAAuB,QAAAnC,KAAK+d,mBAAiBlW,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,QAAA,EAA1BA,EAAAA,OACR,EAEX7H,C,gGAAAA,CAAAA,KAAK+d,kBAAoB,IAE7B5b,CAvEA,IAAagC,EAAAA,gBAAAA,CAAAya,E,+jBCLb,IAcA5R,EAAAA,SAAAA,GAAA,0BAAA7K,GAAAA,EAAA,4B,OACUgC,EAAAA,yBAAmCd,OAAOwb,iBAA1C,CAgDV,QAjDsChX,EAAAA,EAAAA,GAM7B1D,EAAAA,UAAAA,YAAP,SAAmB2a,GAAnB,WACM9e,KAAK+e,WACP/e,KAAKgf,gBAEPhf,KAAK+e,UAAYD,EACjB9e,KAAKif,eAAiB,WACf9a,EAAK4a,YAGV5a,EAAK4a,UAAU1b,OAAOwb,iBAAkB1a,EAAK+a,0BAC7C/a,EAAKgb,aAAAA,EAEPnf,KAAKmf,YAAAA,EAGAhb,EAAAA,UAAAA,QAAP,WACEhC,EAAAA,UAAM2F,QAAOjG,KAAA,MACb7B,KAAKgf,eAAAA,EAGC7a,EAAAA,UAAAA,WAAR,W,MACOnE,KAAKif,iBAKoB,QAA9B9c,EAAAA,KAAKid,iCAAAA,IAAyBjd,GAAAA,EAAEkd,eAAerf,KAAKif,gBAGpDjf,KAAKkf,yBAA2B7b,OAAOwb,iBACvC7e,KAAKof,0BAA4B/b,OAAOic,WAAW,2BAA2Bjc,OAAOwb,iBAAgB,SACrG7e,KAAKof,0BAA0BG,YAAYvf,KAAKif,gBAAAA,EAG3C9a,EAAAA,UAAAA,cAAP,WACOnE,KAAKof,2BAA8Bpf,KAAK+e,WAAc/e,KAAKif,iBAGhEjf,KAAKof,0BAA0BC,eAAerf,KAAKif,gBACnDjf,KAAKof,+BAAAA,EACLpf,KAAK+e,eAAAA,EACL/e,KAAKif,oBAAAA,EAAiBlS,EAE1B5I,CAjDA,CAAA6I,CAdA9K,EAAAA,KAcsCsd,YAAzBrb,EAAAA,iBAAAA,CAAAsb,E,i4CCMb,cACA9a,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAhF,EAAAA,EAAAA,MACAqX,EAAAA,EAAAA,MACAuC,EAAAA,EAAAA,MACAiG,EAAAA,EAAAA,MACA/R,EAAAA,EAAAA,MACAsI,EAAAA,EAAAA,MACArI,EAAAA,EAAAA,MACA+R,EAAAA,EAAAA,KACA9R,EAAAA,EAAAA,MACA+R,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAhK,EAAAA,EAAAA,MACAiK,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KAEAC,EAAAA,EAAAA,MACAhf,EAAAA,EAAAA,MACAif,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAvG,EAAAA,EAAAA,MACAwG,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAGM5b,EAAwC,oBAAX3B,OAA0BA,OAAO2B,SAAW,KAE/E6b,EAAAA,SAAAA,GAkGE,WACE9O,QAAAA,IAAAA,IAAAA,EAAAA,CAAAA,GADF,MAGE5P,EAAAA,KAAAA,KAAM4P,IAAQ,K,OAtFT7P,EAAAA,QAAoB4e,EAkBnB5e,EAAAA,iBAAAA,EAMAA,EAAAA,cAAAA,EAOAA,EAAAA,kBAAAA,EAOAA,EAAAA,qBAAAA,EAWAA,EAAAA,cAAgB,IAAI6d,EAAAA,aAEpB7d,EAAAA,OAAS,IAAI6d,EAAAA,aAEb7d,EAAAA,UAAY,IAAI6d,EAAAA,aAEhB7d,EAAAA,mBAAqB,IAAI6d,EAAAA,aAEzB7d,EAAAA,eAAiB,IAAI6d,EAAAA,aAErB7d,EAAAA,QAAU,IAAI6d,EAAAA,aAGd7d,EAAAA,SAAW,IAAI6d,EAAAA,aAEf7d,EAAAA,QAAU,IAAI6d,EAAAA,aAEd7d,EAAAA,mBAAqB,IAAI6d,EAAAA,aAEzB7d,EAAAA,kBAAoB,IAAI6d,EAAAA,aAoB9B7d,EAAK6e,SAEL7e,EAAK8e,UAAY9e,EAAK+e,sBAAsBC,eAAezH,EAAAA,WAC3DvX,EAAKif,WAAajf,EAAKqE,SAASrE,EAAK+e,sBAAsBC,eAAe9f,EAAAA,aAC1Ec,EAAKkf,mBAAqBlf,EAAK+e,sBAAsBC,eAAeP,EAAAA,mBACpEze,EAAK+e,sBAAsBI,WAAWT,EAAAA,mBAAoB1e,EAAKkf,oBAG/Dlf,EAAKqE,SAASrE,EAAKof,cAAcC,eAAc,WAAM,SAAKC,MAAAA,KAC1Dtf,EAAKqE,SAASrE,EAAKof,cAAcG,sBAAqB,SAAC9a,EAAOC,GAAQ,SAAKoD,QAAQrD,EAAOC,EAAAA,KAC1F1E,EAAKqE,SAASrE,EAAKof,cAAcI,oBAAmB,WAAM,SAAKC,cAAAA,KAC/Dzf,EAAKqE,SAASrE,EAAKof,cAAcM,gBAAe,WAAM,SAAKC,OAAAA,KAC3D3f,EAAKqE,SAASrE,EAAKof,cAAcQ,+BAA8B,YAAQ,SAAKC,sBAAsBlQ,EAAAA,KAClG3P,EAAKqE,SAASrE,EAAKof,cAAcU,SAAQ,SAACtP,GAAU,SAAKuP,kBAAkBvP,EAAAA,KAC3ExQ,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKof,cAAca,aAAcjgB,EAAKkgB,gBACjElgB,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKof,cAAce,cAAengB,EAAKogB,iBAClEpgB,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKof,cAAcxa,WAAY5E,EAAKqgB,qBAC/DrgB,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKof,cAAcpa,UAAWhF,EAAKsgB,oBAG9DtgB,EAAKqE,SAASrE,EAAK+P,eAAezL,UAAS,SAAArE,GAAK,SAAKsgB,aAAatgB,EAAEQ,KAAMR,EAAEO,KAAAA,KA5GvE,CA40CT,QA31C8BmF,EAAAA,EAAAA,GAiE5BnG,OAAAA,eAAWyC,EAAAA,UAAA,eAAY,C,IAAvB,WAA0C,OAAOnE,KAAKoiB,cAAc1P,KAAAA,E,gCAEpEhR,OAAAA,eAAWyC,EAAAA,UAAA,QAAK,C,IAAhB,WAAuE,OAAOnE,KAAKsH,OAAOoL,KAAAA,E,gCAE1FhR,OAAAA,eAAWyC,EAAAA,UAAA,WAAQ,C,IAAnB,WAAgE,OAAOnE,KAAK0iB,UAAUhQ,KAAAA,E,gCAEtFhR,OAAAA,eAAWyC,EAAAA,UAAA,oBAAiB,C,IAA5B,WAA+C,OAAOnE,KAAK2iB,mBAAmBjQ,KAAAA,E,gCAE9EhR,OAAAA,eAAWyC,EAAAA,UAAA,gBAAa,C,IAAxB,WAA6C,OAAOnE,KAAKsiB,eAAe5P,KAAAA,E,gCAExEhR,OAAAA,eAAWyC,EAAAA,UAAA,SAAM,C,IAAjB,WAAoC,OAAOnE,KAAK4iB,QAAQlQ,KAAAA,E,gCAGxDhR,OAAAA,eAAWyC,EAAAA,UAAA,UAAO,C,IAAlB,WAAqC,OAAOnE,KAAK6iB,SAASnQ,KAAAA,E,gCAE1DhR,OAAAA,eAAWyC,EAAAA,UAAA,SAAM,C,IAAjB,WAAoC,OAAOnE,KAAK8iB,QAAQpQ,KAAAA,E,gCAExDhR,OAAAA,eAAWyC,EAAAA,UAAA,aAAU,C,IAArB,WAA0C,OAAOnE,KAAKuiB,mBAAmB7P,KAAAA,E,gCAEzEhR,OAAAA,eAAWyC,EAAAA,UAAA,YAAS,C,IAApB,WAAyC,OAAOnE,KAAKwiB,kBAAkB9P,KAAAA,E,gCAgD/DvO,EAAAA,UAAAA,kBAAR,SAA0BuO,G,YACxB,GAAK1S,KAAK+iB,cAAV,C,IACA,IAAkB,QAAA5gB,GAAKwC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAApB,IAAMqe,EAAGre,EAAAA,MACRse,OAAAA,EACAC,EAAQ,GACZ,OAAQF,EAAI/I,OACV,KAAK,IACHgJ,EAAM,aACNC,EAAQ,KACR,MACF,KAAK,IACHD,EAAM,aACNC,EAAQ,KACR,MACF,KAAK,IACHD,EAAM,SACNC,EAAQ,KACR,MACF,QAEED,EAAM,OACNC,EAAQ,KAAOF,EAAI/I,MAEvB,GAAIgJ,EACF,OAAQD,EAAInR,MACV,KAAK,EACH,IAAMsR,EAAW5C,EAAAA,MAAM6C,WAAmB,SAARH,EAC9BjjB,KAAK+iB,cAAcrV,OAAOuB,KAAK+T,EAAI/I,OACnCja,KAAK+iB,cAAcrV,OAAOuV,IAC9BjjB,KAAKmL,YAAYE,iBAAoBxG,EAAAA,GAAGwe,IAAG,IAAIH,EAAK,OAAI,EAAAI,aAAYH,GAAYte,EAAAA,WAAW0e,IAC3F,MACF,KAAK,EACS,SAARN,EAAgBjjB,KAAK+iB,cAAcrV,OAAOuB,KAAK+T,EAAI/I,OAASsG,EAAAA,KAAKrT,QAAOsW,MAAZ,EAAAhW,KAAI/I,EAAAA,GAAAA,EAAYue,EAAIS,QAAAA,IAC/EzjB,KAAK+iB,cAAcrV,OAAOuV,GAAO1C,EAAAA,KAAKrT,QAAOsW,MAAZ,EAAAhW,KAAI/I,EAAAA,GAAAA,EAAYue,EAAIS,QAAAA,IAC1D,MACF,KAAK,EACHzjB,KAAK+iB,cAAcW,aAAaV,EAAI/I,OAAAA,CAKzB,C,gGAAA,SAAnBnV,EAAAA,KAAKlC,sBAAAA,IAAckC,GAAAA,EAAE6e,UAAU3jB,KAAK+iB,cAAcrV,QACrC,QAAb7F,EAAAA,KAAK7D,gBAAAA,IAAQ6D,GAAAA,EAAE+b,cAAc5jB,KAAK+iB,cAAcrV,OAAAA,CAAAA,EAG3CvJ,EAAAA,UAAAA,QAAP,W,UACMnE,KAAK6jB,cAGT1hB,EAAAA,UAAM2F,QAAOjG,KAAA,MACM,QAAnBsC,EAAAA,KAAKvB,sBAAAA,IAAcuB,GAAAA,EAAE2D,UACrB9H,KAAK8jB,4BAAAA,EACL9jB,KAAK+jB,MAAQ,aACW,QAAxBjf,EAAY,QAAZ5C,EAAAA,KAAKa,eAAAA,IAAOb,OAAAA,EAAAA,EAAE2H,kBAAAA,IAAU/E,GAAAA,EAAE4D,YAAY1I,KAAK+C,SAAAA,EAGnCoB,EAAAA,UAAAA,OAAV,WACEhC,EAAAA,UAAM4e,OAAMlf,KAAA,MAEZ7B,KAAK8jB,4BAAAA,CAAyB/W,EAMhCrL,OAAAA,eAAWyC,EAAAA,UAAA,SAAM,C,IAAjB,WACE,OAAOnE,KAAKgkB,QAAQC,MAAAA,E,gCAMf9f,EAAAA,UAAAA,MAAP,WACMnE,KAAKkL,UACPlL,KAAKkL,SAASjC,MAAM,CAAEib,eAAe,KAI/B/f,EAAAA,UAAAA,eAAV,SAAyB3C,G,YAIvB,OAHAW,EAAAA,UAAMgiB,eAActiB,KAAA,KAACL,GAGbA,GACN,IAAK,aACL,IAAK,WAEgB,QAAnBU,EAAAA,KAAKU,sBAAAA,IAAcV,GAAAA,EAAEW,QACA,QAArBiC,EAAAA,KAAKsf,wBAAAA,IAAgBtf,GAAAA,EAAEuf,UACvB,MACF,IAAK,cACL,IAAK,cAEHrkB,KAAKgK,QAAQhK,KAAKoI,OAAO6N,EAAGjW,KAAKoI,OAAO6N,GACxC,MACF,IAAK,eACL,IAAK,6BACL,IAAK,gBACL,IAAK,aACL,IAAK,aACL,IAAK,iBACL,IAAK,uBAECjW,KAAK4C,iBACP5C,KAAK4C,eAAeC,QACpB7C,KAAK4C,eAAe4D,SAASxG,KAAK2C,KAAM3C,KAAK0C,MAC7C1C,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,IAE9B,MACF,IAAK,eACC1C,KAAK4C,iBACP5C,KAAK4C,eAAe0hB,YAAYtkB,KAAKukB,mBACrCvkB,KAAK4C,eAAe4D,SAASxG,KAAK2C,KAAM3C,KAAK0C,OAE/C,MACF,IAAK,aACU,QAAbmF,EAAAA,KAAK7D,gBAAAA,IAAQ6D,GAAAA,EAAE2c,iBACf,MACF,IAAK,mBACCxkB,KAAKykB,eAAejH,WAAWkH,kBAC5B1kB,KAAK2kB,uBAAyB3kB,KAAK4C,iBACtC5C,KAAK2kB,sBAAwB,IAAI/E,EAAAA,qBAAqB5f,KAAMA,KAAK4C,kBAGzC,QAA1BoK,EAAAA,KAAK2X,6BAAAA,IAAqB3X,GAAAA,EAAElF,UAC5B9H,KAAK2kB,2BAAAA,GAEP,MACF,IAAK,eAAgB3kB,KAAKgkB,QAAQY,gBAAiB,MACnD,IAAK,QACH5kB,KAAK6kB,UAAU7kB,KAAKykB,eAAejH,WAAWnO,OAAAA,EAQ5ClL,EAAAA,UAAAA,iBAAR,SAAyBqH,GACnBxL,KAAKmL,YAAYC,gBAAgB0Z,WACnC9kB,KAAKmL,YAAYE,iBAAiBxG,EAAAA,GAAGwe,IAAM,MAE7CrjB,KAAK+kB,kBAAkBvZ,GACvBxL,KAAK+C,QAASmC,UAAUC,IAAI,SAC5BnF,KAAKglB,cACLhlB,KAAK6iB,SAAShM,MAAAA,EAOT1S,EAAAA,UAAAA,KAAP,W,MACE,OAAoB,QAAbhC,EAAAA,KAAK+I,gBAAAA,IAAQ/I,OAAAA,EAAAA,EAAE8iB,MAAAA,EAMhB9gB,EAAAA,UAAAA,gBAAR,WAGEnE,KAAKkL,SAAUI,MAAQ,GACvBtL,KAAKgK,QAAQhK,KAAKoI,OAAO6N,EAAGjW,KAAKoI,OAAO6N,GACpCjW,KAAKmL,YAAYC,gBAAgB0Z,WACnC9kB,KAAKmL,YAAYE,iBAAiBxG,EAAAA,GAAGwe,IAAM,MAE7CrjB,KAAK+C,QAASmC,UAAU6R,OAAO,SAC/B/W,KAAK8iB,QAAQjM,MAAAA,EAGP1S,EAAAA,UAAAA,cAAR,WACE,GAAKnE,KAAKkL,UAAalL,KAAKoI,OAAO8c,qBAAsBllB,KAAKmlB,mBAAoBC,aAAgBplB,KAAK4C,eAAvG,CAGA,IAAMyiB,EAAUrlB,KAAKoI,OAAOkd,MAAQtlB,KAAKoI,OAAO6N,EAC1CsP,EAAavlB,KAAKoI,OAAOC,MAAM5I,IAAI4lB,GACzC,GAAKE,EAAL,CAGA,IAAMC,EAAU7hB,KAAKmP,IAAI9S,KAAKoI,OAAO4N,EAAGhW,KAAK2C,KAAO,GAC9C8iB,EAAazlB,KAAK4C,eAAeK,WAAWE,iBAC5C6I,EAAQuZ,EAAWG,SAASF,GAC5BG,EAAY3lB,KAAK4C,eAAeK,WAAWC,gBAAkB8I,EAC7D4Z,EAAY5lB,KAAKoI,OAAO6N,EAAIjW,KAAK4C,eAAeK,WAAWE,iBAC3D0iB,EAAaL,EAAUxlB,KAAK4C,eAAeK,WAAWC,gBAI5DlD,KAAKkL,SAAST,MAAMmB,KAAOia,EAAa,KACxC7lB,KAAKkL,SAAST,MAAMqB,IAAM8Z,EAAY,KACtC5lB,KAAKkL,SAAST,MAAMuB,MAAQ2Z,EAAY,KACxC3lB,KAAKkL,SAAST,MAAMC,OAAS+a,EAAa,KAC1CzlB,KAAKkL,SAAST,MAAMqb,WAAaL,EAAa,KAC9CzlB,KAAKkL,SAAST,MAAMwB,OAAS,QAMvB9H,EAAAA,UAAAA,YAAR,sBACEnE,KAAK+lB,YAGL/lB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK+C,QAAU,QAAQ,SAAC2P,GAGxDvQ,EAAK6jB,iBAAAA,EAGV,EAAAC,aAAYvT,EAAOvQ,EAAKia,kBAAAA,KAE1B,IAAM8J,EAAsB,SAACxT,GAAgC,SAAA9N,EAAAuhB,kBAAiBzT,EAAOvQ,EAAK+I,SAAW/I,EAAKgJ,YAAAA,EAC1GnL,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,QAASgb,IAChElmB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK+C,QAAU,QAASmjB,IAG3DpF,EAAQsF,UAEVpmB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK+C,QAAU,aAAa,SAAC2P,GAC7C,IAAjBA,EAAM2T,SAAAA,EACR,EAAAC,mBAAkB5T,EAAOvQ,EAAK+I,SAAW/I,EAAKsJ,cAAgBtJ,EAAKia,kBAAoBja,EAAK4P,QAAQwU,sBAAAA,KAIxGvmB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK+C,QAAU,eAAe,SAAC2P,IAAAA,EACpE,EAAA4T,mBAAkB5T,EAAOvQ,EAAK+I,SAAW/I,EAAKsJ,cAAgBtJ,EAAKia,kBAAoBja,EAAK4P,QAAQwU,sBAAAA,KAOpGzF,EAAQ0F,SAGVxmB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK+C,QAAU,YAAY,SAAC2P,GAC5C,IAAjBA,EAAM2T,SAAAA,EACR,EAAA9a,8BAA6BmH,EAAOvQ,EAAK+I,SAAW/I,EAAKsJ,cAAAA,IAAAA,EASzDtH,EAAAA,UAAAA,UAAR,sBACEnE,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,SAAS,SAACM,GAAsB,SAAKib,OAAOjb,EAAAA,IAAAA,IACnGxL,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,WAAW,SAACM,GAAsB,SAAKkb,SAASlb,EAAAA,IAAAA,IACvGxL,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,YAAY,SAACM,GAAsB,SAAKmb,UAAUnb,EAAAA,IAAAA,IACzGxL,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,oBAAoB,WAAM,SAAKia,mBAAoByB,kBAAAA,KAC1G5mB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,qBAAqB,SAAC/I,GAAwB,SAAKgjB,mBAAoB0B,kBAAkB1kB,EAAAA,KAChJnC,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,kBAAkB,WAAM,SAAKia,mBAAoB2B,gBAAAA,KACxG9mB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAW,SAAS,SAACM,GAAmB,SAAKub,YAAYvb,EAAAA,IAAAA,IACrGxL,KAAKuG,SAASvG,KAAK0G,UAAS,WAAM,SAAKye,mBAAoB6B,2BAAAA,KAC3DhnB,KAAKuG,SAASvG,KAAK0G,UAAS,YAAK,SAAKugB,oBAAoB9kB,EAAEwE,MAAOxE,EAAEyE,IAAAA,IAAAA,EAQhEzC,EAAAA,UAAAA,KAAP,SAAY+iB,GAAZ,WACE,IAAKA,EACH,MAAM,IAAI7gB,MAAM,uCAGb6gB,EAAOC,aACVnnB,KAAKkS,YAAY8B,MAAM,2EAGzBhU,KAAKonB,UAAYF,EAAOG,cAGxBrnB,KAAK+C,QAAU/C,KAAKonB,UAAUniB,cAAc,OAC5CjF,KAAK+C,QAAQukB,IAAM,MACnBtnB,KAAK+C,QAAQmC,UAAUC,IAAI,YAC3BnF,KAAK+C,QAAQmC,UAAUC,IAAI,SAC3BnF,KAAK+C,QAAQuC,aAAa,WAAY,KACtC4hB,EAAOzhB,YAAYzF,KAAK+C,SAIxB,IAAMwkB,EAAWviB,EAASwiB,yBAC1BxnB,KAAKynB,iBAAmBziB,EAASC,cAAc,OAC/CjF,KAAKynB,iBAAiBviB,UAAUC,IAAI,kBACpCoiB,EAAS9hB,YAAYzF,KAAKynB,kBAE1BznB,KAAK0nB,oBAAsB1iB,EAASC,cAAc,OAClDjF,KAAK0nB,oBAAoBxiB,UAAUC,IAAI,qBACvCnF,KAAKynB,iBAAiBhiB,YAAYzF,KAAK0nB,qBAEvC1nB,KAAKyL,cAAgBzG,EAASC,cAAc,OAC5CjF,KAAKyL,cAAcvG,UAAUC,IAAI,gBAGjCnF,KAAK2nB,iBAAmB3iB,EAASC,cAAc,OAC/CjF,KAAK2nB,iBAAiBziB,UAAUC,IAAI,iBACpCnF,KAAKyL,cAAchG,YAAYzF,KAAK2nB,kBACpCJ,EAAS9hB,YAAYzF,KAAKyL,eAE1BzL,KAAKkL,SAAWlG,EAASC,cAAc,YACvCjF,KAAKkL,SAAShG,UAAUC,IAAI,yBAC5BnF,KAAKkL,SAAS5F,aAAa,aAAcqE,EAAQie,aACjD5nB,KAAKkL,SAAS5F,aAAa,iBAAkB,SAC7CtF,KAAKkL,SAAS5F,aAAa,cAAe,OAC1CtF,KAAKkL,SAAS5F,aAAa,iBAAkB,OAC7CtF,KAAKkL,SAAS5F,aAAa,aAAc,SACzCtF,KAAKkL,SAAS9F,SAAW,EACzBpF,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAU,SAAS,SAACM,GAAsB,OAAArH,EAAK0jB,iBAAiBrc,EAAAA,KAC5GxL,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKkL,SAAU,QAAQ,WAAM,OAAA/G,EAAK2jB,iBAAAA,KACzE9nB,KAAK2nB,iBAAiBliB,YAAYzF,KAAKkL,UAEvC,IAAM6c,EAAqB/nB,KAAKihB,sBAAsBC,eAAeb,EAAAA,mBAAoBrgB,KAAKkL,UAC9FlL,KAAKihB,sBAAsBI,WAAWnB,EAAAA,oBAAqB6H,GAE3D/nB,KAAKokB,iBAAmBpkB,KAAKihB,sBAAsBC,eAAef,EAAAA,gBAAiBngB,KAAKonB,UAAWpnB,KAAK2nB,kBACxG3nB,KAAKihB,sBAAsBI,WAAWnB,EAAAA,iBAAkBlgB,KAAKokB,kBAE7DpkB,KAAKgoB,OAAShoB,KAAK+R,QAAQ1C,OAASrP,KAAKgoB,OACzChoB,KAAK+iB,cAAgB,IAAI/M,EAAAA,aAAahR,EAAUhF,KAAK+R,QAAQ/D,mBAC7DhO,KAAKuG,SAASvG,KAAKykB,eAAewD,gBAAe,SAAA9lB,GAAK,OAAAgC,EAAK4e,cAAemF,gBAAgB/lB,EAAAA,KAC1FnC,KAAK+iB,cAAcoF,SAASnoB,KAAKgoB,QAEjChoB,KAAKooB,wBAA0BpoB,KAAKihB,sBAAsBC,eAAeV,EAAAA,wBACzExgB,KAAKihB,sBAAsBI,WAAWnB,EAAAA,wBAAyBlgB,KAAKooB,yBAEpE,IAAMC,EAAWroB,KAAKukB,kBACtBvkB,KAAK4C,eAAiB5C,KAAKuG,SAASvG,KAAKihB,sBAAsBC,eAAejB,EAAAA,cAAeoI,EAAUroB,KAAK0C,KAAM1C,KAAKyL,gBACvHzL,KAAKihB,sBAAsBI,WAAWnB,EAAAA,eAAgBlgB,KAAK4C,gBAC3D5C,KAAKuG,SAASvG,KAAK4C,eAAe2Y,0BAAyB,SAAApZ,GAAK,OAAAgC,EAAKue,UAAU7L,KAAK1U,EAAAA,KACpFnC,KAAKwG,UAAS,SAAArE,GAAK,OAAAgC,EAAKvB,eAAgBE,OAAOX,EAAEQ,KAAMR,EAAEO,KAAAA,IAEzD1C,KAAKsoB,iBAAmBtjB,EAASC,cAAc,OAC/CjF,KAAKsoB,iBAAiBpjB,UAAUC,IAAI,oBACpCnF,KAAKmlB,mBAAqBnlB,KAAKihB,sBAAsBC,eAAexc,EAAAA,kBAAmB1E,KAAKkL,SAAUlL,KAAKsoB,kBAC3GtoB,KAAK2nB,iBAAiBliB,YAAYzF,KAAKsoB,kBAGvCtoB,KAAK+C,QAAQ0C,YAAY8hB,GAEzBvnB,KAAKuoB,cAAgBvoB,KAAKihB,sBAAsBC,eAAevB,EAAAA,cAC/D3f,KAAKihB,sBAAsBI,WAAWnB,EAAAA,cAAelgB,KAAKuoB,eAC1DvoB,KAAK2X,cAAgB3X,KAAKihB,sBAAsBC,eAAed,EAAAA,cAC/DpgB,KAAKihB,sBAAsBI,WAAWnB,EAAAA,cAAelgB,KAAK2X,eAE1D3X,KAAKgE,SAAWhE,KAAKihB,sBAAsBC,eAAevc,EAAAA,UACxD,SAAC6jB,GAAmB,OAAArkB,EAAK6E,YAAYwf,GAAAA,EAAc,KACnDxoB,KAAKynB,iBACLznB,KAAK0nB,oBACL1nB,KAAK+C,SAEP/C,KAAKgE,SAAS4f,cAAc5jB,KAAK+iB,cAAcrV,QAC/C1N,KAAKuG,SAASvG,KAAKshB,cAAcmH,wBAAuB,WAAM,OAAAtkB,EAAKH,SAAUwgB,gBAAAA,KAC7ExkB,KAAKuG,SAASvG,KAAKgE,UAEnBhE,KAAKuG,SAASvG,KAAKmiB,cAAa,WAC9Bhe,EAAKvB,eAAgBuf,eACrBhe,EAAKukB,eAAAA,KAEP1oB,KAAKuG,SAASvG,KAAKwG,UAAS,WAAM,OAAArC,EAAKvB,eAAgB4D,SAASrC,EAAKxB,KAAMwB,EAAKzB,KAAAA,KAChF1C,KAAKuG,SAASvG,KAAKuH,QAAO,WAAM,OAAApD,EAAKvB,eAAgB2E,QAAAA,KACrDvH,KAAKuG,SAASvG,KAAK2oB,SAAQ,WAAM,OAAAxkB,EAAKvB,eAAgB+lB,SAAAA,KACtD3oB,KAAKuG,SAASvG,KAAK4C,eAAe6E,oBAAmB,WAAM,OAAAtD,EAAKH,SAAUwgB,gBAAAA,KAE1ExkB,KAAKoc,kBAAoBpc,KAAKuG,SAASvG,KAAKihB,sBAAsBC,eAAexB,EAAAA,iBAC/E1f,KAAK+C,QACL/C,KAAKyL,cACLzL,KAAKmhB,aAEPnhB,KAAKihB,sBAAsBI,WAAWnB,EAAAA,kBAAmBlgB,KAAKoc,mBAC9Dpc,KAAKuG,SAASvG,KAAKoc,kBAAkBwM,sBAAqB,SAAAzmB,GAAK,OAAAgC,EAAK6E,YAAY7G,EAAEqmB,OAAQrmB,EAAE0mB,oBAAAA,KAC5F7oB,KAAKuG,SAASvG,KAAKoc,kBAAkB0M,mBAAkB,WAAM,OAAA3kB,EAAKwe,mBAAmB9L,MAAAA,KACrF7W,KAAKuG,SAASvG,KAAKoc,kBAAkB2M,iBAAgB,SAAA5mB,GAAK,OAAAgC,EAAKvB,eAAgBomB,mBAAmB7mB,EAAEwE,MAAOxE,EAAEyE,IAAKzE,EAAE8mB,iBAAAA,KACpHjpB,KAAKuG,SAASvG,KAAKoc,kBAAkB8M,uBAAsB,YAIzD/kB,EAAK+G,SAAUI,MAAQT,EACvB1G,EAAK+G,SAAUjC,QACf9E,EAAK+G,SAAUwB,QAAAA,KAEjB1M,KAAKuG,SAASvG,KAAKmpB,UAAUzW,OAAM,SAAAvQ,GACjCgC,EAAKH,SAAUwgB,iBACfrgB,EAAKiY,kBAAmBpS,SAAAA,KAE1BhK,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAKynB,iBAAkB,UAAU,WAAM,OAAAtjB,EAAKiY,kBAAmBpS,SAAAA,KAEtGhK,KAAK6S,kBAAoB7S,KAAKihB,sBAAsBC,eAAerT,EAAAA,iBAAkB7N,KAAK+C,QAAS/C,KAAKyL,eACxGzL,KAAKuG,SAASvG,KAAK6S,mBACnB7S,KAAKuG,SAASvG,KAAK6G,UAAS,WAAM,OAAA1C,EAAK0O,kBAAmBE,UAAAA,KAC1D/S,KAAKghB,UAAUoI,YAAYppB,KAAK+C,QAAS/C,KAAK6S,mBAC9C7S,KAAKmhB,WAAWiI,YAAYppB,KAAKyL,cAAezL,KAAK2X,cAAe3X,KAAK4C,gBACzE5C,KAAKuG,SAASvG,KAAKihB,sBAAsBC,eAAeR,EAAAA,yBAA0B1gB,KAAKyL,gBAEvFzL,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyB5H,KAAK+C,QAAS,aAAa,SAACZ,GAAkB,OAAAgC,EAAKiY,kBAAmBiN,YAAYlnB,EAAAA,KAGrHnC,KAAKspB,iBAAiBC,sBACxBvpB,KAAKoc,kBAAkBoN,UACvBxpB,KAAK+C,QAAQmC,UAAUC,IAAI,wBAE3BnF,KAAKoc,kBAAkBqN,SAGrBzpB,KAAK+R,QAAQ2S,mBAGf1kB,KAAK2kB,sBAAwB,IAAI/E,EAAAA,qBAAqB5f,KAAMA,KAAK4C,iBAG/D5C,KAAK+R,QAAQ2X,qBACf1pB,KAAK2pB,uBAAyB3pB,KAAKihB,sBAAsBC,eAAe/G,EAAAA,sBAAuBna,KAAKynB,iBAAkBznB,KAAKyL,gBAE7HzL,KAAKykB,eAAewD,gBAAe,YAC5B9jB,EAAKwlB,wBAA0BxlB,EAAK4N,QAAQ2X,oBAAsBvlB,EAAKsjB,kBAAoBtjB,EAAKsH,gBACnGtH,EAAKwlB,uBAAyBxlB,EAAK8c,sBAAsBC,eAAe/G,EAAAA,sBAAuBhW,EAAKsjB,iBAAkBtjB,EAAKsH,eAAAA,IAI/HzL,KAAKokB,iBAAiBC,UAGtBrkB,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,GAG5B1C,KAAK4pB,cAIL5pB,KAAK6pB,WAAAA,EAGC1lB,EAAAA,UAAAA,gBAAR,WACE,OAAQnE,KAAK+R,QAAQ+X,cACnB,IAAK,SAAU,OAAO9pB,KAAKihB,sBAAsBC,eAAehK,EAAAA,SAAUlX,KAAK+iB,cAAerV,OAAQ1N,KAAKyL,cAAgBzL,KAAKghB,UAAWhhB,KAAKmhB,YAChJ,IAAK,MAAO,OAAOnhB,KAAKihB,sBAAsBC,eAAerB,EAAAA,YAAa7f,KAAK+iB,cAAerV,OAAQ1N,KAAK+C,QAAU/C,KAAKyL,cAAgBzL,KAAKynB,iBAAmBznB,KAAKghB,UAAWhhB,KAAKmhB,YACvL,QAAS,MAAM,IAAI9a,MAAM,8BAA8BrG,KAAK+R,QAAQ+X,aAAY,OAQ5E3lB,EAAAA,UAAAA,UAAR,SAAkBkL,G,UAChBrP,KAAKgoB,OAAS3Y,EACI,QAAlBlL,EAAAA,KAAK4e,qBAAAA,IAAa5e,GAAAA,EAAEgkB,SAAS9Y,GACV,QAAnBnN,EAAAA,KAAKU,sBAAAA,IAAcV,GAAAA,EAAEyhB,UAAU3jB,KAAK+iB,cAAerV,QACtC,QAAb5I,EAAAA,KAAKd,gBAAAA,IAAQc,GAAAA,EAAE8e,cAAc5jB,KAAK+iB,cAAerV,OAAAA,EAkB5CvJ,EAAAA,UAAAA,UAAP,sBACQlC,EAAOjC,KACP+pB,EAAK/pB,KAAK+C,QAGhB,SAASinB,EAAUxe,GAEjB,IAKIye,EACAC,EANExe,EAAMzJ,EAAK0V,cAAewS,iBAAiB3e,EAAIvJ,EAAKwJ,cAAgBxJ,EAAKU,KAAMV,EAAKS,MAC1F,IAAKgJ,EACH,OAAO,EAKT,OAASF,EAAW4e,cAAgB5e,EAAGqG,MACrC,IAAK,YACHqY,EAAS,YACL1e,EAAG6e,SAELJ,EAAM,WACFze,EAAG6a,SACL4D,EAAMze,EAAG6a,OAAS,EAAI7a,EAAG6a,OAAS,IAIpC4D,EAAmB,EAAbze,EAAG6e,QAAc,EACR,EAAb7e,EAAG6e,QAAc,EACF,EAAb7e,EAAG6e,QAAc,EAAJ,EAGnB,MACF,IAAK,UACHH,EAAS,EACTD,EAAMze,EAAG6a,OAAS,EAAI7a,EAAG6a,OAAS,EAClC,MACF,IAAK,YACH6D,EAAS,EACTD,EAAMze,EAAG6a,OAAS,EAAI7a,EAAG6a,OAAS,EAClC,MACF,IAAK,QAGH,GAAe,IAFApkB,EAAK+B,SAAUsmB,iBAAiB9e,GAG7C,OAAO,EAGT0e,EAAU1e,EAAkB+e,OAAS,EAAI,EAAqB,EAC9DN,EAAM,EACN,MACF,QAEE,OAAO,EAKX,iBAAIC,QAAAA,IAAwBD,GAAqBA,EAAM,IAIhDhoB,EAAKqnB,iBAAiBkB,kBAAkB,CAC7CC,IAAK/e,EAAIsK,EAAI,GACb0U,IAAKhf,EAAIuK,EAAI,GACboQ,OAAQ4D,EACRC,OAAMplB,EACN6lB,KAAMnf,EAAGof,QACTC,IAAKrf,EAAGsf,OACRniB,MAAO6C,EAAGuf,UAYd,KAAMC,EAAmE,CACvEC,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPC,EACK,SAAC7f,GASR,OARAwe,EAAUxe,GACLA,EAAG6e,UAENloB,EAAKilB,UAAWxe,oBAAoB,UAAWoiB,EAAgBC,SAC3DD,EAAgBG,WAClBhpB,EAAKilB,UAAWxe,oBAAoB,YAAaoiB,EAAgBG,YAG9DhpB,EAAKmpB,OAAO9f,EAAAA,EAVjB6f,EAYG,SAAC7f,GAEN,OADAwe,EAAUxe,GACHrJ,EAAKmpB,OAAO9f,GAAAA,EAAI,EAdrB6f,EAgBO,SAAC7f,GAENA,EAAG6e,SACLL,EAAUxe,EAAAA,EAnBV6f,EAsBO,SAAC7f,GAELA,EAAG6e,SACNL,EAAUxe,EAAAA,EAIhBxL,KAAKuG,SAASvG,KAAKspB,iBAAiBiC,kBAAiB,YAE/CC,GAC8C,UAA5CrpB,EAAKsiB,eAAejH,WAAWiO,UACjCtpB,EAAK+P,YAAY8B,MAAM,2BAA4B7R,EAAKmnB,iBAAiBoC,cAAcF,IAEzFrpB,EAAKY,QAASmC,UAAUC,IAAI,uBAC5BhD,EAAKia,kBAAmBoN,YAExBrnB,EAAK+P,YAAY8B,MAAM,gCACvB7R,EAAKY,QAASmC,UAAU6R,OAAO,uBAC/B5U,EAAKia,kBAAmBqN,UAKX,EAAT+B,EAGMR,EAAgBI,YAC1BrB,EAAGlkB,iBAAiB,YAAawlB,GACjCL,EAAgBI,UAAYC,IAJ5BtB,EAAGnhB,oBAAoB,YAAaoiB,EAAgBI,WACpDJ,EAAgBI,UAAY,MAMf,GAATI,EAGMR,EAAgBE,QAC1BnB,EAAGlkB,iBAAiB,QAASwlB,EAAsB,CAAEM,SAAS,IAC9DX,EAAgBE,MAAQG,IAJxBtB,EAAGnhB,oBAAoB,QAASoiB,EAAgBE,OAChDF,EAAgBE,MAAQ,MAMX,EAATM,EAGMR,EAAgBC,UAC1BD,EAAgBC,QAAUI,IAH1BlpB,EAAKilB,UAAWxe,oBAAoB,UAAWoiB,EAAgBC,SAC/DD,EAAgBC,QAAU,MAKb,EAATO,EAGMR,EAAgBG,YAC1BH,EAAgBG,UAAYE,IAH5BlpB,EAAKilB,UAAWxe,oBAAoB,YAAaoiB,EAAgBG,WACjEH,EAAgBG,UAAY,UAMhCnrB,KAAKspB,iBAAiBsC,eAAiB5rB,KAAKspB,iBAAiBsC,eAK7D5rB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyBmiB,EAAI,aAAa,SAACve,GAOvD,GANAA,EAAGtC,iBACH/G,EAAK8G,QAKA9G,EAAKmnB,iBAAiBC,uBAAwBpnB,EAAKia,kBAAmByP,qBAAqBrgB,GAiBhG,OAbAwe,EAAUxe,GAMNwf,EAAgBC,SAClB9oB,EAAKilB,UAAWvhB,iBAAiB,UAAWmlB,EAAgBC,SAE1DD,EAAgBG,WAClBhpB,EAAKilB,UAAWvhB,iBAAiB,YAAamlB,EAAgBG,WAGzDhpB,EAAKmpB,OAAO9f,EAAAA,KAGrBxL,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyBmiB,EAAI,SAAS,SAACve,GAEnD,IAAIwf,EAAgBE,MAApB,CAEA,IAAK/oB,EAAKiG,OAAO0jB,cAAe,CAG9B,IAAMtD,EAASrmB,EAAK6B,SAAUsmB,iBAAiB9e,GAG/C,GAAe,IAAXgd,EACF,OAMF,IAFA,IAAMuD,EAAWlnB,EAAAA,GAAGwe,KAAOlhB,EAAKgJ,YAAYC,gBAAgB4gB,sBAAwB,IAAM,MAAQxgB,EAAG+e,OAAS,EAAI,IAAM,KACpHrZ,EAAO,GACFpM,EAAI,EAAGA,EAAInB,KAAKsoB,IAAIzD,GAAS1jB,IACpCoM,GAAQ6a,EAGV,OADA5pB,EAAKgJ,YAAYE,iBAAiB6F,GAAAA,GAC3B/O,EAAKmpB,OAAO9f,GAAAA,EAKrB,QAAIrJ,EAAK6B,SAAUkoB,QAAQ1gB,GAClBrJ,EAAKmpB,OAAO9f,QAAAA,CADrB,IAGC,CAAEmgB,SAAS,KAEd3rB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyBmiB,EAAI,cAAc,SAACve,GACxD,IAAIrJ,EAAKmnB,iBAAiBC,qBAE1B,OADApnB,EAAK6B,SAAUmoB,aAAa3gB,GACrBrJ,EAAKmpB,OAAO9f,EAAAA,GAClB,CAAEmgB,SAAS,KAEd3rB,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyBmiB,EAAI,aAAa,SAACve,GACvD,IAAIrJ,EAAKmnB,iBAAiBC,qBAC1B,OAAKpnB,EAAK6B,SAAUooB,YAAY5gB,QAAAA,EACvBrJ,EAAKmpB,OAAO9f,EAAAA,GAEpB,CAAEmgB,SAAS,MAUTxnB,EAAAA,UAAAA,QAAP,SAAewC,EAAeC,G,MACT,QAAnB1E,EAAAA,KAAKU,sBAAAA,IAAcV,GAAAA,EAAEmqB,YAAY1lB,EAAOC,EAAAA,EAQlCzC,EAAAA,UAAAA,oBAAR,SAA4BwC,EAAeC,G,MAC3B,QAAd1E,EAAAA,KAAK8e,iBAAAA,IAAS9e,GAAAA,EAAEoqB,YAAY3lB,EAAOC,EAAAA,EAM9BzC,EAAAA,UAAAA,kBAAP,SAAyBqH,G,OACG,QAAtBrH,EAAAA,KAAKiY,yBAAAA,IAAiBjY,OAAAA,EAAAA,EAAEooB,mBAAmB/gB,IAC7CxL,KAAK+C,QAASmC,UAAUC,IAAI,iBAE5BnF,KAAK+C,QAASmC,UAAU6R,OAAO,kBAO3B5S,EAAAA,UAAAA,YAAR,WACOnE,KAAKmL,YAAYqhB,sBACpBxsB,KAAKmL,YAAYqhB,qBAAAA,EACjBxsB,KAAKgK,QAAQhK,KAAKoI,OAAO6N,EAAGjW,KAAKoI,OAAO6N,GAAAA,EAIrC9R,EAAAA,UAAAA,YAAP,SAAmBsoB,EAAc5D,EAA+B3T,QAAAA,IAAAA,IAAAA,EAAAA,GAC9D/S,EAAAA,UAAM6G,YAAWnH,KAAA,KAAC4qB,EAAM5D,EAAqB3T,GAC7ClV,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,IAGvByB,EAAAA,UAAAA,MAAP,SAAa+M,IAAAA,EACX,EAAAjG,OAAMiG,EAAMlR,KAAKkL,SAAWlL,KAAKmL,YAAAA,EAY5BhH,EAAAA,UAAAA,4BAAP,SAAmCuoB,GACjC1sB,KAAK8jB,uBAAyB4I,CAAAA,EAazBvoB,EAAAA,UAAAA,oBAAP,SAA2B8P,EAAenC,EAA6BC,GACrE,IAAM+C,EAAY9U,KAAKghB,UAAU2L,oBAAoB1Y,EAAOnC,EAASC,GAErE,OADA/R,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,GACrBoS,CAAAA,EAOF3Q,EAAAA,UAAAA,sBAAP,SAA6B2Q,GACvB9U,KAAKghB,UAAU4L,sBAAsB9X,IACvC9U,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,IAIzByB,EAAAA,UAAAA,qBAAP,SAA4BmT,GAC1B,OAAOtX,KAAKmhB,WAAW0L,qBAAqBvV,EAAAA,EAGvCnT,EAAAA,UAAAA,wBAAP,SAA+B2N,GAC7B,IAAK9R,KAAKooB,wBACR,MAAM,IAAI/hB,MAAM,iCAElB,IAAMymB,EAAW9sB,KAAKooB,wBAAwB7hB,SAASuL,GAEvD,OADA9R,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,GACrBoqB,CAAAA,EAGF3oB,EAAAA,UAAAA,0BAAP,SAAiC2oB,GAC/B,IAAK9sB,KAAKooB,wBACR,MAAM,IAAI/hB,MAAM,iCAEdrG,KAAKooB,wBAAwB2E,WAAWD,IAC1C9sB,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,IAIhChB,OAAAA,eAAWyC,EAAAA,UAAA,UAAO,C,IAAlB,WACE,OAAOnE,KAAKoI,OAAO4kB,OAAAA,E,gCAGd7oB,EAAAA,UAAAA,UAAP,SAAiB8oB,GAEf,GAAIjtB,KAAKoI,SAAWpI,KAAKgkB,QAAQkJ,OAIjC,OAAOltB,KAAKoI,OAAO+kB,UAAUntB,KAAKoI,OAAOkd,MAAQtlB,KAAKoI,OAAO6N,EAAIgX,EAAAA,EAG5D9oB,EAAAA,UAAAA,mBAAP,SAA0BipB,GACxB,OAAOptB,KAAKohB,mBAAmBiM,mBAAmBD,EAAAA,EAM7CjpB,EAAAA,UAAAA,aAAP,WACE,QAAOnE,KAAKoc,mBAAoBpc,KAAKoc,kBAAkB4J,YAAAA,EASlD7hB,EAAAA,UAAAA,OAAP,SAAcmpB,EAAgB5C,EAAa5kB,GACzC9F,KAAKoc,kBAAmBmR,aAAaD,EAAQ5C,EAAK5kB,EAAAA,EAO7C3B,EAAAA,UAAAA,aAAP,WACE,OAAOnE,KAAKoc,kBAAoBpc,KAAKoc,kBAAkB/P,cAAgB,IAGlElI,EAAAA,UAAAA,qBAAP,WACE,GAAKnE,KAAKoc,mBAAsBpc,KAAKoc,kBAAkB4J,aAIvD,MAAO,CACLwH,YAAaxtB,KAAKoc,kBAAkBqR,eAAgB,GACpD/S,SAAU1a,KAAKoc,kBAAkBqR,eAAgB,GACjDC,UAAW1tB,KAAKoc,kBAAkBuR,aAAc,GAChDhT,OAAQ3a,KAAKoc,kBAAkBuR,aAAc,KAO1CxpB,EAAAA,UAAAA,eAAP,W,MACwB,QAAtBhC,EAAAA,KAAKia,yBAAAA,IAAiBja,GAAAA,EAAEyrB,gBAAAA,EAMnBzpB,EAAAA,UAAAA,UAAP,W,MACwB,QAAtBhC,EAAAA,KAAKia,yBAAAA,IAAiBja,GAAAA,EAAE0rB,WAAAA,EAGnB1pB,EAAAA,UAAAA,YAAP,SAAmBwC,EAAeC,G,MACV,QAAtB1E,EAAAA,KAAKka,yBAAAA,IAAiBla,GAAAA,EAAE4rB,YAAYnnB,EAAOC,EAAAA,EASnCzC,EAAAA,UAAAA,SAAV,SAAmBuO,GAIjB,GAHA1S,KAAK+tB,iBAAAA,EACL/tB,KAAKguB,cAAAA,EAEDhuB,KAAK8jB,yBAAAA,IAA0B9jB,KAAK8jB,uBAAuBpR,GAC7D,OAAO,EAIT,IAAMub,EAA0BjuB,KAAKkuB,QAAQC,OAASnuB,KAAK+R,QAAQqc,iBAAmB1b,EAAMoY,OAE5F,IAAKmD,IAA4BjuB,KAAKmlB,mBAAoBkJ,QAAQ3b,GAIhE,OAHI1S,KAAKoI,OAAOkd,QAAUtlB,KAAKoI,OAAOiC,OACpCrK,KAAKiS,eAAeqc,kBAAAA,EAKnBL,GAA0C,SAAdvb,EAAMlR,KAAgC,aAAdkR,EAAMlR,MAC7DxB,KAAKuuB,qBAAAA,GAGP,IAAMtuB,GAAAA,EAAS,EAAAuuB,uBAAsB9b,EAAO1S,KAAKmL,YAAYC,gBAAgB4gB,sBAAuBhsB,KAAKkuB,QAAQC,MAAOnuB,KAAK+R,QAAQqc,iBAIrI,GAFApuB,KAAK+kB,kBAAkBrS,GAEH,IAAhBzS,EAAO4R,MAAyD,IAAhB5R,EAAO4R,KAAqC,CAC9F,IAAM4c,EAAczuB,KAAK0C,KAAO,EAEhC,OADA1C,KAAKgJ,YAA4B,IAAhB/I,EAAO4R,MAAuC4c,EAAcA,GACtEzuB,KAAKsrB,OAAO5Y,GAAAA,EAOrB,QAJoB,IAAhBzS,EAAO4R,MACT7R,KAAK6tB,cAGH7tB,KAAK0uB,mBAAmB1uB,KAAKkuB,QAASxb,KAItCzS,EAAOqrB,QAETtrB,KAAKsrB,OAAO5Y,GAAAA,IAGTzS,EAAOuB,QAMRkR,EAAMlR,MAAQkR,EAAMkY,UAAYlY,EAAMoY,SAAWpY,EAAMic,SAAgC,IAArBjc,EAAMlR,IAAIsE,QAC1E4M,EAAMlR,IAAIotB,WAAW,IAAM,IAAMlc,EAAMlR,IAAIotB,WAAW,IAAM,MAK9D5uB,KAAKuuB,qBACPvuB,KAAKuuB,qBAAAA,GAAsB,IAOzBtuB,EAAOuB,MAAQqD,EAAAA,GAAGgqB,KAAO5uB,EAAOuB,MAAQqD,EAAAA,GAAGiqB,KAC7C9uB,KAAKkL,SAAUI,MAAQ,IAGzBtL,KAAKsH,OAAOuP,KAAK,CAAErV,IAAKvB,EAAOuB,IAAKutB,SAAUrc,IAC9C1S,KAAKglB,cACLhlB,KAAKmL,YAAYE,iBAAiBpL,EAAOuB,KAAAA,GAMpCxB,KAAKykB,eAAejH,WAAWkH,sBAIpC1kB,KAAK+tB,iBAAAA,GAHI/tB,KAAKsrB,OAAO5Y,GAAAA,KAAO,EAMtBvO,EAAAA,UAAAA,mBAAR,SAA2B+pB,EAAmB1iB,GAC5C,IAAMwjB,EACHd,EAAQC,QAAUnuB,KAAK+R,QAAQqc,iBAAmB5iB,EAAGsf,SAAWtf,EAAGof,UAAYpf,EAAGmjB,SAClFT,EAAQe,WAAazjB,EAAGsf,QAAUtf,EAAGof,UAAYpf,EAAGmjB,SACpDT,EAAQe,WAAazjB,EAAG0jB,iBAAiB,YAE5C,MAAgB,aAAZ1jB,EAAGqG,KACEmd,EAIFA,KAAmBxjB,EAAG2jB,SAAW3jB,EAAG2jB,QAAU,KAG7ChrB,EAAAA,UAAAA,OAAV,SAAiBqH,GACfxL,KAAKguB,cAAAA,EAEDhuB,KAAK8jB,yBAAAA,IAA0B9jB,KAAK8jB,uBAAuBtY,KAwPnE,SAAiCA,GAC/B,OAAsB,KAAfA,EAAG2jB,SACO,KAAf3jB,EAAG2jB,SACY,KAAf3jB,EAAG2jB,OAvPEC,CAoPT,CApPiC5jB,IAC3BxL,KAAKiJ,QAGPjJ,KAAK+kB,kBAAkBvZ,GACvBxL,KAAKqvB,kBAAAA,EAAmB,EAShBlrB,EAAAA,UAAAA,UAAV,SAAoBqH,GAClB,IAAIhK,EAIJ,GAFAxB,KAAKqvB,kBAAAA,EAEDrvB,KAAK+tB,gBACP,OAAO,EAGT,GAAI/tB,KAAK8jB,yBAAAA,IAA0B9jB,KAAK8jB,uBAAuBtY,GAC7D,OAAO,EAKT,GAFAxL,KAAKsrB,OAAO9f,GAERA,EAAG8jB,SACL9tB,EAAMgK,EAAG8jB,cACJ,GAAiB,OAAb9jB,EAAG+jB,YAAAA,IAAkB/jB,EAAG+jB,MACjC/tB,EAAMgK,EAAG2jB,YACJ,IAAiB,IAAb3jB,EAAG+jB,OAA+B,IAAhB/jB,EAAG8jB,SAG9B,OAAO,EAFP9tB,EAAMgK,EAAG+jB,KAKX,UAAK/tB,IACFgK,EAAGsf,QAAUtf,EAAGof,SAAWpf,EAAGmjB,WAAa3uB,KAAK0uB,mBAAmB1uB,KAAKkuB,QAAS1iB,KAKpFhK,EAAMguB,OAAOC,aAAajuB,GAE1BxB,KAAKsH,OAAOuP,KAAK,CAAErV,IAAG2C,EAAE4qB,SAAUvjB,IAClCxL,KAAKglB,cACLhlB,KAAKmL,YAAYE,iBAAiB7J,GAAAA,GAElCxB,KAAKqvB,kBAAAA,EAILrvB,KAAKuuB,qBAAAA,EAEE,KASCpqB,EAAAA,UAAAA,YAAV,SAAsBqH,GAIpB,GAAIA,EAAG0F,MAAyB,eAAjB1F,EAAGkkB,aAAgClkB,EAAGmkB,WAAa3vB,KAAKguB,gBAAkBhuB,KAAKykB,eAAejH,WAAWkH,iBAAkB,CACxI,GAAI1kB,KAAKqvB,iBACP,OAAO,EAKTrvB,KAAKuuB,qBAAAA,EAEL,IAAM1jB,EAAOW,EAAG0F,KAIhB,OAHAlR,KAAKmL,YAAYE,iBAAiBR,GAAAA,GAElC7K,KAAKsrB,OAAO9f,IAAAA,CAId,QAAO,GAOFrH,EAAAA,UAAAA,KAAP,W,MACMnE,KAAK4vB,eACW,QAAlBztB,EAAAA,KAAKomB,qBAAAA,IAAapmB,GAAAA,EAAE0tB,iBAGtB7vB,KAAK4iB,QAAQ/L,MAAAA,EAiBR1S,EAAAA,UAAAA,OAAP,SAAc6R,EAAWC,GACnBD,IAAMhW,KAAK2C,MAAQsT,IAAMjW,KAAK0C,KAQlCP,EAAAA,UAAMW,OAAMjB,KAAA,KAACmU,EAAGC,GANVjW,KAAKokB,mBAAqBpkB,KAAKokB,iBAAiB0L,cAClD9vB,KAAKokB,iBAAiBC,SAAAA,EAQpBlgB,EAAAA,UAAAA,aAAR,SAAqB6R,EAAWC,G,QACT,QAArB/T,EAAAA,KAAKkiB,wBAAAA,IAAgBliB,GAAAA,EAAEmiB,UAIV,QAAbvf,EAAAA,KAAKd,gBAAAA,IAAQc,GAAAA,EAAE0f,gBAAAA,EAAe,EAMzBrgB,EAAAA,UAAAA,MAAP,WACE,GAA0B,IAAtBnE,KAAKoI,OAAOkd,OAAiC,IAAlBtlB,KAAKoI,OAAO6N,EAA3C,CAIAjW,KAAKoI,OAAO2nB,kBACZ/vB,KAAKoI,OAAOC,MAAM1I,IAAI,EAAGK,KAAKoI,OAAOC,MAAM5I,IAAIO,KAAKoI,OAAOkd,MAAQtlB,KAAKoI,OAAO6N,IAC/EjW,KAAKoI,OAAOC,MAAMvC,OAAS,EAC3B9F,KAAKoI,OAAOiC,MAAQ,EACpBrK,KAAKoI,OAAOkd,MAAQ,EACpBtlB,KAAKoI,OAAO6N,EAAI,EAChB,IAAK,IAAInR,EAAI,EAAGA,EAAI9E,KAAK0C,KAAMoC,IAC7B9E,KAAKoI,OAAOC,MAAMU,KAAK/I,KAAKoI,OAAO4nB,aAAahQ,EAAAA,oBAElDhgB,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,GAC5B1C,KAAKmpB,UAAUtS,KAAK,CAAE7O,SAAUhI,KAAKoI,OAAOiC,MAAO6K,OAAQ,MAWtD/Q,EAAAA,UAAAA,MAAP,W,QAKEnE,KAAK+R,QAAQrP,KAAO1C,KAAK0C,KACzB1C,KAAK+R,QAAQpP,KAAO3C,KAAK2C,KACzB,IAAM+pB,EAAwB1sB,KAAK8jB,uBAEnC9jB,KAAK+gB,SACL5e,EAAAA,UAAM0f,MAAKhgB,KAAA,MACW,QAAtBsC,EAAAA,KAAKiY,yBAAAA,IAAiBjY,GAAAA,EAAE0d,QACxB7hB,KAAKohB,mBAAmBS,QAGxB7hB,KAAK8jB,uBAAyB4I,EAG9B1sB,KAAKgK,QAAQ,EAAGhK,KAAK0C,KAAO,GACf,QAAbR,EAAAA,KAAK8B,gBAAAA,IAAQ9B,GAAAA,EAAEsiB,gBAAAA,EAGVrgB,EAAAA,UAAAA,kBAAP,W,MACqB,QAAnBhC,EAAAA,KAAKS,sBAAAA,IAAcT,GAAAA,EAAE8tB,mBAAAA,EAGf9rB,EAAAA,UAAAA,aAAR,W,OACkB,QAAZhC,EAAAA,KAAKY,eAAAA,IAAOZ,OAAAA,EAAAA,EAAE+C,UAAUkT,SAAS,UACnCpY,KAAKmL,YAAYE,iBAAiBxG,EAAAA,GAAGwe,IAAM,MAE3CrjB,KAAKmL,YAAYE,iBAAiBxG,EAAAA,GAAGwe,IAAM,OAIvClf,EAAAA,UAAAA,sBAAR,SAA8B0N,GAC5B,GAAK7R,KAAK4C,eAIV,OAAQiP,GACN,KAAKhS,EAAAA,yBAAyBqwB,oBAC5B,IAAMC,EAAcnwB,KAAK4C,eAAeK,WAAWmtB,kBAAkBC,QAAQ,GACvEC,EAAetwB,KAAK4C,eAAeK,WAAWstB,mBAAmBF,QAAQ,GAC/ErwB,KAAKmL,YAAYE,iBAAoBxG,EAAAA,GAAGwe,IAAG,MAAMiN,EAAY,IAAIH,EAAW,KAC5E,MACF,KAAKtwB,EAAAA,yBAAyB2wB,qBAC5B,IAAM7K,EAAY3lB,KAAK4C,eAAeK,WAAWwtB,gBAAgBJ,QAAQ,GACnE5K,EAAazlB,KAAK4C,eAAeK,WAAWytB,iBAAiBL,QAAQ,GAC3ErwB,KAAKmL,YAAYE,iBAAoBxG,EAAAA,GAAGwe,IAAG,MAAMoC,EAAU,IAAIE,EAAS,OAMvExhB,EAAAA,UAAAA,OAAP,SAAcqH,EAAWmlB,GACvB,GAAK3wB,KAAK+R,QAAQ6e,cAAiBD,EAKnC,OAFAnlB,EAAGtC,iBACHsC,EAAGc,mBAAAA,CACI,EAGDnI,EAAAA,UAAAA,YAAR,WACE,OAAO,GAKDA,EAAAA,UAAAA,WAAR,WACE,MAAkC,UAA3BnE,KAAK+R,QAAQ8e,SAAAA,EAIxB1sB,CA31CA,CAAA0c,CAA8BP,EAAAA,cAAjBnc,EAAAA,SAAAA,CAAA2sB,E,0FC5Db,IAOA5uB,EAAAA,WAYE,WACU4b,EACSiT,QAAAA,IAAAA,IAAAA,EArBgB,KAoBzB,KAAAjT,gBAAA,EACSiT,KAAAA,qBAAAA,EARX,KAAAC,eAAiB,EAEjB,KAAAC,6BAAA,CAgEV,QAtDS9uB,EAAAA,UAAAA,QAAP,WACMnC,KAAKkxB,mBACPje,aAAajT,KAAKkxB,kBAAAA,EAIf/uB,EAAAA,UAAAA,QAAP,SAAekc,EAA8BC,EAA4BC,GAAzE,WACEve,KAAKwe,UAAYD,EAEjBF,OAAAA,IAAWA,EAAyBA,EAAW,EAC/CC,OAAAA,IAASA,EAAuBA,EAASte,KAAKwe,UAAY,EAE1Dxe,KAAKye,eAAAA,IAAYze,KAAKye,UAA0B9a,KAAKmP,IAAI9S,KAAKye,UAAWJ,GAAYA,EACrFre,KAAK0e,aAAAA,IAAU1e,KAAK0e,QAAwB/a,KAAKC,IAAI5D,KAAK0e,QAASJ,GAAUA,EAI7E,IAAM6S,EAA6BC,KAAKC,MACxC,GAAIF,EAAqBnxB,KAAKgxB,gBAAkBhxB,KAAK+wB,qBAEnD/wB,KAAKgxB,eAAiBG,EACtBnxB,KAAKoe,qBACA,IAAKpe,KAAKixB,4BAA6B,CAE5C,IAAMK,EAAUH,EAAqBnxB,KAAKgxB,eACpCO,EAAkCvxB,KAAK+wB,qBAAuBO,EACpEtxB,KAAKixB,6BAAAA,EAELjxB,KAAKkxB,kBAAoB7tB,OAAOyG,YAAW,WACzChF,EAAKksB,eAAiBI,KAAKC,MAC3BvsB,EAAKsZ,gBACLtZ,EAAKmsB,6BAAAA,EACLnsB,EAAKosB,uBAAAA,CAAoBnkB,GACxBwkB,EAAAA,CAAAA,EAICpvB,EAAAA,UAAAA,cAAR,WAEE,QAAI,IAAAnC,KAAKye,gBAAAA,IAA2Bze,KAAK0e,cAAAA,IAAyB1e,KAAKwe,UAAvE,CAKA,IAAM7X,EAAQhD,KAAKC,IAAI5D,KAAKye,UAAW,GACjC7X,EAAMjD,KAAKmP,IAAI9S,KAAK0e,QAAS1e,KAAKwe,UAAY,GAGpDxe,KAAKye,eAAAA,EACLze,KAAK0e,aAAAA,EAGL1e,KAAK8d,gBAAgBnX,EAAOC,EAAAA,CAAAA,EAEhCzE,CAxEA,CAAAD,GAAaiC,EAAAA,mBAAAA,CAAAA,E,w9BCPb,aACAO,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAUAC,EAAAA,SAAAA,GAoBE,WACmB2sB,EACA/J,EACAgK,EACA7e,EACgBX,EACCoK,EACC+H,EACFxhB,GARnC,MAUET,EAAAA,KAAAA,OAAO,K,OATUyC,EAAAA,aAAAA,EACAA,EAAAA,iBAAAA,EACAA,EAAAA,YAAAA,EACAA,EAAAA,SAAAA,EACgBA,EAAAA,eAAAA,EACCA,EAAAA,gBAAAA,EACCA,EAAAA,iBAAAA,EACFA,EAAAA,eAAAA,EA3B5BA,EAAAA,eAAyB,EACxBA,EAAAA,kBAA4B,EAC5BA,EAAAA,yBAAmC,EACnCA,EAAAA,0BAAoC,EACpCA,EAAAA,4BAAsC,EACtCA,EAAAA,0BAAoC,EACpCA,EAAAA,YAAsB,EACtBA,EAAAA,eAAyB,EAOzBA,EAAAA,oBAA8B,EAE9BA,EAAAA,uBAAwC,KACxCA,EAAAA,wBAAAA,EAiBNA,EAAKX,eAAkBW,EAAK6iB,iBAAiBiK,YAAc9sB,EAAK6sB,YAAYC,aAzC9C,GA0C9B9sB,EAAK2B,UAAAA,EAAS,EAAAqB,0BAAyBhD,EAAK6iB,iBAAkB,SAAU7iB,EAAKukB,UAAUjjB,KAAKtB,KAG5FA,EAAK+sB,cAAgB/sB,EAAKqN,eAAe7J,OACzCxD,EAAK2B,SAAS3B,EAAKqN,eAAe+R,QAAQ4N,kBAAiB,SAAAzvB,GAAK,SAAKwvB,cAAgBxvB,EAAE0vB,YAAAA,KACvFjtB,EAAKktB,kBAAoBltB,EAAKhC,eAAeK,WAC7C2B,EAAK2B,SAAS3B,EAAKhC,eAAe6E,oBAAmB,SAAAtF,GAAK,SAAK2vB,kBAAoB3vB,CAAAA,KAGnF2H,YAAW,WAAM,SAAK0a,gBAAAA,GAAkB,GAxBvB,CA2OrB,QAhQ8B3c,EAAAA,EAAAA,GAgDrB1D,EAAAA,UAAAA,cAAP,SAAqBuJ,GACnB1N,KAAKynB,iBAAiBhd,MAAMsnB,gBAAkBrkB,EAAOgB,WAAWnB,GAAAA,EAO1DpJ,EAAAA,UAAAA,SAAR,SAAiB6tB,GAAjB,WACE,GAAIA,EAKF,OAJAhyB,KAAKoe,qBAC+B,OAAhCpe,KAAKiyB,wBACPhU,qBAAqBje,KAAKiyB,yBAIM,OAAhCjyB,KAAKiyB,yBACPjyB,KAAKiyB,uBAAyB9T,uBAAsB,WAAM,OAAAha,EAAKia,eAAAA,IAAAA,EAI3Dja,EAAAA,UAAAA,cAAR,WACE,GAAInE,KAAKokB,iBAAiB1Z,OAAS,EAAG,CACpC1K,KAAKkyB,kBAAoBlyB,KAAK4C,eAAeK,WAAWytB,iBAAmBrtB,OAAOwb,iBAClF7e,KAAKmyB,yBAA2BnyB,KAAK4C,eAAeK,WAAWytB,iBAC/D1wB,KAAKoyB,4BAA8BpyB,KAAKynB,iBAAiB4K,aACzD,IAAMC,EAAkB3uB,KAAK+N,MAAM1R,KAAKkyB,kBAAoBlyB,KAAKuyB,4BAA8BvyB,KAAKoyB,4BAA8BpyB,KAAK4C,eAAeK,WAAWqtB,cAC7JtwB,KAAKwyB,4BAA8BF,IACrCtyB,KAAKwyB,0BAA4BF,EACjCtyB,KAAKyxB,YAAYhnB,MAAMC,OAAS1K,KAAKwyB,0BAA4B,KAKrE,KAAMC,EAAYzyB,KAAKiS,eAAe7J,OAAOiC,MAAQrK,KAAKkyB,kBACtDlyB,KAAKynB,iBAAiBgL,YAAcA,IAGtCzyB,KAAK0yB,wBAAAA,EACL1yB,KAAKynB,iBAAiBgL,UAAYA,GAGpCzyB,KAAKiyB,uBAAyB,MAMzB9tB,EAAAA,UAAAA,eAAP,SAAsB6tB,GAEpB,QAAI,IAFgBA,IAAAA,GAAAA,GAEhBhyB,KAAKuyB,4BAA8BvyB,KAAKiS,eAAe7J,OAAOC,MAAMvC,OAGtE,OAFA9F,KAAKuyB,0BAA4BvyB,KAAKiS,eAAe7J,OAAOC,MAAMvC,YAClE9F,KAAK2yB,SAASX,GAKZhyB,KAAKoyB,8BAAgCpyB,KAAK4C,eAAeK,WAAWqtB,cAMpEtwB,KAAK4yB,iBAAmB5yB,KAAK2xB,cAActnB,MAAQrK,KAAKkyB,mBAMxDlyB,KAAK8xB,kBAAkBpB,mBAAqB1wB,KAAKmyB,0BAXnDnyB,KAAK2yB,SAASX,EAAAA,EAsBV7tB,EAAAA,UAAAA,UAAR,SAAkBqH,GAMhB,GAJAxL,KAAK4yB,eAAiB5yB,KAAKynB,iBAAiBgL,UAIvCzyB,KAAKynB,iBAAiBoL,aAA3B,CAKA,GAAI7yB,KAAK0yB,uBAIP,OAHA1yB,KAAK0yB,wBAAAA,OAEL1yB,KAAKwxB,aAAa,GAIpB,IACMsB,EADSnvB,KAAK+N,MAAM1R,KAAK4yB,eAAiB5yB,KAAKkyB,mBAC/BlyB,KAAKiS,eAAe7J,OAAOiC,MACjDrK,KAAKwxB,aAAasB,EAAAA,CAAAA,EAQZ3uB,EAAAA,UAAAA,cAAR,SAAsBqH,EAAWgd,GAC/B,IAAMuK,EAAmB/yB,KAAKynB,iBAAiBgL,UAAYzyB,KAAKoyB,4BAChE,QAAK5J,EAAS,GAAyC,IAApCxoB,KAAKynB,iBAAiBgL,WACtCjK,EAAS,GAAKuK,EAAmB/yB,KAAKwyB,6BACnChnB,EAAGwnB,YACLxnB,EAAGtC,kBAAAA,EAEE,EAWJ/E,EAAAA,UAAAA,QAAP,SAAeqH,GACb,IAAMgd,EAASxoB,KAAKizB,mBAAmBznB,GACvC,OAAe,IAAXgd,IAGJxoB,KAAKynB,iBAAiBgL,WAAajK,EAC5BxoB,KAAKkzB,cAAc1nB,EAAIgd,GAAAA,EAGxBrkB,EAAAA,UAAAA,mBAAR,SAA2BqH,GAEzB,GAAkB,IAAdA,EAAG+e,QAAgB/e,EAAGuf,SACxB,OAAO,EAIT,IAAIvC,EAASxoB,KAAKmzB,qBAAqB3nB,EAAG+e,OAAQ/e,GAMlD,OALIA,EAAG4nB,YAAcC,WAAWC,eAC9B9K,GAAUxoB,KAAKkyB,kBACN1mB,EAAG4nB,YAAcC,WAAWE,iBACrC/K,GAAUxoB,KAAKkyB,kBAAoBlyB,KAAKiS,eAAevP,MAElD8lB,CAAAA,EAQFrkB,EAAAA,UAAAA,iBAAP,SAAwBqH,GAEtB,GAAkB,IAAdA,EAAG+e,QAAgB/e,EAAGuf,SACxB,OAAO,EAIT,IAAIvC,EAASxoB,KAAKmzB,qBAAqB3nB,EAAG+e,OAAQ/e,GASlD,OARIA,EAAG4nB,YAAcC,WAAWG,iBAC9BhL,GAAUxoB,KAAKkyB,kBAAoB,EACnClyB,KAAKyzB,qBAAuBjL,EAC5BA,EAAS7kB,KAAKO,MAAMP,KAAKsoB,IAAIjsB,KAAKyzB,uBAAyBzzB,KAAKyzB,oBAAsB,EAAI,GAAK,GAC/FzzB,KAAKyzB,qBAAuB,GACnBjoB,EAAG4nB,YAAcC,WAAWE,iBACrC/K,GAAUxoB,KAAKiS,eAAevP,MAEzB8lB,CAAAA,EAGDrkB,EAAAA,UAAAA,qBAAR,SAA6BqkB,EAAgBhd,GAC3C,IAAMkoB,EAAW1zB,KAAKqc,gBAAgBmB,WAAWmW,mBAEjD,MAAkB,QAAbD,GAAsBloB,EAAGsf,QACd,SAAb4I,GAAuBloB,EAAGof,SACb,UAAb8I,GAAwBloB,EAAGuf,SACrBvC,EAASxoB,KAAKqc,gBAAgBmB,WAAWoW,sBAAwB5zB,KAAKqc,gBAAgBmB,WAAWqW,kBAGnGrL,EAASxoB,KAAKqc,gBAAgBmB,WAAWqW,iBAAAA,EAO3C1vB,EAAAA,UAAAA,aAAP,SAAoBqH,GAClBxL,KAAK8zB,YAActoB,EAAGuoB,QAAQ,GAAG3W,KAAAA,EAO5BjZ,EAAAA,UAAAA,YAAP,SAAmBqH,GACjB,IAAM+e,EAASvqB,KAAK8zB,YAActoB,EAAGuoB,QAAQ,GAAG3W,MAEhD,OADApd,KAAK8zB,YAActoB,EAAGuoB,QAAQ,GAAG3W,MAClB,IAAXmN,IAGJvqB,KAAKynB,iBAAiBgL,WAAalI,EAC5BvqB,KAAKkzB,cAAc1nB,EAAI+e,GAAAA,EA9Pbvd,EAAAA,CAyBhBxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,kBACAA,EAAAA,EAAAA,EAAAA,iBA5BQwvB,EAAb,CAAAnvB,CAA8BJ,EAAAA,YAAjBN,EAAAA,SAAAA,CAAA6vB,E,yyCCdb,cACArvB,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MAEAhF,EAAAA,SAAAA,GAQE,WACmBsc,EACgBlK,EACImP,EACJxe,GAJnC,MAMET,EAAAA,KAAAA,OAAO,K,OALU6K,EAAAA,eAAAA,EACgBA,EAAAA,eAAAA,EACIA,EAAAA,mBAAAA,EACJA,EAAAA,eAAAA,EAVlBA,EAAAA,oBAA6D,IAAIgM,IAG1EhM,EAAAA,oBAAAA,EACAA,EAAAA,oBAAAA,EAUNA,EAAKinB,WAAajvB,SAASC,cAAc,OACzC+H,EAAKinB,WAAW/uB,UAAUC,IAAI,8BAC9B6H,EAAKmP,eAAe1W,YAAYuH,EAAKinB,YAErCjnB,EAAKzG,SAASyG,EAAKpK,eAAe2Y,0BAAyB,WAAM,SAAK2Y,eAAAA,KACtElnB,EAAKzG,SAASyG,EAAKpK,eAAe6E,oBAAmB,WACnDuF,EAAKmnB,oBAAAA,EACLnnB,EAAKknB,eAAAA,KAEPlnB,EAAKzG,UAAAA,EAAS,EAAAqB,0BAAyBvE,OAAQ,UAAU,WAAM,SAAK6wB,eAAAA,KACpElnB,EAAKzG,SAASyG,EAAKiF,eAAe+R,QAAQ4N,kBAAiB,WACzD5kB,EAAKonB,mBAAqBpnB,EAAKiF,eAAe7J,SAAW4E,EAAKiF,eAAe+R,QAAQ6G,GAAAA,KAEvF7d,EAAKzG,SAASyG,EAAKoU,mBAAmBiT,wBAAuB,WAAM,SAAKH,eAAAA,KACxElnB,EAAKzG,SAASyG,EAAKoU,mBAAmBkT,qBAAoB,YAAc,SAAKC,kBAAkBC,EAAAA,KArB9E,CA+GrB,QAxH8C3sB,EAAAA,EAAAA,GAiC5B1D,EAAAA,UAAAA,QAAhB,WACEnE,KAAKi0B,WAAWld,SAChB/W,KAAKy0B,oBAAoB5xB,QACzBV,EAAAA,UAAM2F,QAAOjG,KAAA,OAGPsC,EAAAA,UAAAA,cAAR,+BACMnE,KAAKge,kBAGThe,KAAKge,gBAAkBhe,KAAK4C,eAAe8xB,oBAAmB,WAC5DvyB,EAAKwyB,qBACLxyB,EAAK6b,qBAAAA,CAAkBjR,IAAAA,EAIpB5I,EAAAA,UAAAA,mBAAP,W,YACE,IAAyB,QAAAnE,KAAKohB,mBAAmBrG,aAAWjW,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAzD,IAAM0vB,EAAU1vB,EAAAA,MACnB9E,KAAK40B,kBAAkBJ,EAAAA,CAEzBx0B,C,gGAAAA,CAAAA,KAAKm0B,oBAAAA,CAAqB,EAGpBhwB,EAAAA,UAAAA,kBAAR,SAA0BqwB,GACxBx0B,KAAK60B,cAAcL,GACfx0B,KAAKm0B,oBACPn0B,KAAK80B,kBAAkBN,EAAAA,EAInBrwB,EAAAA,UAAAA,eAAR,SAAuBqwB,G,MACfzxB,EAAUiC,SAASC,cAAc,OACvClC,EAAQmC,UAAUC,IAAI,oBACtBpC,EAAQ0H,MAAMuB,MAAWrI,KAAK+N,OAAO8iB,EAAWziB,QAAQ/F,OAAS,GAAKhM,KAAK4C,eAAeK,WAAWC,iBAAgB,KACrHH,EAAQ0H,MAAMC,QAAa8pB,EAAWziB,QAAQrH,QAAU,GAAK1K,KAAK4C,eAAeK,WAAWE,iBAAgB,KAC5GJ,EAAQ0H,MAAMqB,KAAU0oB,EAAWO,OAAOrf,KAAO1V,KAAKiS,eAAe+R,QAAQC,OAAO5Z,OAASrK,KAAK4C,eAAeK,WAAWE,iBAAgB,KAC5IJ,EAAQ0H,MAAMqb,WAAgB9lB,KAAK4C,eAAeK,WAAWE,iBAAgB,KAE7E,IAAM6S,EAAwB,QAApB7R,EAAAA,EAAW4N,QAAQiE,SAAAA,IAAC7R,EAAAA,EAAI,EAOlC,OANI6R,GAAKA,EAAIhW,KAAKiS,eAAetP,OAE/BI,EAAQ0H,MAAMuqB,QAAU,QAE1Bh1B,KAAK80B,kBAAkBN,EAAYzxB,GAE5BA,CAAAA,EAGDoB,EAAAA,UAAAA,cAAR,SAAsBqwB,GAAtB,WACQ9e,EAAO8e,EAAWO,OAAOrf,KAAO1V,KAAKiS,eAAe+R,QAAQC,OAAO5Z,MACzE,GAAIqL,EAAO,GAAKA,GAAQ1V,KAAKiS,eAAevP,KAEtC8xB,EAAWzxB,UACbyxB,EAAWzxB,QAAQ0H,MAAMuqB,QAAU,OACnCR,EAAWS,gBAAgBpe,KAAK2d,EAAWzxB,cAExC,CACL,IAAIA,EAAU/C,KAAKy0B,oBAAoBh1B,IAAI+0B,GACtCzxB,IACHyxB,EAAWU,WAAU,WAAM,OAAA/wB,EAAKowB,kBAAkBC,EAAAA,IAClDzxB,EAAU/C,KAAKm1B,eAAeX,GAC9BA,EAAWzxB,QAAUA,EACrB/C,KAAKy0B,oBAAoB90B,IAAI60B,EAAYzxB,GACzC/C,KAAKi0B,WAAWxuB,YAAY1C,IAE9BA,EAAQ0H,MAAMqB,IAAS4J,EAAO1V,KAAK4C,eAAeK,WAAWE,iBAAgB,KAC7EJ,EAAQ0H,MAAMuqB,QAAUh1B,KAAKo0B,mBAAqB,OAAS,QAC3DI,EAAWS,gBAAgBpe,KAAK9T,EAAAA,CAAAA,EAI5BoB,EAAAA,UAAAA,kBAAR,SAA0BqwB,EAAiCzxB,G,MACzD,QAAI,IADqDA,IAAAA,EAAmCyxB,EAAWzxB,SAClGA,EAAL,CAGA,IAAMiT,EAAwB,QAApB9T,EAAAA,EAAW6P,QAAQiE,SAAAA,IAAC9T,EAAAA,EAAI,EACY,WAAzCsyB,EAAWziB,QAAQqjB,QAAU,QAChCryB,EAAQ0H,MAAM4qB,MAAQrf,EAAOA,EAAIhW,KAAK4C,eAAeK,WAAWC,gBAAe,KAAO,GAEtFH,EAAQ0H,MAAMmB,KAAOoK,EAAOA,EAAIhW,KAAK4C,eAAeK,WAAWC,gBAAe,KAAO,KAIjFiB,EAAAA,UAAAA,kBAAR,SAA0BqwB,G,MACgB,QAAxCrwB,EAAAA,KAAKswB,oBAAoBh1B,IAAI+0B,UAAAA,IAAWrwB,GAAAA,EAAE4S,SAC1C/W,KAAKy0B,oBAAoBa,OAAOd,EAAAA,EAtHCxnB,EAAAA,CAUhCxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,oBACAA,EAAAA,EAAAA,EAAAA,iBAZQ+wB,EAAb,CAAA11B,CAA8C+E,EAAAA,YAAjCT,EAAAA,yBAAAA,CAAAoxB,E,iaCqBb,0BAAApzB,IACU,KAAA2a,OAAuB,GAKvB,KAAA0Y,UAA0B,GAC1B,KAAAC,eAAiB,EAEjB,KAAAC,aAA+C,CACrDC,KAAM,EACN/pB,KAAM,EACNgqB,OAAQ,EACRP,MAAO,EAwEX,QArEE3zB,OAAAA,eAAWS,EAAAA,UAAA,QAAK,C,IAAhB,WAGE,OADAnC,KAAKw1B,UAAU1vB,OAASnC,KAAKmP,IAAI9S,KAAKw1B,UAAU1vB,OAAQ9F,KAAK8c,OAAOhX,QAC7D9F,KAAK8c,MAAAA,E,gCAGP3a,EAAAA,UAAAA,MAAP,WACEnC,KAAK8c,OAAOhX,OAAS,EACrB9F,KAAKy1B,eAAiB,GAGjBtzB,EAAAA,UAAAA,cAAP,SAAqBqyB,G,QACnB,GAAKA,EAAWziB,QAAQ8jB,qBAAxB,C,IAGA,IAAgB,QAAA71B,KAAK8c,QAAM9P,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAxB,IAAM8oB,EAAC9oB,EAAAA,MACV,GAAI8oB,EAAErS,QAAU+Q,EAAWziB,QAAQ8jB,qBAAqBpS,OACpDqS,EAAE9tB,WAAawsB,EAAWziB,QAAQ8jB,qBAAqB7tB,SAAU,CACnE,GAAIhI,KAAK+1B,oBAAoBD,EAAGtB,EAAWO,OAAOrf,MAChD,OAEF,GAAI1V,KAAKg2B,oBAAoBF,EAAGtB,EAAWO,OAAOrf,KAAM8e,EAAWziB,QAAQ8jB,qBAAqB7tB,UAE9F,YADAhI,KAAKi2B,eAAeH,EAAGtB,EAAWO,OAAOrf,KAAAA,CAAAA,CAM/C,C,gGAAA,IAAI1V,KAAKy1B,eAAiBz1B,KAAKw1B,UAAU1vB,OAMvC,OALA9F,KAAKw1B,UAAUx1B,KAAKy1B,gBAAgBhS,MAAQ+Q,EAAWziB,QAAQ8jB,qBAAqBpS,MACpFzjB,KAAKw1B,UAAUx1B,KAAKy1B,gBAAgBztB,SAAWwsB,EAAWziB,QAAQ8jB,qBAAqB7tB,SACvFhI,KAAKw1B,UAAUx1B,KAAKy1B,gBAAgBS,gBAAkB1B,EAAWO,OAAOrf,KACxE1V,KAAKw1B,UAAUx1B,KAAKy1B,gBAAgBU,cAAgB3B,EAAWO,OAAOrf,UACtE1V,KAAK8c,OAAO/T,KAAK/I,KAAKw1B,UAAUx1B,KAAKy1B,mBAIvCz1B,KAAK8c,OAAO/T,KAAK,CACf0a,MAAO+Q,EAAWziB,QAAQ8jB,qBAAqBpS,MAC/Czb,SAAUwsB,EAAWziB,QAAQ8jB,qBAAqB7tB,SAClDkuB,gBAAiB1B,EAAWO,OAAOrf,KACnCygB,cAAe3B,EAAWO,OAAOrf,OAEnC1V,KAAKw1B,UAAUzsB,KAAK/I,KAAK8c,OAAO9c,KAAK8c,OAAOhX,OAAS,IACrD9F,KAAKy1B,gBAAAA,CAAAA,EAGAtzB,EAAAA,UAAAA,WAAP,SAAkBi0B,GAChBp2B,KAAK01B,aAAeU,CAAAA,EAGdj0B,EAAAA,UAAAA,oBAAR,SAA4B0a,EAAkBnH,GAC5C,OACEA,GAAQmH,EAAKqZ,iBACbxgB,GAAQmH,EAAKsZ,aAAAA,EAITh0B,EAAAA,UAAAA,oBAAR,SAA4B0a,EAAkBnH,EAAc1N,GAC1D,OACG0N,GAAQmH,EAAKqZ,gBAAkBl2B,KAAK01B,aAAa1tB,GAAY,SAC7D0N,GAAQmH,EAAKsZ,cAAgBn2B,KAAK01B,aAAa1tB,GAAY,SAIxD7F,EAAAA,UAAAA,eAAR,SAAuB0a,EAAkBnH,GACvCmH,EAAKqZ,gBAAkBvyB,KAAKmP,IAAI+J,EAAKqZ,gBAAiBxgB,GACtDmH,EAAKsZ,cAAgBxyB,KAAKC,IAAIiZ,EAAKsZ,cAAezgB,EAAAA,EAEtDvT,CArFA,IAAagC,EAAAA,eAAAA,CAAAkyB,E,syCC1Bb,cACA1xB,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAhF,EAAAA,EAAAA,MAIMy2B,EAAa,CACjBX,KAAM,EACN/pB,KAAM,EACNgqB,OAAQ,EACRP,MAAO,GAEHkB,EAAY,CAChBZ,KAAM,EACN/pB,KAAM,EACNgqB,OAAQ,EACRP,MAAO,GAEHmB,EAAQ,CACZb,KAAM,EACN/pB,KAAM,EACNgqB,OAAQ,EACRP,MAAO,GAGT1nB,EAAAA,SAAAA,GAeE,WACmB8Z,EACAtL,EACgBlK,EACImP,EACJxe,EACCyZ,G,MANpC1X,EAQExC,EAAAA,KAAAA,OAAO,KAPUwC,EAAAA,iBAAAA,EACAA,EAAAA,eAAAA,EACgBA,EAAAA,eAAAA,EACIA,EAAAA,mBAAAA,EACJA,EAAAA,eAAAA,EACCA,EAAAA,gBAAAA,EAlBnBA,EAAAA,gBAAmC,IAAID,EAAAA,eAMhDC,EAAAA,yBAAAA,EACAA,EAAAA,qBAAAA,EACAA,EAAAA,uBAAiC,EAavCA,EAAK8xB,QAAUzxB,SAASC,cAAc,UACtCN,EAAK8xB,QAAQvxB,UAAUC,IAAI,mCAC3BR,EAAK+xB,2BAC8B,QAAnCjyB,EAAAA,EAAKgjB,iBAAiBzkB,qBAAAA,IAAayB,GAAAA,EAAEkyB,aAAahyB,EAAK8xB,QAAS9xB,EAAK8iB,kBACrE,IAAMvZ,EAAMvJ,EAAK8xB,QAAQtoB,WAAW,MACpC,IAAKD,EACH,MAAM,IAAI7H,MAAM,sB,OAEhB1B,EAAKyJ,KAAOF,EAEdvJ,EAAKiyB,+BACLjyB,EAAKkyB,iCACLlyB,EAAKmyB,oCAJH,CAmKN,QAnM2CjvB,EAAAA,EAAAA,GAIzCnG,OAAAA,eAAYyC,EAAAA,UAAA,SAAM,C,IAAlB,WACE,OAAOnE,KAAKqc,gBAAgBtK,QAAQ2X,oBAAsB,G,gCAqCpDvlB,EAAAA,UAAAA,6BAAR,sBACEnE,KAAKuG,SAASvG,KAAKohB,mBAAmBiT,wBAAuB,WAAM,SAAKH,mBAAAA,GAAcnnB,EAAW,KACjG/M,KAAKuG,SAASvG,KAAKohB,mBAAmBkT,qBAAoB,WAAM,SAAKJ,mBAAAA,GAAcnnB,EAAW,MAOxF5I,EAAAA,UAAAA,+BAAR,sBACEnE,KAAKuG,SAASvG,KAAK4C,eAAe2Y,0BAAyB,WAAM,SAAK2Y,eAAAA,KACtEl0B,KAAKuG,SAASvG,KAAKiS,eAAe+R,QAAQ4N,kBAAiB,WACzDzvB,EAAKs0B,QAAShsB,MAAMuqB,QAAU7yB,EAAK8P,eAAe7J,SAAWjG,EAAK8P,eAAe+R,QAAQ6G,IAAM,OAAS,YAE1G7qB,KAAKuG,SAASvG,KAAKiS,eAAepL,UAAS,WACrC1E,EAAK40B,yBAA2B50B,EAAK8P,eAAe+R,QAAQkJ,OAAO7kB,MAAMvC,SAC3E3D,EAAK60B,8BACL70B,EAAK80B,2BAAAA,IAAAA,EAQH9yB,EAAAA,UAAAA,kCAAR,sBAEEnE,KAAKuG,SAASvG,KAAK4C,eAAe8D,UAAS,WACpCvE,EAAK+0B,kBAAoB/0B,EAAK+0B,mBAAqB/0B,EAAKga,eAAegb,eAC1Eh1B,EAAK+xB,eAAAA,GACL/xB,EAAK+0B,iBAAmB/0B,EAAKga,eAAegb,aAAAA,KAIhDn3B,KAAKuG,SAASvG,KAAKqc,gBAAgB4L,gBAAe,YACtC,uBAANjb,GACF7K,EAAK+xB,eAAAA,EAAc,KAIvBl0B,KAAKuG,UAAAA,EAAS,EAAAqB,0BAAyBvE,OAAQ,UAAU,WACvDlB,EAAK+xB,eAAAA,EAAc,KAGrBl0B,KAAKk0B,eAAAA,EAAc,EAGL/vB,EAAAA,UAAAA,QAAhB,W,MACc,QAAZA,EAAAA,KAAKsyB,eAAAA,IAAOtyB,GAAAA,EAAE4S,SACd5U,EAAAA,UAAM2F,QAAOjG,KAAA,OAGPsC,EAAAA,UAAAA,sBAAR,WAEE,IAAMizB,EAAazzB,KAAKO,MAAMlE,KAAKy2B,QAAQzqB,MAAQ,GAC7CqrB,EAAa1zB,KAAK6P,KAAKxT,KAAKy2B,QAAQzqB,MAAQ,GAClDuqB,EAAUZ,KAAO31B,KAAKy2B,QAAQzqB,MAC9BuqB,EAAU3qB,KAAOwrB,EACjBb,EAAUX,OAASyB,EACnBd,EAAUlB,MAAQ+B,EAElBp3B,KAAKg3B,8BAELR,EAAMb,KAAO,EACba,EAAM5qB,KAAO,EACb4qB,EAAMZ,OAASW,EAAU3qB,KACzB4qB,EAAMnB,MAAQkB,EAAU3qB,KAAO2qB,EAAUX,MAAAA,EAGnCzxB,EAAAA,UAAAA,4BAAR,WACEmyB,EAAWX,KAAOhyB,KAAK+N,MAAM,EAAIrO,OAAOwb,kBAExC,IAAMyY,EAAgBt3B,KAAKy2B,QAAQ/rB,OAAS1K,KAAKiS,eAAe7J,OAAOC,MAAMvC,OAEvEyxB,EAAgB5zB,KAAK+N,MAAM/N,KAAKC,IAAID,KAAKmP,IAAIwkB,EAAe,IAAK,GAAKj0B,OAAOwb,kBACnFyX,EAAW1qB,KAAO2rB,EAClBjB,EAAWV,OAAS2B,EACpBjB,EAAWjB,MAAQkC,CAAAA,EAGbpzB,EAAAA,UAAAA,yBAAR,WACEnE,KAAKw3B,gBAAgBC,WAAW,CAC9B9B,KAAMhyB,KAAKO,MAAMlE,KAAKiS,eAAe+R,QAAQC,OAAO5b,MAAMvC,QAAU9F,KAAKy2B,QAAQ/rB,OAAS,GAAK4rB,EAAWX,MAC1G/pB,KAAMjI,KAAKO,MAAMlE,KAAKiS,eAAe+R,QAAQC,OAAO5b,MAAMvC,QAAU9F,KAAKy2B,QAAQ/rB,OAAS,GAAK4rB,EAAW1qB,MAC1GgqB,OAAQjyB,KAAKO,MAAMlE,KAAKiS,eAAe+R,QAAQC,OAAO5b,MAAMvC,QAAU9F,KAAKy2B,QAAQ/rB,OAAS,GAAK4rB,EAAWV,QAC5GP,MAAO1xB,KAAKO,MAAMlE,KAAKiS,eAAe+R,QAAQC,OAAO5b,MAAMvC,QAAU9F,KAAKy2B,QAAQ/rB,OAAS,GAAK4rB,EAAWjB,SAE7Gr1B,KAAK+2B,uBAAyB/2B,KAAKiS,eAAe+R,QAAQkJ,OAAO7kB,MAAMvC,MAAAA,EAGjE3B,EAAAA,UAAAA,yBAAR,WACEnE,KAAKy2B,QAAQhsB,MAAMuB,MAAWhM,KAAK03B,OAAM,KACzC13B,KAAKy2B,QAAQzqB,MAAQrI,KAAK+N,MAAM1R,KAAK03B,OAASr0B,OAAOwb,kBACrD7e,KAAKy2B,QAAQhsB,MAAMC,OAAY1K,KAAKmc,eAAegb,aAAY,KAC/Dn3B,KAAKy2B,QAAQ/rB,OAAS/G,KAAK+N,MAAM1R,KAAKmc,eAAegb,aAAe9zB,OAAOwb,kBAC3E7e,KAAK23B,wBACL33B,KAAKi3B,0BAAAA,EAGC9yB,EAAAA,UAAAA,oBAAR,W,gBACMnE,KAAK43B,yBACP53B,KAAK02B,2BAEP12B,KAAKoO,KAAKypB,UAAU,EAAG,EAAG73B,KAAKy2B,QAAQzqB,MAAOhM,KAAKy2B,QAAQ/rB,QAC3D1K,KAAKw3B,gBAAgB30B,Q,IACrB,IAAyB,QAAA7C,KAAKohB,mBAAmBrG,aAAWrW,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAzD,IAAM8vB,EAAU9vB,EAAAA,MACnB1E,KAAKw3B,gBAAgBM,cAActD,EAAAA,CAErCx0B,C,gGAAAA,CAAAA,KAAKoO,KAAK2pB,UAAY,EACtB,IAAMC,EAAQh4B,KAAKw3B,gBAAgBQ,M,IACnC,IAAmB,WAAKn4B,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OACA,UADbgd,EAAIhd,EAAAA,OACJmI,UACPhI,KAAKi4B,iBAAiBpb,E,sGAG1B,IAAmB,WAAKpD,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAArB,IAAMoD,EACa,UADbA,EAAIpD,EAAAA,OACJzR,UACPhI,KAAKi4B,iBAAiBpb,EAAAA,CAG1B7c,C,gGAAAA,CAAAA,KAAK43B,yBAAAA,EACL53B,KAAKk4B,qBAAAA,CAAsB,EAGrB/zB,EAAAA,UAAAA,iBAAR,SAAyB0Y,GAGvB7c,KAAKoO,KAAK0C,UAAY+L,EAAK4G,MAC3BzjB,KAAKoO,KAAK6C,SACAulB,EAAM3Z,EAAK7U,UAAY,QACvBrE,KAAK+N,OACV1R,KAAKy2B,QAAQ/rB,OAAS,IACtBmS,EAAKqZ,gBAAkBl2B,KAAKiS,eAAe+R,QAAQC,OAAO5b,MAAMvC,QAAUwwB,EAAWzZ,EAAK7U,UAAY,QAAU,GAE3GuuB,EAAU1Z,EAAK7U,UAAY,QAC3BrE,KAAK+N,OACV1R,KAAKy2B,QAAQ/rB,OAAS,KACrBmS,EAAKsZ,cAAgBtZ,EAAKqZ,iBAAmBl2B,KAAKiS,eAAe+R,QAAQC,OAAO5b,MAAMvC,QAAUwwB,EAAWzZ,EAAK7U,UAAY,WAK5H7D,EAAAA,UAAAA,cAAR,SAAsBg0B,EAAkCC,GAAxD,WACEp4B,KAAK43B,wBAA0BO,GAA0Bn4B,KAAK43B,wBAC9D53B,KAAKk4B,oBAAsBE,GAAgBp4B,KAAKk4B,yBAAAA,IAC5Cl4B,KAAKge,kBAGThe,KAAKge,gBAAkB3a,OAAO8a,uBAAsB,WAClDjc,EAAKm2B,sBACLn2B,EAAK8b,qBAAAA,CAAkBjR,IAAAA,EAhMKC,EAAAA,CAkB7BxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,oBACAA,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,kBArBQ8zB,EAAb,CAAA3qB,CAA2C9I,EAAAA,YAA9BV,EAAAA,sBAAAA,CAAAm0B,E,sgBC3Bb,cACA9zB,EAAAA,EAAAA,MAYAC,EAAAA,WAwBE,WACmB8zB,EACAjQ,EACgBrW,EACCoK,EACHmc,EACE51B,GALhB,KAAA21B,UAAA,EACA,KAAAjQ,iBAAA,EACgB,KAAArW,eAAA,EACC,KAAAoK,gBAAA,EACH,KAAAmc,aAAA,EACE,KAAA51B,eAAA,EAEjC5C,KAAKy4B,cAAAA,EACLz4B,KAAK04B,uBAAAA,EACL14B,KAAK24B,qBAAuB,CAAEhyB,MAAO,EAAGC,IAAK,GAC7C5G,KAAK44B,iBAAmB,EAuL5B,QApNEl3B,OAAAA,eAAWS,EAAAA,UAAA,cAAW,C,IAAtB,WAAoC,OAAOnC,KAAKy4B,YAAAA,E,gCAmCzCt2B,EAAAA,UAAAA,iBAAP,WACEnC,KAAKy4B,cAAAA,EACLz4B,KAAK24B,qBAAqBhyB,MAAQ3G,KAAKu4B,UAAUjtB,MAAMxF,OACvD9F,KAAKsoB,iBAAiB5e,YAAc,GACpC1J,KAAK44B,iBAAmB,GACxB54B,KAAKsoB,iBAAiBpjB,UAAUC,IAAI,WAO/BhD,EAAAA,UAAAA,kBAAP,SAAyBqJ,GAAzB,WACExL,KAAKsoB,iBAAiB5e,YAAc8B,EAAG0F,KACvClR,KAAKgnB,4BACLld,YAAW,WACT3F,EAAKw0B,qBAAqB/xB,IAAMzC,EAAKo0B,UAAUjtB,MAAMxF,MAAAA,GACpD,IAOE3D,EAAAA,UAAAA,eAAP,WACEnC,KAAK64B,sBAAAA,EAAqB,EAQrB12B,EAAAA,UAAAA,QAAP,SAAeqJ,GACb,GAAIxL,KAAKy4B,cAAgBz4B,KAAK04B,sBAAuB,CACnD,GAAmB,MAAfltB,EAAG2jB,QAEL,OAAO,EAET,GAAmB,KAAf3jB,EAAG2jB,SAAiC,KAAf3jB,EAAG2jB,SAAiC,KAAf3jB,EAAG2jB,QAE/C,OAAO,EAITnvB,KAAK64B,sBAAAA,EAGP,QAAmB,MAAfrtB,EAAG2jB,UAGLnvB,KAAK84B,6BAAAA,EACE,EAcH32B,EAAAA,UAAAA,qBAAR,SAA6B42B,GAA7B,WAIE,GAHA/4B,KAAKsoB,iBAAiBpjB,UAAU6R,OAAO,UACvC/W,KAAKy4B,cAAAA,EAEAM,EAKE,CAGL,IAAM72B,EAA6B,CACjCyE,MAAO3G,KAAK24B,qBAAqBhyB,MACjCC,IAAK5G,KAAK24B,qBAAqB/xB,KAWjC5G,KAAK04B,uBAAAA,EACL5uB,YAAW,WAIP,IAAIkvB,EAFF70B,EAAKu0B,wBACPv0B,EAAKu0B,uBAAAA,EAILx2B,EAA2ByE,OAASxC,EAAKy0B,iBAAiB9yB,QAGxDkzB,EAFE70B,EAAKs0B,aAECt0B,EAAKo0B,UAAUjtB,MAAM8F,UAAUlP,EAA2ByE,MAAOzE,EAA2B0E,KAK5FzC,EAAKo0B,UAAUjtB,MAAM8F,UAAUlP,EAA2ByE,QAE1Db,OAAS,GACjB3B,EAAKq0B,aAAantB,iBAAiB2tB,GAAAA,GAAO,GAG7C,OA3CoB,CAEvBh5B,KAAK04B,uBAAAA,EACL,IAAMM,EAAQh5B,KAAKu4B,UAAUjtB,MAAM8F,UAAUpR,KAAK24B,qBAAqBhyB,MAAO3G,KAAK24B,qBAAqB/xB,KACxG5G,KAAKw4B,aAAantB,iBAAiB2tB,GAAAA,EAAO,GAiDtC72B,EAAAA,UAAAA,0BAAR,sBACQ82B,EAAWj5B,KAAKu4B,UAAUjtB,MAChCxB,YAAW,WAET,IAAK3H,EAAKs2B,aAAc,CACtB,IACM3F,EADW3wB,EAAKo2B,UAAUjtB,MACVR,QAAQmuB,EAAU,IACpCnG,EAAKhtB,OAAS,IAChB3D,EAAKy2B,iBAAmB9F,EACxB3wB,EAAKq2B,aAAantB,iBAAiBynB,GAAAA,GAAM,IAG5C,IASE3wB,EAAAA,UAAAA,0BAAP,SAAiC+2B,GAAjC,WACE,GAAKl5B,KAAKy4B,aAAV,CAIA,GAAIz4B,KAAKiS,eAAe7J,OAAO8c,mBAAoB,CACjD,IAAMM,EAAU7hB,KAAKmP,IAAI9S,KAAKiS,eAAe7J,OAAO4N,EAAGhW,KAAKiS,eAAetP,KAAO,GAE5E8iB,EAAazlB,KAAK4C,eAAeK,WAAWE,iBAC5CyiB,EAAY5lB,KAAKiS,eAAe7J,OAAO6N,EAAIjW,KAAK4C,eAAeK,WAAWE,iBAC1E0iB,EAAaL,EAAUxlB,KAAK4C,eAAeK,WAAWC,gBAE5DlD,KAAKsoB,iBAAiB7d,MAAMmB,KAAOia,EAAa,KAChD7lB,KAAKsoB,iBAAiB7d,MAAMqB,IAAM8Z,EAAY,KAC9C5lB,KAAKsoB,iBAAiB7d,MAAMC,OAAS+a,EAAa,KAClDzlB,KAAKsoB,iBAAiB7d,MAAMqb,WAAaL,EAAa,KACtDzlB,KAAKsoB,iBAAiB7d,MAAM0uB,WAAan5B,KAAKqc,gBAAgBmB,WAAW2b,WACzEn5B,KAAKsoB,iBAAiB7d,MAAM2uB,SAAWp5B,KAAKqc,gBAAgBmB,WAAW4b,SAAW,KAGlF,IAAMC,EAAwBr5B,KAAKsoB,iBAAiB3c,wBACpD3L,KAAKu4B,UAAU9tB,MAAMmB,KAAOia,EAAa,KACzC7lB,KAAKu4B,UAAU9tB,MAAMqB,IAAM8Z,EAAY,KAEvC5lB,KAAKu4B,UAAU9tB,MAAMuB,MAAQrI,KAAKC,IAAIy1B,EAAsBrtB,MAAO,GAAK,KACxEhM,KAAKu4B,UAAU9tB,MAAMC,OAAS/G,KAAKC,IAAIy1B,EAAsB3uB,OAAQ,GAAK,KAC1E1K,KAAKu4B,UAAU9tB,MAAMqb,WAAauT,EAAsB3uB,OAAS,IAG9DwuB,CAAAA,GACHpvB,YAAW,WAAM,OAAA3F,EAAK6iB,2BAAAA,EAA0B,GAAO,KAvN/BliB,EAAAA,CA2BzB+C,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,cACAA,EAAAA,EAAAA,EAAAA,iBA9BQyxB,EAAb,CAAA70B,GAAaN,EAAAA,kBAAAA,CAAAm1B,E,aCbb,SAAgBC,EAA2Bl2B,EAA0CqP,EAA2C3P,GAC9H,IAAMy2B,EAAOz2B,EAAQ4I,wBACf9H,EAAeR,EAAOC,iBAAiBP,GACvC02B,EAAcj2B,SAASK,EAAaJ,iBAAiB,iBACrDi2B,EAAal2B,SAASK,EAAaJ,iBAAiB,gBAC1D,MAAO,CACLiP,EAAM7G,QAAU2tB,EAAK5tB,KAAO6tB,EAC5B/mB,EAAM3G,QAAUytB,EAAK1tB,IAAM4tB,E,qHAP/Bv1B,EAAAA,2BAAAA,EAuBAA,EAAAA,UAAAA,SAA0Bd,EAA0CqP,EAA2C3P,EAAsB42B,EAAkBpb,EAAkBqb,EAA2B12B,EAAyBC,EAA0B02B,GAErP,GAAKD,EAAL,CAIA,IAAM5d,EAASud,EAA2Bl2B,EAAQqP,EAAO3P,GACzD,GAAKiZ,EAaL,OATAA,EAAO,GAAKrY,KAAK6P,MAAMwI,EAAO,IAAM6d,EAAc32B,EAAkB,EAAI,IAAMA,GAC9E8Y,EAAO,GAAKrY,KAAK6P,KAAKwI,EAAO,GAAK7Y,GAKlC6Y,EAAO,GAAKrY,KAAKmP,IAAInP,KAAKC,IAAIoY,EAAO,GAAI,GAAI2d,GAAYE,EAAc,EAAI,IAC3E7d,EAAO,GAAKrY,KAAKmP,IAAInP,KAAKC,IAAIoY,EAAO,GAAI,GAAIuC,GAEtCvC,CAAAA,CAAAA,EAQT7X,EAAAA,iBAAAA,SAAiC6X,GAC/B,GAAKA,EAKL,MAAO,CAAEhG,EAAGgG,EAAO,GAAK,GAAI/F,EAAG+F,EAAO,GAAK,M,4FCzD7C,IAAAlX,EAAA,QAyEA,SAASg1B,EAAmBC,EAAgBC,EAAiBC,EAA+BC,GAC1F,IAAMxf,EAAWqf,EAASI,EAAkBF,EAAeF,GACrDpf,EAASqf,EAAUG,EAAkBF,EAAeD,GAEpDI,EAAaz2B,KAAKsoB,IAAIvR,EAAWC,GAiCzC,SAA0Bof,EAAgBC,EAAiBC,GAKzD,IAJA,IAAII,EAAc,EACZ3f,EAAWqf,EAASI,EAAkBF,EAAeF,GACrDpf,EAASqf,EAAUG,EAAkBF,EAAeD,GAEjDl1B,EAAI,EAAGA,EAAInB,KAAKsoB,IAAIvR,EAAWC,GAAS7V,IAAK,CACpD,IAAMw1B,EAAmD,MAAvCC,EAAkBR,EAAQC,IAA6B,EAAI,EACvEtkB,EAAOukB,EAAc7xB,OAAOC,MAAM5I,IAAIib,EAAY4f,EAAYx1B,IAChE4Q,MAAAA,OAAAA,EAAAA,EAAM8kB,YACRH,GAIJ,QAAOA,CA9C0CI,CAiCnD,CAjCoEV,EAAQC,EAASC,GAEnF,OAAOS,EAAON,EAAYrO,EAASwO,EAAkBR,EAAQC,GAAUE,GAmDzE,UAASC,EAAkBF,EAA+BU,GAKxD,IAJA,IAAIpc,EAAW,EACX7I,EAAOukB,EAAc7xB,OAAOC,MAAM5I,IAAIk7B,GACtCC,EAAYllB,MAAAA,OAAAA,EAAAA,EAAM8kB,UAEfI,GAAaD,GAAc,GAAKA,EAAaV,EAAcv3B,MAChE6b,IAEAqc,EAAYllB,OADZA,EAAOukB,EAAc7xB,OAAOC,MAAM5I,MAAMk7B,SAAAA,EAC5BjlB,EAAM8kB,UAGpB,OAAOjc,CA8BT,UAASgc,EAAkBR,EAAgBC,GACzC,OAAOD,EAASC,EAAU,IAAe,GAY3C,UAASzU,EACPsV,EACAngB,EACAogB,EACAngB,EACAogB,EACAd,GAMA,IAJA,IAAIe,EAAaH,EACbF,EAAajgB,EACbugB,EAAY,GAETD,IAAeF,GAAUH,IAAehgB,GAC7CqgB,GAAcD,EAAU,GAAK,EAEzBA,GAAWC,EAAaf,EAAct3B,KAAO,GAC/Cs4B,GAAahB,EAAc7xB,OAAOgC,4BAChCuwB,GAAAA,EAAmBE,EAAUG,GAE/BA,EAAa,EACbH,EAAW,EACXF,MACUI,GAAWC,EAAa,IAClCC,GAAahB,EAAc7xB,OAAOgC,4BAChCuwB,GAAAA,EAAmB,EAAGE,EAAW,GAGnCA,EADAG,EAAaf,EAAct3B,KAAO,EAElCg4B,KAIJ,OAAOM,EAAYhB,EAAc7xB,OAAOgC,4BACtCuwB,GAAAA,EAAmBE,EAAUG,EAQjC,UAASjP,EAASuO,EAAsBJ,GACtC,IAAMgB,EAAOhB,EAAoB,IAAM,IACvC,OAAOp1B,EAAAA,GAAGue,IAAM6X,EAAMZ,CASxB,UAASI,EAAOS,EAAeC,GAC7BD,EAAQx3B,KAAKO,MAAMi3B,GAEnB,IADA,IAAIE,EAAM,GACDv2B,EAAI,EAAGA,EAAIq2B,EAAOr2B,IACzBu2B,GAAOD,EAET,OAAOC,CAnOT,CAAAl3B,EAAAA,mBAAAA,SAAmCm3B,EAAiBtB,EAAiBC,EAA+BC,GAClG,IAWII,EAXExgB,EAASmgB,EAAc7xB,OAAO4N,EAC9B+jB,EAASE,EAAc7xB,OAAO6N,EAGpC,IAAKgkB,EAAc7xB,OAAO0jB,cACxB,OAsCJ,SAA0BhS,EAAgBigB,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GACzH,OAAqF,IAAjFJ,EAAmBC,EAAQC,EAASC,EAAeC,GAAmBp0B,OACjE,GAEF40B,EAAOnV,EACZzL,EAAQigB,EAAQjgB,EAChBigB,EAASI,EAAkBF,EAAeF,IAAAA,EAAgBE,GAC1Dn0B,OAAQimB,EAAS,IAAgBmO,GA7C1BqB,CAsCX,CAtC4BzhB,EAAQigB,EAAQuB,EAAStB,EAASC,EAAeC,GACvEJ,EAAmBC,EAAQC,EAASC,EAAeC,GA+DzD,SAA4BpgB,EAAgBigB,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GAC3H,IAAIxf,EAEFA,EADEof,EAAmBC,EAAQC,EAASC,EAAeC,GAAmBp0B,OAAS,EACtEk0B,EAAUG,EAAkBF,EAAeD,GAE3CD,EAGb,IAAMpf,EAASqf,EACTM,EAyDR,SAA6BxgB,EAAgBigB,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GAC5H,IAAIxf,EAOJ,OALEA,EADEof,EAAmBwB,EAAStB,EAASC,EAAeC,GAAmBp0B,OAAS,EACvEk0B,EAAUG,EAAkBF,EAAeD,GAE3CD,EAGRjgB,EAASwhB,GACZ5gB,GAAYsf,GACXlgB,GAAUwhB,GACX5gB,EAAWsf,EACJ,IAEF,GAvEWwB,CAyDpB,CAzDwC1hB,EAAQigB,EAAQuB,EAAStB,EAASC,EAAeC,GAEvF,OAAOQ,EAAOnV,EACZzL,EAAQY,EAAU4gB,EAAS3gB,EACb,MAAd2f,EAA+BL,GAC/Bn0B,OAAQimB,EAASuO,EAAWJ,GA5E1BuB,CA8DN,CA9DyB3hB,EAAQigB,EAAQuB,EAAStB,EAASC,EAAeC,GAKxE,GAAIH,IAAWC,EAEb,OADAM,EAAYxgB,EAASwhB,EAAU,IAAiB,IACzCZ,EAAO/2B,KAAKsoB,IAAInS,EAASwhB,GAAUvP,EAASuO,EAAWJ,IAEhEI,EAAYP,EAASC,EAAU,IAAiB,IAChD,IAAM0B,EAAgB/3B,KAAKsoB,IAAI8N,EAASC,GAIxC,OAAOU,EAaT,SAAwBiB,EAAe1B,GACrC,OAAOA,EAAct3B,KAAOg5B,CAjBRC,CAgBtB,CAhBqC7B,EAASC,EAAUsB,EAAUxhB,EAAQmgB,IACrEyB,EAAgB,GAAKzB,EAAct3B,KAAO,IACtBo3B,EAASC,EAAUlgB,EAASwhB,GAQpC,GAPYvP,EAASuO,EAAWJ,GAAAA,CAtBjD,E,koBCbA,cACA11B,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAMMi3B,EAA2B,CAAC,OAAQ,QAE1Ch8B,EAAAA,WAOE,WAAYkS,GAAZ,WACE/R,KAAKyC,MAAQ,IAAIuK,EAAAA,SAAa+E,GAC9B/R,KAAK87B,cAAgB,IAAIn3B,EAAAA,aAEzB3E,KAAK+7B,eAAiBj3B,EAAH,GAAS9E,KAAKyC,MAAMsP,SACvC,IAAMrS,EAAS,SAACs8B,GACd,OAAO73B,EAAK1B,MAAMsP,QAAQiqB,EAAAA,EAEtBp8B,EAAS,SAACo8B,EAAkB1wB,GAChCnH,EAAK83B,sBAAsBD,GAC3B73B,EAAK1B,MAAMsP,QAAQiqB,GAAY1wB,CAAAA,EAGjC,IAAK,IAAM0wB,KAAYh8B,KAAKyC,MAAMsP,QAAS,CACzC,IAAMmqB,EAAO,CACXz8B,IAAKC,EAAOwG,KAAKlG,KAAMg8B,GACvBr8B,IAAKC,EAAOsG,KAAKlG,KAAMg8B,IAEzBt6B,OAAOvC,eAAea,KAAK+7B,eAAgBC,EAAUE,EAAAA,CA2P3D,QAvPU/5B,EAAAA,UAAAA,sBAAR,SAA8B65B,GAI5B,GAAIH,EAAyBM,SAASH,GACpC,MAAM,IAAI31B,MAAM,WAAW21B,EAAQ,yCAI/B75B,EAAAA,UAAAA,kBAAR,WACE,IAAKnC,KAAKyC,MAAMgiB,eAAejH,WAAW4e,iBACxC,MAAM,IAAI/1B,MAAM,yEAIpB3E,OAAAA,eAAWS,EAAAA,UAAA,SAAM,C,IAAjB,WAAoC,OAAOnC,KAAKyC,MAAM45B,MAAAA,E,gCACtD36B,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAAwC,OAAOnC,KAAKyC,MAAM65B,QAAAA,E,gCAC1D56B,OAAAA,eAAWS,EAAAA,UAAA,eAAY,C,IAAvB,WAA0C,OAAOnC,KAAKyC,MAAM0f,YAAAA,E,gCAC5DzgB,OAAAA,eAAWS,EAAAA,UAAA,SAAM,C,IAAjB,WAAsC,OAAOnC,KAAKyC,MAAM85B,MAAAA,E,gCACxD76B,OAAAA,eAAWS,EAAAA,UAAA,QAAK,C,IAAhB,WAAuE,OAAOnC,KAAKyC,MAAM4E,KAAAA,E,gCACzF3F,OAAAA,eAAWS,EAAAA,UAAA,aAAU,C,IAArB,WAAwC,OAAOnC,KAAKyC,MAAMwE,UAAAA,E,gCAC1DvF,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAAgE,OAAOnC,KAAKyC,MAAMiE,QAAAA,E,gCAClFhF,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAAgE,OAAOnC,KAAKyC,MAAM+D,QAAAA,E,gCAClF9E,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAAwC,OAAOnC,KAAKyC,MAAMoE,QAAAA,E,gCAC1DnF,OAAAA,eAAWS,EAAAA,UAAA,oBAAiB,C,IAA5B,WAA+C,OAAOnC,KAAKyC,MAAMqmB,iBAAAA,E,gCACjEpnB,OAAAA,eAAWS,EAAAA,UAAA,gBAAa,C,IAAxB,WAA6C,OAAOnC,KAAKyC,MAAM4f,aAAAA,E,gCAC/D3gB,OAAAA,eAAWS,EAAAA,UAAA,gBAAa,C,IAAxB,WAA2C,OAAOnC,KAAKyC,MAAM+5B,aAAAA,E,gCAE7D96B,OAAAA,eAAWS,EAAAA,UAAA,UAAO,C,IAAlB,WAAgD,OAAOnC,KAAKyC,MAAMM,OAAAA,E,gCAClErB,OAAAA,eAAWS,EAAAA,UAAA,SAAM,C,IAAjB,WAKE,OAJAnC,KAAKy8B,oBACAz8B,KAAK08B,UACR18B,KAAK08B,QAAU,IAAIj4B,EAAAA,UAAUzE,KAAKyC,QAE7BzC,KAAK08B,OAAAA,E,gCAEdh7B,OAAAA,eAAWS,EAAAA,UAAA,UAAO,C,IAAlB,WAEE,OADAnC,KAAKy8B,oBACE,IAAI/3B,EAAAA,WAAW1E,KAAKyC,MAAAA,E,gCAE7Bf,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAAyD,OAAOnC,KAAKyC,MAAMyI,QAAAA,E,gCAC3ExJ,OAAAA,eAAWS,EAAAA,UAAA,OAAI,C,IAAf,WAA4B,OAAOnC,KAAKyC,MAAMC,IAAAA,E,gCAC9ChB,OAAAA,eAAWS,EAAAA,UAAA,OAAI,C,IAAf,WAA4B,OAAOnC,KAAKyC,MAAME,IAAAA,E,gCAC9CjB,OAAAA,eAAWS,EAAAA,UAAA,SAAM,C,IAAjB,WAKE,OAJAnC,KAAKy8B,oBACAz8B,KAAK28B,UACR38B,KAAK28B,QAAU,IAAI/3B,EAAAA,mBAAmB5E,KAAKyC,QAEtCzC,KAAK28B,OAAAA,E,gCAEdj7B,OAAAA,eAAWS,EAAAA,UAAA,UAAO,C,IAAlB,WAEE,OADAnC,KAAKy8B,oBACEz8B,KAAKyC,MAAMuqB,OAAAA,E,gCAEpBtrB,OAAAA,eAAWS,EAAAA,UAAA,QAAK,C,IAAhB,WACE,IAAMwd,EAAI3f,KAAKyC,MAAM0I,YAAYC,gBAC7BwxB,EAA+D,OACnE,OAAQ58B,KAAKyC,MAAM6mB,iBAAiBsC,gBAClC,IAAK,MAAOgR,EAAoB,MAAO,MACvC,IAAK,QAASA,EAAoB,QAAS,MAC3C,IAAK,OAAQA,EAAoB,OAAQ,MACzC,IAAK,MAAOA,EAAoB,MAElC,MAAO,CACLC,0BAA2Bld,EAAEqM,sBAC7B8Q,sBAAuBnd,EAAEod,kBACzB/xB,mBAAoB2U,EAAE3U,mBACtBgyB,WAAYh9B,KAAKyC,MAAM0I,YAAY8xB,MAAMD,WACzCJ,kBAAmBA,EACnBM,WAAYvd,EAAEwd,OACdC,sBAAuBzd,EAAE0d,kBACzBC,cAAe3d,EAAEmF,UACjByY,eAAgB5d,EAAE6d,WAAAA,E,gCAGtB97B,OAAAA,eAAWS,EAAAA,UAAA,UAAO,C,IAAlB,WACE,OAAOnC,KAAK+7B,cAAAA,E,IAEd,SAAmBhqB,GACjB,IAAK,IAAMiqB,KAAYjqB,EACrB/R,KAAK+7B,eAAeC,GAAYjqB,EAAQiqB,EAAAA,E,gCAGrC75B,EAAAA,UAAAA,KAAP,WACEnC,KAAKyC,MAAMwiB,MAAAA,EAEN9iB,EAAAA,UAAAA,MAAP,WACEnC,KAAKyC,MAAMwG,OAAAA,EAEN9G,EAAAA,UAAAA,OAAP,SAAcs7B,EAAiB/6B,GAC7B1C,KAAK09B,gBAAgBD,EAAS/6B,GAC9B1C,KAAKyC,MAAMK,OAAO26B,EAAS/6B,EAAAA,EAEtBP,EAAAA,UAAAA,KAAP,SAAY+kB,GACVlnB,KAAKyC,MAAMgU,KAAKyQ,EAAAA,EAEX/kB,EAAAA,UAAAA,4BAAP,SAAmCuqB,GACjC1sB,KAAKyC,MAAMk7B,4BAA4BjR,EAAAA,EAElCvqB,EAAAA,UAAAA,oBAAP,SAA2B8R,EAAenC,EAAmDC,GAE3F,OADA/R,KAAKy8B,oBACEz8B,KAAKyC,MAAMkqB,oBAAoB1Y,EAAOnC,EAASC,EAAAA,EAEjD5P,EAAAA,UAAAA,sBAAP,SAA6B2S,GAC3B9U,KAAKy8B,oBACLz8B,KAAKyC,MAAMmqB,sBAAsB9X,EAAAA,EAE5B3S,EAAAA,UAAAA,qBAAP,SAA4BmV,GAE1B,OADAtX,KAAKy8B,oBACEz8B,KAAKyC,MAAMoqB,qBAAqBvV,EAAAA,EAElCnV,EAAAA,UAAAA,wBAAP,SAA+B2P,GAE7B,OADA9R,KAAKy8B,oBACEz8B,KAAKyC,MAAMm7B,wBAAwB9rB,EAAAA,EAErC3P,EAAAA,UAAAA,0BAAP,SAAiC2qB,GAC/B9sB,KAAKy8B,oBACLz8B,KAAKyC,MAAMo7B,0BAA0B/Q,EAAAA,EAEhC3qB,EAAAA,UAAAA,eAAP,SAAsB8qB,GAGpB,YAAO,IAHaA,IAAAA,EAAAA,GACpBjtB,KAAKy8B,oBACLz8B,KAAK09B,gBAAgBzQ,GACdjtB,KAAKyC,MAAM0qB,UAAUF,EAAAA,EAEvB9qB,EAAAA,UAAAA,mBAAP,SAA0BirB,G,UAGxB,OAFAptB,KAAKy8B,oBACLz8B,KAAK89B,wBAA2C,QAAnB35B,EAAAA,EAAkB6R,SAAAA,IAAC7R,EAAAA,EAAI,EAA0B,QAAvBjC,EAAAA,EAAkB8J,aAAAA,IAAK9J,EAAAA,EAAI,EAA2B,QAAxB4C,EAAAA,EAAkB4F,cAAAA,IAAM5F,EAAAA,EAAI,GAC1G9E,KAAKyC,MAAM4qB,mBAAmBD,EAAAA,EAEhCjrB,EAAAA,UAAAA,UAAP,SAAiB8qB,GACf,OAAOjtB,KAAK+9B,eAAe9Q,EAAAA,EAEtB9qB,EAAAA,UAAAA,aAAP,WACE,OAAOnC,KAAKyC,MAAMujB,cAAAA,EAEb7jB,EAAAA,UAAAA,OAAP,SAAcmrB,EAAgB5C,EAAa5kB,GACzC9F,KAAK09B,gBAAgBpQ,EAAQ5C,EAAK5kB,GAClC9F,KAAKyC,MAAMiK,OAAO4gB,EAAQ5C,EAAK5kB,EAAAA,EAE1B3D,EAAAA,UAAAA,aAAP,WACE,OAAOnC,KAAKyC,MAAMu7B,cAAAA,EAEb77B,EAAAA,UAAAA,qBAAP,WACE,OAAOnC,KAAKyC,MAAMw7B,sBAAAA,EAEb97B,EAAAA,UAAAA,eAAP,WACEnC,KAAKyC,MAAMmrB,gBAAAA,EAENzrB,EAAAA,UAAAA,UAAP,WACEnC,KAAKyC,MAAMorB,WAAAA,EAEN1rB,EAAAA,UAAAA,YAAP,SAAmBwE,EAAeC,GAChC5G,KAAK09B,gBAAgB/2B,EAAOC,GAC5B5G,KAAKyC,MAAMqrB,YAAYnnB,EAAOC,EAAAA,EAEzBzE,EAAAA,UAAAA,QAAP,WACEnC,KAAK87B,cAAch0B,UACnB9H,KAAKyC,MAAMqF,SAAAA,EAEN3F,EAAAA,UAAAA,YAAP,SAAmBqmB,GACjBxoB,KAAK09B,gBAAgBlV,GACrBxoB,KAAKyC,MAAMuG,YAAYwf,EAAAA,EAElBrmB,EAAAA,UAAAA,YAAP,SAAmB+7B,GACjBl+B,KAAK09B,gBAAgBQ,GACrBl+B,KAAKyC,MAAM07B,YAAYD,EAAAA,EAElB/7B,EAAAA,UAAAA,YAAP,WACEnC,KAAKyC,MAAM27B,aAAAA,EAENj8B,EAAAA,UAAAA,eAAP,WACEnC,KAAKyC,MAAM6rB,gBAAAA,EAENnsB,EAAAA,UAAAA,aAAP,SAAoBuT,GAClB1V,KAAK09B,gBAAgBhoB,GACrB1V,KAAKyC,MAAM47B,aAAa3oB,EAAAA,EAEnBvT,EAAAA,UAAAA,MAAP,WACEnC,KAAKyC,MAAMI,OAAAA,EAENV,EAAAA,UAAAA,MAAP,SAAa+O,EAA2BgN,GACtCle,KAAKyC,MAAMshB,MAAM7S,EAAMgN,EAAAA,EAElB/b,EAAAA,UAAAA,UAAP,SAAiB+O,EAAkBgN,GACjCle,KAAKyC,MAAMshB,MAAM7S,EAAMgN,EAAAA,EAElB/b,EAAAA,UAAAA,QAAP,SAAe+O,EAA2BgN,GACxCle,KAAKyC,MAAMshB,MAAM7S,GACjBlR,KAAKyC,MAAMshB,MAAM,OAAQ7F,EAAAA,EAEpB/b,EAAAA,UAAAA,MAAP,SAAa+O,GACXlR,KAAKyC,MAAMwI,MAAMiG,EAAAA,EAOZ/O,EAAAA,UAAAA,UAAP,SAAiBX,GACf,OAAOxB,KAAKyC,MAAMgiB,eAAe6Z,UAAU98B,EAAAA,EAYtCW,EAAAA,UAAAA,UAAP,SAAiBX,EAAU8J,GACzBtL,KAAKi8B,sBAAsBz6B,GAC3BxB,KAAKyC,MAAMgiB,eAAe8Z,UAAU/8B,EAAK8J,EAAAA,EAEpCnJ,EAAAA,UAAAA,QAAP,SAAewE,EAAeC,GAC5B5G,KAAK09B,gBAAgB/2B,EAAOC,GAC5B5G,KAAKyC,MAAMuH,QAAQrD,EAAOC,EAAAA,EAErBzE,EAAAA,UAAAA,MAAP,WACEnC,KAAKyC,MAAMof,OAAAA,EAEN1f,EAAAA,UAAAA,kBAAP,WACEnC,KAAKyC,MAAMwtB,mBAAAA,EAEN9tB,EAAAA,UAAAA,UAAP,SAAiBq8B,GACf,OAAOx+B,KAAK87B,cAAc2C,UAAUz+B,KAAMw+B,EAAAA,EAE5C98B,OAAAA,eAAkBS,EAAA,UAAO,C,IAAzB,WACE,OAAOwH,CAAAA,E,gCAGDxH,EAAAA,UAAAA,gBAAR,W,YAAwBD,EAAAA,GAAA4C,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAA5C,EAAAA,GAAAA,UAAAA,G,IACtB,IAAoB,WAAMsC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAvB,IAAM8G,EAAK9G,EAAAA,MACd,GAAI8G,IAAUozB,KAAYC,MAAMrzB,IAAUA,EAAQ,GAAM,EACtD,MAAM,IAAIjF,MAAM,kC,oGAKdlE,EAAAA,UAAAA,wBAAR,W,YAAgCD,EAAAA,GAAA4C,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAA5C,EAAAA,GAAAA,UAAAA,G,IAC9B,IAAoB,WAAMsC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAvB,IAAM8G,EAAK9G,EAAAA,MACd,GAAI8G,IAAUA,IAAUozB,KAAYC,MAAMrzB,IAAUA,EAAQ,GAAM,GAAKA,EAAQ,GAC7E,MAAM,IAAIjF,MAAM,2C,oGAIxBlE,CApRA,CAAAtC,GAAasE,EAAAA,SAAAA,CAAA2sB,E,oaCdb,aAEA9jB,EAAAA,EAAAA,MAEAxI,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAIAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAhF,EAAAA,WA6BE,WACUo0B,EACR9f,EACAlI,EACQ2yB,EACEC,EACFC,EACW7sB,EACAoK,EACA+E,GARX,KAAA6S,WAAA,EAGA,KAAA2K,OAAA,EACE,KAAAC,QAAA,EACF,KAAAC,YAAA,EACW,KAAA7sB,eAAA,EACA,KAAAoK,gBAAA,EACA,KAAA+E,mBAAA,EAnCb,KAAA2d,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,iBAA2B,EAC3B,KAAAC,kBAA4B,EAC5B,KAAAC,gBAA0B,EAC1B,KAAAC,eAAyB,EAIzB,KAAAC,mBAAA,EAOA,KAAAC,wBAA4C,CAClDC,MAAO,GACPC,KAAM,EACN3yB,GAAI,EACJC,GAAI,EACJ2yB,MAAM,EACNC,KAAK,EACLC,QAAQ,GAcR3/B,KAAKy2B,QAAUzxB,SAASC,cAAc,UACtCjF,KAAKy2B,QAAQvxB,UAAUC,IAAI,SAASgP,EAAE,UACtCnU,KAAKy2B,QAAQhsB,MAAMwB,OAASA,EAAO/B,WACnClK,KAAK4/B,cACL5/B,KAAKi0B,WAAWxuB,YAAYzF,KAAKy2B,QAmgBrC,QAhgBSt0B,EAAAA,UAAAA,QAAP,W,SACE,EAAA4F,yBAAwB/H,KAAKy2B,SACd,QAAft0B,EAAAA,KAAK09B,kBAAAA,IAAU19B,GAAAA,EAAE2F,SAAAA,EAGX3F,EAAAA,UAAAA,YAAR,WACEnC,KAAKoO,MAAAA,EAAO,EAAA0xB,cAAa9/B,KAAKy2B,QAAQtoB,WAAW,KAAM,CAAEsD,MAAOzR,KAAK4+B,UAEhE5+B,KAAK4+B,QACR5+B,KAAK+/B,WAAAA,EAIF59B,EAAAA,UAAAA,iBAAP,aACOA,EAAAA,UAAAA,OAAP,aACOA,EAAAA,UAAAA,QAAP,aACOA,EAAAA,UAAAA,aAAP,aACOA,EAAAA,UAAAA,cAAP,SAAqBuY,EAAkBC,GAAAA,EAEhCxY,EAAAA,UAAAA,mBAAP,SAA0BwE,EAAqCC,EAAmCqiB,QAAAA,IAAAA,IAAAA,GAAAA,GAChGjpB,KAAKggC,gBAAkBr5B,EACvB3G,KAAKigC,cAAgBr5B,EACrB5G,KAAKq/B,kBAAoBpW,CAAAA,EAGpB9mB,EAAAA,UAAAA,UAAP,SAAiB+9B,GACflgC,KAAKmgC,kBAAkBD,EAAAA,EAGf/9B,EAAAA,UAAAA,iBAAV,SAA2BsP,GAEzB,GAAIA,IAAUzR,KAAK4+B,OAAnB,CAKA,IAAMwB,EAAYpgC,KAAKy2B,QACvBz2B,KAAK4+B,OAASntB,EAEdzR,KAAKy2B,QAAUz2B,KAAKy2B,QAAQ4J,YAC5BrgC,KAAK4/B,cACL5/B,KAAKi0B,WAAWqM,aAAatgC,KAAKy2B,QAAS2J,GAG3CpgC,KAAKmgC,kBAAkBngC,KAAK6+B,SAC5B7+B,KAAKugC,cAAc,EAAGvgC,KAAKiS,eAAevP,KAAO,KAO3CP,EAAAA,UAAAA,kBAAR,SAA0B+9B,GACpBlgC,KAAK++B,kBAAoB,GAAK/+B,KAAKg/B,mBAAqB,IAG5Dh/B,KAAK6/B,YAAAA,EAAa,EAAAW,kBAAiBxgC,KAAKqc,gBAAgBmB,WAAYxd,KAAK8+B,YAAaoB,EAAUlgC,KAAK++B,iBAAkB/+B,KAAKg/B,mBAC5Hh/B,KAAK6/B,WAAWY,SAAAA,EAGXt+B,EAAAA,UAAAA,OAAP,SAAcu9B,GACZ1/B,KAAKi/B,iBAAmBS,EAAIjP,gBAC5BzwB,KAAKk/B,kBAAoBQ,EAAIhP,iBAC7B1wB,KAAK++B,iBAAmBW,EAAIgB,gBAC5B1gC,KAAKg/B,kBAAoBU,EAAIiB,iBAC7B3gC,KAAKm/B,gBAAkBO,EAAIkB,eAC3B5gC,KAAKo/B,eAAiBM,EAAImB,cAC1B7gC,KAAKy2B,QAAQzqB,MAAQ0zB,EAAItP,kBACzBpwB,KAAKy2B,QAAQ/rB,OAASg1B,EAAInP,mBAC1BvwB,KAAKy2B,QAAQhsB,MAAMuB,MAAW0zB,EAAIvP,YAAW,KAC7CnwB,KAAKy2B,QAAQhsB,MAAMC,OAAYg1B,EAAIpP,aAAY,KAG1CtwB,KAAK4+B,QACR5+B,KAAK+/B,YAGP//B,KAAKmgC,kBAAkBngC,KAAK6+B,QAAAA,EAKvB18B,EAAAA,UAAAA,kBAAP,W,MACiB,QAAfA,EAAAA,KAAK09B,kBAAAA,IAAU19B,GAAAA,EAAEU,OAAAA,EAUTV,EAAAA,UAAAA,WAAV,SAAqB6T,EAAWC,EAAWjK,EAAetB,GACxD1K,KAAKoO,KAAK6C,SACR+E,EAAIhW,KAAKi/B,iBACThpB,EAAIjW,KAAKk/B,kBACTlzB,EAAQhM,KAAKi/B,iBACbv0B,EAAS1K,KAAKk/B,kBAAAA,EASR/8B,EAAAA,UAAAA,uBAAV,SAAiC6T,EAAWC,EAAWjK,QAAAA,IAAAA,IAAAA,EAAAA,GACrD,IAAM80B,EAAan9B,KAAK6P,KAA8B,GAAzBxT,KAAKk/B,mBAClCl/B,KAAKoO,KAAK6C,SACR+E,EAAIhW,KAAKi/B,kBACRhpB,EAAI,GAAKjW,KAAKk/B,kBAAoB4B,EAAaz9B,OAAOwb,iBACvD7S,EAAQhM,KAAKi/B,iBACb57B,OAAOwb,iBAAAA,EASD1c,EAAAA,UAAAA,uBAAV,SAAiC6T,EAAWC,EAAWjK,QAAAA,IAAAA,IAAAA,EAAAA,GACrDhM,KAAKoO,KAAK6C,SACR+E,EAAIhW,KAAKi/B,kBACRhpB,EAAI,GAAKjW,KAAKk/B,kBAAoB77B,OAAOwb,iBAAmB,EAC7D7S,EAAQhM,KAAKi/B,iBACb57B,OAAOwb,iBAAAA,EASD1c,EAAAA,UAAAA,oBAAV,SAA8B6T,EAAWC,EAAWjK,GAClDhM,KAAKoO,KAAK6C,SACR+E,EAAIhW,KAAKi/B,iBACThpB,EAAIjW,KAAKk/B,kBACT77B,OAAOwb,iBAAmB7S,EAC1BhM,KAAKk/B,kBAAAA,EASC/8B,EAAAA,UAAAA,kBAAV,SAA4B6T,EAAWC,EAAWjK,EAAetB,GAC/D1K,KAAKoO,KAAK2pB,UAAY10B,OAAOwb,iBAC7B7e,KAAKoO,KAAK2yB,WACR/qB,EAAIhW,KAAKi/B,iBAAmB57B,OAAOwb,iBAAmB,EACtD5I,EAAIjW,KAAKk/B,kBAAqB77B,OAAOwb,iBAAmB,EACxD7S,EAAQhM,KAAKi/B,iBAAmB57B,OAAOwb,iBACtCnU,EAAS1K,KAAKk/B,kBAAqB77B,OAAOwb,iBAAAA,EAMrC1c,EAAAA,UAAAA,UAAV,WACMnC,KAAK4+B,OACP5+B,KAAKoO,KAAKypB,UAAU,EAAG,EAAG73B,KAAKy2B,QAAQzqB,MAAOhM,KAAKy2B,QAAQ/rB,SAE3D1K,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQnwB,WAAWnB,IAC9CvN,KAAKoO,KAAK6C,SAAS,EAAG,EAAGjR,KAAKy2B,QAAQzqB,MAAOhM,KAAKy2B,QAAQ/rB,QAAAA,EAWpDvI,EAAAA,UAAAA,YAAV,SAAsB6T,EAAWC,EAAWjK,EAAetB,GACrD1K,KAAK4+B,OACP5+B,KAAKoO,KAAKypB,UACR7hB,EAAIhW,KAAKi/B,iBACThpB,EAAIjW,KAAKk/B,kBACTlzB,EAAQhM,KAAKi/B,iBACbv0B,EAAS1K,KAAKk/B,oBAEhBl/B,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQnwB,WAAWnB,IAC9CvN,KAAKoO,KAAK6C,SACR+E,EAAIhW,KAAKi/B,iBACThpB,EAAIjW,KAAKk/B,kBACTlzB,EAAQhM,KAAKi/B,iBACbv0B,EAAS1K,KAAKk/B,mBAAAA,EAaV/8B,EAAAA,UAAAA,mBAAV,SAA6B6+B,EAAgBhrB,EAAWC,GACtDjW,KAAKoO,KAAK6yB,KAAOjhC,KAAKkhC,UAAAA,GAAS,GAC/BlhC,KAAKoO,KAAK+yB,aAAen0B,EAAAA,cACzBhN,KAAKohC,SAASnrB,GAGd,IAAIorB,GAAAA,GAAc,IACdrhC,KAAKqc,gBAAgBmB,WAAW8jB,eAClCD,GAAAA,EAAc,EAAAE,mBAAkBvhC,KAAKoO,KAAM4yB,EAAKQ,WAAYxrB,EAAIhW,KAAKi/B,iBAAkBhpB,EAAIjW,KAAKk/B,kBAAmBl/B,KAAKi/B,iBAAkBj/B,KAAKk/B,oBAI5ImC,GACHrhC,KAAKoO,KAAKqzB,SACRT,EAAKQ,WACLxrB,EAAIhW,KAAKi/B,iBAAmBj/B,KAAKm/B,gBACjClpB,EAAIjW,KAAKk/B,kBAAoBl/B,KAAKo/B,eAAiBp/B,KAAKg/B,kBAAAA,EAiBpD78B,EAAAA,UAAAA,WAAV,SAAqB6+B,EAAiBhrB,EAAWC,G,UACzCyrB,EAAgB1hC,KAAK2hC,kBAAkBX,EAAMhrB,EAAGC,GAMtD,GAAIyrB,GAAiBV,EAAKY,WAAaZ,EAAKa,UAC1C7hC,KAAK8hC,mBAAmBd,EAAMhrB,EAAGC,EAAGyrB,OADtC,CAKA,IAAI50B,EACAD,EACAm0B,EAAKe,aACPj1B,EAAMk0B,EAAKgB,cAAiBh1B,EAAAA,uBAAyBg0B,EAAKiB,aAC1Dp1B,EAAMm0B,EAAKkB,cAAiBl1B,EAAAA,uBAAyBg0B,EAAKmB,eAE1Dt1B,EAAMm0B,EAAKgB,cAAiBn6B,EAAAA,cAAgBm5B,EAAKiB,aACjDn1B,EAAMk0B,EAAKkB,cAAiBr6B,EAAAA,cAAgBm5B,EAAKmB,cAKnDr1B,GAF0B9M,KAAKqc,gBAAgBmB,WAAW4kB,4BAA8BpB,EAAKqB,UAAYv1B,EAAK,EAEpF,EAAI,EAC9B9M,KAAKs/B,wBAAwBC,MAAQyB,EAAKQ,YAAc35B,EAAAA,qBACxD7H,KAAKs/B,wBAAwBE,KAAOwB,EAAKsB,WAAaz6B,EAAAA,qBACtD7H,KAAKs/B,wBAAwBzyB,GAAKA,EAClC7M,KAAKs/B,wBAAwBxyB,GAAKA,EAClC9M,KAAKs/B,wBAAwBG,OAASuB,EAAKqB,SAC3CriC,KAAKs/B,wBAAwBI,MAAQsB,EAAKuB,QAC1CviC,KAAKs/B,wBAAwBK,SAAWqB,EAAKwB,WAG7C,IAAIC,GAAAA,E,IACJ,IAAgB,QAAAziC,KAAKohB,mBAAmBshB,qBAAqB1sB,EAAGC,IAAEwD,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAA/D,IAAMA,EAACA,EAAAA,MACV,GAAIA,EAAEkpB,oBAAsBlpB,EAAEmpB,mBAAoB,CAChDH,GAAAA,EACA,O,mGAIiBA,IAAsC,QAAf/9B,EAAAA,KAAKm7B,kBAAAA,IAAUn7B,OAAAA,EAAAA,EAAEm+B,KAAK7iC,KAAKoO,KAAMpO,KAAKs/B,wBAAyBtpB,EAAIhW,KAAKi/B,iBAAmBj/B,KAAKm/B,gBAAiBlpB,EAAIjW,KAAKk/B,kBAAoBl/B,KAAKo/B,kBAG7Lp/B,KAAK8hC,mBAAmBd,EAAMhrB,EAAGC,EAAAA,CAAAA,EAc7B9T,EAAAA,UAAAA,mBAAR,SAA2B6+B,EAAiBhrB,EAAWC,EAAW6sB,GAKhE,GAJA9iC,KAAKoO,KAAK20B,OACV/iC,KAAKoO,KAAK6yB,KAAOjhC,KAAKkhC,WAAWF,EAAKqB,WAAYrB,EAAKwB,YACvDxiC,KAAKoO,KAAK+yB,aAAen0B,EAAAA,cAErBg0B,EAAKe,YACP,GAAIe,EACF9iC,KAAKoO,KAAK0C,UAAYgyB,EAAWv1B,SAC5B,GAAIyzB,EAAKgB,cACdhiC,KAAKoO,KAAK0C,UAAYnM,EAAAA,MAAMq+B,OAAOhjC,KAAK6+B,QAAQnwB,YAAYnB,SACvD,GAAIyzB,EAAKa,UACd7hC,KAAKoO,KAAK0C,UAAY,OAAOrM,EAAAA,cAAc2e,WAAW4d,EAAKiB,cAAcgB,KAAK,KAAI,QAC7E,CACL,IAAIp2B,EAAKm0B,EAAKiB,aACVjiC,KAAKqc,gBAAgBmB,WAAW4kB,4BAA8BpB,EAAKqB,UAAYx1B,EAAK,IACtFA,GAAM,GAER7M,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQ5vB,KAAKpC,GAAIU,GAAAA,MAG9C,GAAIu1B,EACF9iC,KAAKoO,KAAK0C,UAAYgyB,EAAWv1B,SAC5B,GAAIyzB,EAAKkB,cACdliC,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQpwB,WAAWlB,SACzC,GAAIyzB,EAAKY,UACd5hC,KAAKoO,KAAK0C,UAAY,OAAOrM,EAAAA,cAAc2e,WAAW4d,EAAKmB,cAAcc,KAAK,KAAI,QAC7E,CACL,IAAIn2B,EAAKk0B,EAAKmB,aACVniC,KAAKqc,gBAAgBmB,WAAW4kB,4BAA8BpB,EAAKqB,UAAYv1B,EAAK,IACtFA,GAAM,GAER9M,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQ5vB,KAAKnC,GAAIS,GAIhDvN,CAAAA,KAAKohC,SAASnrB,GAGV+qB,EAAKuB,UACPviC,KAAKoO,KAAK80B,YAAcl2B,EAAAA,aAI1B,IAAIq0B,GAAAA,GAAc,IACdrhC,KAAKqc,gBAAgBmB,WAAW8jB,eAClCD,GAAAA,EAAc,EAAAE,mBAAkBvhC,KAAKoO,KAAM4yB,EAAKQ,WAAYxrB,EAAIhW,KAAKi/B,iBAAkBhpB,EAAIjW,KAAKk/B,kBAAmBl/B,KAAKi/B,iBAAkBj/B,KAAKk/B,oBAI5ImC,GACHrhC,KAAKoO,KAAKqzB,SACRT,EAAKQ,WACLxrB,EAAIhW,KAAKi/B,iBAAmBj/B,KAAKm/B,gBACjClpB,EAAIjW,KAAKk/B,kBAAoBl/B,KAAKo/B,eAAiBp/B,KAAKg/B,mBAG5Dh/B,KAAKoO,KAAK+0B,SAAAA,EAQJhhC,EAAAA,UAAAA,SAAR,SAAiB8T,GACfjW,KAAKoO,KAAKg1B,YACVpjC,KAAKoO,KAAKorB,KACR,EACAvjB,EAAIjW,KAAKk/B,kBACTl/B,KAAKiS,eAAetP,KAAO3C,KAAKi/B,iBAChCj/B,KAAKk/B,mBACPl/B,KAAKoO,KAAKi1B,MAAAA,EAOFlhC,EAAAA,UAAAA,SAAV,SAAmBkgC,EAAiBG,GAIlC,OAFkBA,EAAW,SAAW,IAErB,KAHAH,EAASriC,KAAKqc,gBAAgBmB,WAAW8lB,eAAiBtjC,KAAKqc,gBAAgBmB,WAAW+lB,YAG5E,IAAIvjC,KAAKqc,gBAAgBmB,WAAW4b,SAAW/1B,OAAOwb,iBAAgB,MAAM7e,KAAKqc,gBAAgBmB,WAAW2b,UAAAA,EAGvIh3B,EAAAA,UAAAA,kBAAR,SAA0B6+B,EAAgBhrB,EAAWC,G,QAG/CutB,EACAV,EACAW,GAAAA,E,IACJ,IAAgB,QAAAzjC,KAAKohB,mBAAmBshB,qBAAqB1sB,EAAGC,IAAEpW,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAA/D,IAAM4Z,EAAC5Z,EAAAA,MACc,QAApB4Z,EAAE1H,QAAQ2xB,OAAmBD,IAG7BhqB,EAAEkpB,qBACJa,EAAa/pB,EAAEkpB,mBAAmBn1B,MAEhCiM,EAAEmpB,qBACJE,EAAarpB,EAAEmpB,mBAAmBp1B,MAEpCi2B,EAA4B,QAApBhqB,EAAE1H,QAAQ2xB,MAAAA,CAUpB,C,gGAAA,IANKD,GACCzjC,KAAK6+B,QAAQ7vB,qBAAuBhP,KAAK2jC,mBAAmB3tB,EAAGC,KACjE6sB,EAAa9iC,KAAK6+B,QAAQ7vB,oBAAoBxB,MAI7Cg2B,GAAeV,GAAwE,IAAzD9iC,KAAKqc,gBAAgBmB,WAAWomB,wBAAAA,EAA8B,EAAAC,iCAAgC7C,EAAKsB,WAAtI,CAIA,IAAKkB,IAAeV,EAAY,CAE9B,IAAMgB,EAAgB9jC,KAAK6+B,QAAQ1vB,cAAc40B,SAAS/C,EAAKn0B,GAAIm0B,EAAKl0B,IACxE,QAAI,IAAAg3B,EACF,OAAOA,QAAAA,CAIX,KAAIE,EAAUhD,EAAKmB,aACf8B,EAAcjD,EAAKkD,iBACnBC,EAAUnD,EAAKiB,aACfmC,EAAcpD,EAAKqD,iBACjBtC,IAAcf,EAAKe,YACnBM,IAAWrB,EAAKe,YACtB,GAAIA,EAAW,CACb,IAAMuC,EAAON,EACbA,EAAUG,EACVA,EAAUG,EACV,IAAMC,EAAQN,EACdA,EAAcG,EACdA,EAAcG,CAGhB,KAAMC,EAASxkC,KAAKykC,4BAAAA,IAAuBjB,EAA2B,SAAoBY,EAAaZ,MAAAA,EAAAA,EAAcW,EAASpC,GACxH2C,EAAS1kC,KAAK2kC,uBAAuBV,EAAaD,EAASjC,EAAWM,GACxEpiC,EAAS0E,EAAAA,KAAKigC,oBAAoBpB,MAAAA,EAAAA,EAAcgB,EAAQ1B,MAAAA,EAAAA,EAAc4B,EAAQ1kC,KAAKqc,gBAAgBmB,WAAWomB,sBAElH,IAAK3jC,EAAQ,CACX,IAAK6iC,EAEH,YADA9iC,KAAK6+B,QAAQ1vB,cAAc01B,SAAS7D,EAAKn0B,GAAIm0B,EAAKl0B,GAAI,MAIxD7M,EAAS6iC,CAGX,KAAMrf,EAAgB,CACpBlW,IAAK5I,EAAAA,SAASmJ,MACX7N,GAAU,GAAM,IAChBA,GAAU,GAAM,IAChBA,GAAU,EAAK,KAElBuN,KAAMvN,GAMR,OAJKujC,GAAeV,GAClB9iC,KAAK6+B,QAAQ1vB,cAAc01B,SAAS7D,EAAKn0B,GAAIm0B,EAAKl0B,GAAI2W,GAGjDA,CAAAA,CAAAA,EAGDthB,EAAAA,UAAAA,uBAAR,SAA+BiiC,EAAqBD,EAAiBW,GACnE,OAAQV,GACN,KAAK,SACL,KAAK,SACH,OAAOpkC,KAAK6+B,QAAQ5vB,KAAKk1B,GAAS32B,KACpC,KAAK,SACH,OAAO22B,GAAW,EAEpB,QACE,OAAIW,EACK9kC,KAAK6+B,QAAQpwB,WAAWjB,KAE1BxN,KAAK6+B,QAAQnwB,WAAWlB,KAAAA,EAI7BrL,EAAAA,UAAAA,uBAAR,SAA+B8hC,EAAqBD,EAAiBc,EAAkBrF,GACrF,OAAQwE,GACN,KAAK,SACL,KAAK,SAIH,OAHIjkC,KAAKqc,gBAAgBmB,WAAW4kB,4BAA8B3C,GAAQuE,EAAU,IAClFA,GAAW,GAENhkC,KAAK6+B,QAAQ5vB,KAAK+0B,GAASx2B,KACpC,KAAK,SACH,OAAOw2B,GAAW,EAEpB,QACE,OAAIc,EACK9kC,KAAK6+B,QAAQnwB,WAAWlB,KAE1BxN,KAAK6+B,QAAQpwB,WAAWjB,KAAAA,EAI7BrL,EAAAA,UAAAA,mBAAR,SAA2B6T,EAAWC,GACpC,IAAMtP,EAAQ3G,KAAKggC,gBACbp5B,EAAM5G,KAAKigC,cACjB,SAAKt5B,IAAUC,KAGX5G,KAAKq/B,kBACArpB,GAAKrP,EAAM,IAAMsP,GAAKtP,EAAM,IACjCqP,EAAIpP,EAAI,IAAMqP,EAAIrP,EAAI,GAElBqP,EAAItP,EAAM,IAAMsP,EAAIrP,EAAI,IAC3BD,EAAM,KAAOC,EAAI,IAAMqP,IAAMtP,EAAM,IAAMqP,GAAKrP,EAAM,IAAMqP,EAAIpP,EAAI,IAClED,EAAM,GAAKC,EAAI,IAAMqP,IAAMrP,EAAI,IAAMoP,EAAIpP,EAAI,IAC7CD,EAAM,GAAKC,EAAI,IAAMqP,IAAMtP,EAAM,IAAMqP,GAAKrP,EAAM,KAE3DxE,CA/iBA,CAAAtC,GAAsBsE,EAAAA,gBAAAA,CAAA4gC,E,i+BCftB,cAEArgC,EAAAA,EAAAA,KAEAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MAaMogC,EAAiB,IAEvBnlC,EAAAA,SAAAA,GAME,WACEolC,EACAh5B,EACAyB,EACAw3B,EACQC,EACQlL,EACCxV,EACc+T,EACO4M,EAClBC,GAVtB,MAYEljC,EAAAA,KAAAA,KAAM8iC,EAAW,SAAUh5B,GAAAA,EAAcyB,EAAQw3B,EAAYjL,EAAexV,EAAgB4gB,IAAkB,K,OAPtGxlC,EAAAA,iBAAAA,EAGuBA,EAAAA,aAAAA,EACOA,EAAAA,oBAAAA,EAXhCA,EAAAA,MAAmB,IAAI6E,EAAAA,SAe7B7E,EAAKylC,OAAS,CACZtvB,EAAG,EACHC,EAAG,EACHsvB,WAAW,EACX96B,MAAO,GACPuB,MAAO,GAETnM,EAAK2lC,iBAAmB,CACtBC,IAAO5lC,EAAK6lC,iBAAiBx/B,KAAKrG,GAClC8lC,MAAS9lC,EAAK+lC,mBAAmB1/B,KAAKrG,GACtCmb,UAAanb,EAAKgmC,uBAAuB3/B,KAAKrG,IAlBxC,CA4MZ,QAvNuCgI,EAAAA,EAAAA,GAiC9B1D,EAAAA,UAAAA,QAAP,WACMnE,KAAK8lC,2BACP9lC,KAAK8lC,yBAAyBh+B,UAC9B9H,KAAK8lC,8BAAAA,GAEP3jC,EAAAA,UAAM2F,QAAOjG,KAAA,OAGRsC,EAAAA,UAAAA,OAAP,SAAcu7B,GACZv9B,EAAAA,UAAMW,OAAMjB,KAAA,KAAC69B,GAEb1/B,KAAKslC,OAAS,CACZtvB,EAAG,EACHC,EAAG,EACHsvB,WAAW,EACX96B,MAAO,GACPuB,MAAO,IAIJ7H,EAAAA,UAAAA,MAAP,W,MACEnE,KAAK+lC,eACwB,QAA7B5jC,EAAAA,KAAK2jC,gCAAAA,IAAwB3jC,GAAAA,EAAE6jC,wBAC/BhmC,KAAKimC,kBAAAA,EAGA9hC,EAAAA,UAAAA,OAAP,W,MAC+B,QAA7BhC,EAAAA,KAAK2jC,gCAAAA,IAAwB3jC,GAAAA,EAAE+jC,QAC/BlmC,KAAKmlC,iBAAiBtuB,KAAK,CAAElQ,MAAO3G,KAAKiS,eAAe7J,OAAO6N,EAAGrP,IAAK5G,KAAKiS,eAAe7J,OAAO6N,GAAAA,EAG7F9R,EAAAA,UAAAA,QAAP,W,MAC+B,QAA7BhC,EAAAA,KAAK2jC,gCAAAA,IAAwB3jC,GAAAA,EAAEgkC,SAC/BnmC,KAAKmlC,iBAAiBtuB,KAAK,CAAElQ,MAAO3G,KAAKiS,eAAe7J,OAAO6N,EAAGrP,IAAK5G,KAAKiS,eAAe7J,OAAO6N,GAAAA,EAG7F9R,EAAAA,UAAAA,iBAAP,wBACMnE,KAAKqc,gBAAgBmB,WAAW4oB,YAC7BpmC,KAAK8lC,2BACR9lC,KAAK8lC,yBAA2B,IAAIO,EAAwBrmC,KAAKolC,oBAAoBG,WAAW,WAC9FphC,EAAKmiC,SAAAA,EAAQ,MAIY,QAA7BnkC,EAAAA,KAAK2jC,gCAAAA,IAAwB3jC,GAAAA,EAAE2F,UAC/B9H,KAAK8lC,8BAAAA,GAIP9lC,KAAKmlC,iBAAiBtuB,KAAK,CAAElQ,MAAO3G,KAAKiS,eAAe7J,OAAO6N,EAAGrP,IAAK5G,KAAKiS,eAAe7J,OAAO6N,GAAAA,EAG7F9R,EAAAA,UAAAA,aAAP,W,MAC+B,QAA7BhC,EAAAA,KAAK2jC,gCAAAA,IAAwB3jC,GAAAA,EAAE6jC,uBAAAA,EAG1B7hC,EAAAA,UAAAA,cAAP,SAAqBuW,EAAkBC,IAChC3a,KAAK8lC,0BAA4B9lC,KAAK8lC,yBAAyBS,SAClEvmC,KAAKsmC,SAAAA,GAELtmC,KAAK8lC,yBAAyBE,uBAAAA,EAI1B7hC,EAAAA,UAAAA,QAAR,SAAgBqiC,GAEd,GAAKxmC,KAAKw4B,aAAahM,sBAAuBxsB,KAAKw4B,aAAaiO,eAAhE,CAKA,IAAMphB,EAAUrlB,KAAKiS,eAAe7J,OAAOkd,MAAQtlB,KAAKiS,eAAe7J,OAAO6N,EACxEywB,EAA0BrhB,EAAUrlB,KAAKiS,eAAe7J,OAAOiC,MAGrE,GAAIq8B,EAA0B,GAAKA,GAA2B1mC,KAAKiS,eAAevP,KAChF1C,KAAK+lC,mBADP,CAMA,IAAMvgB,EAAU7hB,KAAKmP,IAAI9S,KAAKiS,eAAe7J,OAAO4N,EAAGhW,KAAKiS,eAAetP,KAAO,GAElF,GADA3C,KAAKiS,eAAe7J,OAAOC,MAAM5I,IAAI4lB,GAAUshB,SAASnhB,EAASxlB,KAAK4mC,YAAAA,IAClE5mC,KAAK4mC,MAAM7yB,QAAf,CAIA,IAAK/T,KAAKolC,oBAAoBG,UAAW,CACvCvlC,KAAK+lC,eACL/lC,KAAKoO,KAAK20B,OACV/iC,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQlwB,OAAOpB,IAC1C,IAAMs5B,EAAc7mC,KAAKqc,gBAAgBmB,WAAWqpB,YAYpD,OAXIA,GAA+B,UAAhBA,EACjB7mC,KAAKwlC,iBAAiBqB,GAAarhB,EAASkhB,EAAyB1mC,KAAK4mC,OAE1E5mC,KAAK8mC,kBAAkBthB,EAASkhB,EAAyB1mC,KAAK4mC,OAEhE5mC,KAAKoO,KAAK+0B,UACVnjC,KAAKslC,OAAOtvB,EAAIwP,EAChBxlB,KAAKslC,OAAOrvB,EAAIywB,EAChB1mC,KAAKslC,OAAOC,WAAAA,EACZvlC,KAAKslC,OAAO76B,MAAQo8B,OACpB7mC,KAAKslC,OAAOt5B,MAAQhM,KAAK4mC,MAAMlhB,WAKjC,KAAI1lB,KAAK8lC,0BAA6B9lC,KAAK8lC,yBAAyBiB,gBAApE,CAKA,GAAI/mC,KAAKslC,OAAQ,CAEf,GAAItlC,KAAKslC,OAAOtvB,IAAMwP,GAClBxlB,KAAKslC,OAAOrvB,IAAMywB,GAClB1mC,KAAKslC,OAAOC,YAAcvlC,KAAKolC,oBAAoBG,WACnDvlC,KAAKslC,OAAO76B,QAAUzK,KAAKqc,gBAAgBmB,WAAWqpB,aACtD7mC,KAAKslC,OAAOt5B,QAAUhM,KAAK4mC,MAAMlhB,WACnC,OAEF1lB,KAAK+lC,cAGP/lC,CAAAA,KAAKoO,KAAK20B,OACV/iC,KAAKwlC,iBAAiBxlC,KAAKqc,gBAAgBmB,WAAWqpB,aAAe,SAASrhB,EAASkhB,EAAyB1mC,KAAK4mC,OACrH5mC,KAAKoO,KAAK+0B,UAEVnjC,KAAKslC,OAAOtvB,EAAIwP,EAChBxlB,KAAKslC,OAAOrvB,EAAIywB,EAChB1mC,KAAKslC,OAAOC,WAAAA,EACZvlC,KAAKslC,OAAO76B,MAAQzK,KAAKqc,gBAAgBmB,WAAWqpB,YACpD7mC,KAAKslC,OAAOt5B,MAAQhM,KAAK4mC,MAAMlhB,UAAAA,MAxB7B1lB,KAAK+lC,cAAAA,CAAAA,CAAAA,MAzCL/lC,KAAK+lC,cAAAA,EAoED5hC,EAAAA,UAAAA,aAAR,WACMnE,KAAKslC,SAEHjiC,OAAOwb,iBAAmB,EAC5B7e,KAAK+/B,YAEL//B,KAAKgnC,YAAYhnC,KAAKslC,OAAOtvB,EAAGhW,KAAKslC,OAAOrvB,EAAGjW,KAAKslC,OAAOt5B,MAAO,GAEpEhM,KAAKslC,OAAS,CACZtvB,EAAG,EACHC,EAAG,EACHsvB,WAAW,EACX96B,MAAO,GACPuB,MAAO,KAKL7H,EAAAA,UAAAA,iBAAR,SAAyB6R,EAAWC,EAAW+qB,GAC7ChhC,KAAKoO,KAAK20B,OACV/iC,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQlwB,OAAOpB,IAC1CvN,KAAKinC,oBAAoBjxB,EAAGC,EAAGjW,KAAKqc,gBAAgBmB,WAAW0pB,aAC/DlnC,KAAKoO,KAAK+0B,SAAAA,EAGJh/B,EAAAA,UAAAA,mBAAR,SAA2B6R,EAAWC,EAAW+qB,GAC/ChhC,KAAKoO,KAAK20B,OACV/iC,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQlwB,OAAOpB,IAC1CvN,KAAKmnC,WAAWnxB,EAAGC,EAAG+qB,EAAKtb,WAAY,GACvC1lB,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQjwB,aAAarB,IAChDvN,KAAKonC,mBAAmBpG,EAAMhrB,EAAGC,GACjCjW,KAAKoO,KAAK+0B,SAAAA,EAGJh/B,EAAAA,UAAAA,uBAAR,SAA+B6R,EAAWC,EAAW+qB,GACnDhhC,KAAKoO,KAAK20B,OACV/iC,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQlwB,OAAOpB,IAC1CvN,KAAKqnC,uBAAuBrxB,EAAGC,GAC/BjW,KAAKoO,KAAK+0B,SAAAA,EAGJh/B,EAAAA,UAAAA,kBAAR,SAA0B6R,EAAWC,EAAW+qB,GAC9ChhC,KAAKoO,KAAK20B,OACV/iC,KAAKoO,KAAKk5B,YAActnC,KAAK6+B,QAAQlwB,OAAOpB,IAC5CvN,KAAKunC,kBAAkBvxB,EAAGC,EAAG+qB,EAAKtb,WAAY,GAC9C1lB,KAAKoO,KAAK+0B,SAAAA,EArNgBn2B,EAAAA,CAYzBxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,cACAA,EAAAA,EAAAA,EAAAA,qBACAA,EAAAA,EAAAA,EAAAA,qBAhBQgjC,EAAb,CAAA3nC,CAAuC4E,EAAAA,iBAA1BN,EAAAA,kBAAAA,EAyNb,iBAcE,WACEohC,EACQznB,GAAA,KAAAA,gBAAA,EAER9d,KAAK+mC,iBAAAA,EACDxB,GACFvlC,KAAKynC,kBAiHX,QA7GE/lC,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAAiC,QAASnC,KAAK0nC,oBAAsB1nC,KAAK2nC,eAAAA,E,gCAEnExlC,EAAAA,UAAAA,QAAP,WACMnC,KAAK2nC,iBACPtkC,OAAOukC,cAAc5nC,KAAK2nC,gBAC1B3nC,KAAK2nC,oBAAAA,GAEH3nC,KAAK0nC,qBACPrkC,OAAO4P,aAAajT,KAAK0nC,oBACzB1nC,KAAK0nC,wBAAAA,GAEH1nC,KAAKge,kBACP3a,OAAO4a,qBAAqBje,KAAKge,iBACjChe,KAAKge,qBAAAA,EAAkBjR,EAIpB5K,EAAAA,UAAAA,sBAAP,sBACMnC,KAAKumC,WAITvmC,KAAK6nC,wBAA0BzW,KAAKC,MAEpCrxB,KAAK+mC,iBAAAA,EACA/mC,KAAKge,kBACRhe,KAAKge,gBAAkB3a,OAAO8a,uBAAsB,WAClDhc,EAAK2b,kBACL3b,EAAK6b,qBAAAA,CAAkBjR,KAAAA,EAKrB5K,EAAAA,UAAAA,iBAAR,SAAyB2lC,GAAzB,oBAAyBA,IAAAA,EAAAA,GAEnB9nC,KAAK2nC,iBACPtkC,OAAOukC,cAAc5nC,KAAK2nC,gBAC1B3nC,KAAK2nC,oBAAAA,GAOP3nC,KAAK0nC,mBAAqBrkC,OAAOyG,YAAW,WAG1C,GAAI3F,EAAK0jC,wBAAyB,CAChC,IAAME,EAAO/C,GAAkB5T,KAAKC,MAAQltB,EAAK0jC,yBAEjD,GADA1jC,EAAK0jC,6BAAAA,EACDE,EAAO,EAET,YADA5jC,EAAKsjC,iBAAiBM,EAM1B,CAAA5jC,EAAK4iC,iBAAAA,EACL5iC,EAAK6Z,gBAAkB3a,OAAO8a,uBAAsB,WAClDha,EAAK2Z,kBACL3Z,EAAK6Z,qBAAAA,CAAkBjR,IAIzB5I,EAAKwjC,eAAiBtkC,OAAO2kC,aAAY,WAEvC,GAAI7jC,EAAK0jC,wBAAyB,CAGhC,IAAME,EAAO/C,GAAkB5T,KAAKC,MAAQltB,EAAK0jC,yBAGjD,OAFA1jC,EAAK0jC,6BAAAA,OACL1jC,EAAKsjC,iBAAiBM,EAKxB,CAAA5jC,EAAK4iC,iBAAmB5iC,EAAK4iC,gBAC7B5iC,EAAK6Z,gBAAkB3a,OAAO8a,uBAAsB,WAClDha,EAAK2Z,kBACL3Z,EAAK6Z,qBAAAA,CAAkBjR,GAAAA,GAExBi4B,EAAAA,GACF8C,EAAAA,EAGE3lC,EAAAA,UAAAA,MAAP,WACEnC,KAAK+mC,iBAAAA,EACD/mC,KAAK2nC,iBACPtkC,OAAOukC,cAAc5nC,KAAK2nC,gBAC1B3nC,KAAK2nC,oBAAAA,GAEH3nC,KAAK0nC,qBACPrkC,OAAO4P,aAAajT,KAAK0nC,oBACzB1nC,KAAK0nC,wBAAAA,GAEH1nC,KAAKge,kBACP3a,OAAO4a,qBAAqBje,KAAKge,iBACjChe,KAAKge,qBAAAA,EAAkBjR,EAIpB5K,EAAAA,UAAAA,OAAP,WAEEnC,KAAKkmC,QAELlmC,KAAK6nC,6BAAAA,EACL7nC,KAAKynC,mBACLznC,KAAKgmC,uBAAAA,EAET7jC,CArIA,K,2mCC/OA,eASagC,EAAAA,wBAA2E,CAEtF,IAAK,CAAC,CAAE6R,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAG7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAG7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACzD,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACzD,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACzD,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACzD,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAC7B,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACzD,IAAK,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGzD,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IACrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAEjE,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAEjE,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAEjE,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAEjE,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAEjE,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGzH,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGrC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAErC,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGrC,KAAa,CACX,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GACnD,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GACnD,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GACnD,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGrD,KAAa,CACX,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GACnD,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GACnD,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GACnD,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,IAGrD,KAAa,CAAC,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,GAAK,CAAEoR,EAAG,EAAGC,EAAG,EAAG6J,EAAG,EAAGlb,EAAG,KASnE,IAAMqjC,GAAgF,CAEpF,IAAK,CACH,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEZ,IAAK,CACH,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,IAAK,CACH,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KA0CK9jC,EAAAA,sBAAsI,CAEjJ,KAAGW,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,cAAoCA,GAC3C,KAAG+C,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,cAAoCA,GAC3C,KAAGmF,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,cAAoCA,GAC3C,KAAGxI,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,cAAoCA,GAC3C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,sBAAsCA,GAC7C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,sBAAsCA,GAC7C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,qBAAqCA,GAC5C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,qBAAqCA,GAC5C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,qBAAmCA,GAC1C,KAAGhF,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,qBAAmCA,GAC1C,KAAGqX,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,qBAAkCA,GACzC,KAAGuC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,qBAAkCA,GACzC,KAAGiG,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA8BA,GACrC,KAAG/R,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA8BA,GACrC,KAAGsI,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA6BA,GACpC,KAAGrI,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA6BA,GACpC,KAAG+R,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA+BA,GACtC,KAAG9R,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA+BA,GACtC,KAAG+R,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA4BA,GACnC,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,2BAA4BA,GACnC,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,0BAA4BA,GACnC,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,0BAA4BA,GACnC,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAqCA,GAC5C,KAAGhK,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAqCA,GAC5C,KAAGiK,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAoCA,GAC3C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAoCA,GAC3C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAsCA,GAC7C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAsCA,GAC7C,KAAGhf,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAuCA,GAC9C,KAAGif,EAAAA,CAAAA,EAAIA,EAAAA,GAAAA,eAAuCA,GAG9C,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAAC4nB,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,EAAAA,EAAI7nB,GAC5F,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAAC2nB,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,MAAI3nB,GAC5F,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAAC0nB,EAAIC,GAAO,oBAAa,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,EAAAA,EAAI3nB,GACpG,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACynB,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,eAAc,GAAKA,GAAE,SAAQ,GAAKA,GAAE,MAAIznB,GACpG,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACwnB,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIxnB,GAC1I,KAAGvG,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAAC+tB,EAAIC,GAAO,aAAM,GAAKA,GAAE,SAAQ,GAAKA,GAAE,cAAa,GAAKA,GAAE,SAAQ,GAAKA,EAAAA,EAAIhuB,GACpG,KAAGwG,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACunB,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,eAAc,GAAKA,GAAE,SAAQ,GAAKA,GAAE,MAAIvnB,GACpG,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACsnB,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAItnB,GAC1I,KAAGwnB,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACF,EAAIC,GAAO,oBAAa,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,EAAAA,EAAIC,GACpG,KAAGvnB,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACqnB,EAAIC,GAAO,iBAAU,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,MAAIrnB,GACpG,KAAGwnB,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACH,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIG,GAC1I,KAAGvS,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACoS,EAAIC,GAAO,aAAM,GAAKA,GAAE,SAAQ,GAAKA,GAAE,cAAa,GAAKA,GAAE,SAAQ,GAAKA,EAAAA,EAAIrS,GACpG,KAAGwS,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACJ,EAAIC,GAAO,iBAAU,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,MAAII,GACpG,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACL,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIK,GAC1I,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACN,EAAIC,GAAO,0BAA+B,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,EAAAA,EAAIK,GACtH,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACP,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,aAAWO,GACjH,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACR,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIQ,GACtK,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACT,EAAIC,GAAO,yBAA8B,GAAKA,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,EAAAA,EAAIQ,GACtH,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACV,EAAIC,GAAO,iBAAU,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,MAAIU,GACjH,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACX,EAAIC,GAAO,WAAI,GAAKD,GAAE,QAAO,GAAKA,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIW,GACtK,KAAGC,EAAAA,CAAAA,EAAIA,EAAAA,GAAgB,SAACZ,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,UAAQW,GACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAACb,EAAIC,GAAO,uBAA4B,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,MAAIa,IACtH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAACd,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIc,IACtK,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAACf,EAAIC,GAAO,oBAAa,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,EAAAA,EAAIc,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAAChB,EAAIC,GAAO,uBAA4B,GAAKD,GAAE,SAAQ,GAAKA,GAAE,QAAO,GAAKA,GAAE,SAAQ,GAAKA,GAAE,MAAIgB,IACtH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAACjB,EAAIC,GAAO,aAAM,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIiB,IACtK,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAAClB,EAAIC,GAAO,yBAA8B,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,EAAAA,EAAIiB,IACpH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAACnB,EAAIC,GAAO,uBAA4B,GAAKD,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,QAAO,GAAKA,GAAE,MAAImB,IACpH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,SAACpB,EAAIC,GAAO,aAAM,GAAKA,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,UAAS,GAAKC,GAAE,MAAK,GAAKD,GAAE,KAAI,GAAKC,GAAE,MAAK,GAAKD,GAAE,MAAIoB,IAGhP,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,YAAWA,IAClC,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,YAAWA,IAClC,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,sBAAqBA,IAG5C,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAqCA,IAClH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAqCA,IAClH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAqCA,IAClH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,eAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,cAAsEA,GAAAA,GAAAA,eAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,sBAAsEA,GAAAA,GAAAA,eAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,eAAqCA,IAClH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,cAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,qBAAiCA,IAC9G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,sBAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,cAAsEA,GAAAA,GAAAA,eAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,eAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,eAAqCA,IAClH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,cAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,qBAAgCA,IAC7G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,qBAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,sBAAsEA,GAAAA,GAAAA,eAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,eAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,cAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,cAAsEA,GAAAA,GAAAA,eAAqCA,IAClH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,qBAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,sBAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,eAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,eAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,cAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,cAAsEA,GAAAA,GAAAA,eAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,qBAAgCA,IAC7G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAAA,qBAAiCA,IAC9G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,2BAAsDA,GAAAA,GAAAA,eAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,2BAAsDA,GAAAA,GAAAA,eAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,cAAsEA,GAAAA,GAAAA,cAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,2BAAsDA,GAAAA,GAAAA,eAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,2BAAsDA,GAAAA,GAAAA,eAAqCA,IAClH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,cAAsEA,GAAAA,GAAAA,cAAkCA,IAC/G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,sBAAsEA,GAAAA,GAAAA,qBAAgCA,IAC7G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,qBAAiCA,IAC9G,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,qBAAmCA,IAChH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,qBAAsEA,GAAAA,GAAAA,sBAAoCA,IACjH,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAc,2BAAiDA,IAC5I,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAc,2BAAoDA,IAC/I,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAc,2BAAkDA,IAC7I,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,eAAsEA,GAAAA,GAAc,2BAAmDA,IAG9I,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,8BAA4CA,IACnD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,8BAA4CA,IACnD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,wDAA8CA,IACrD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,wDAA8CA,IACrD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,8DAA6CA,IACpD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,8DAA6CA,IACpD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,8BAA0CA,IACjD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,8BAA0CA,IACjD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,wDAA4CA,IACnD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,wDAA4CA,IACnD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,uDAA2CA,IAClD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAAA,uDAA2CA,IAGlD,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,mBAAkBA,IACzC,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,mBAAkBA,IACzC,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,mBAAkBA,IACzC,KAAGC,GAAAA,CAAAA,EAAIA,GAAAA,GAAgB,mBAAkBA,KAuB9BxpC,EAAAA,qBAA0D,CAErE,IAAY,CAAEsV,EAAG,kBAAmB5H,KAAM,GAE1C,IAAY,CAAE4H,EAAG,kBAAmB5H,KAAM,EAAmB+7B,kBAAmB,IAEhF,IAAY,CAAEn0B,EAAG,kBAAmB5H,KAAM,GAE1C,IAAY,CAAE4H,EAAG,kBAAmB5H,KAAM,EAAmB+7B,kBAAmB,KAOlFzpC,EAAAA,kBAAAA,SACE+J,EACAxJ,EACAmpC,EACAC,EACArd,EACAC,GAEA,IAAMqd,EAAyB5pC,EAAAA,wBAAwBO,GACvD,GAAIqpC,EAEF,OAwBJ,SACE7/B,EACA8/B,EACAH,EACAC,EACArd,EACAC,GAEA,IAAK,IAAI5rB,EAAI,EAAGA,EAAIkpC,EAAeloC,OAAQhB,IAAK,CAC9C,IAAMmpC,EAAMD,EAAelpC,GACrBopC,EAAUzd,EAAkB,EAC5B0d,EAAUzd,EAAmB,EACnCxiB,EAAI+C,SACF48B,EAAUI,EAAIj4B,EAAIk4B,EAClBJ,EAAUG,EAAIh4B,EAAIk4B,EAClBF,EAAInuB,EAAIouB,EACRD,EAAIrpC,EAAIupC,EAAAA,CAzCVC,CAyBJ,CAzByBlgC,EAAK6/B,EAAwBF,EAASC,EAASrd,EAAiBC,IAAAA,EAIvF,IAAM2d,EAAoBpG,GAA4BvjC,GACtD,GAAI2pC,EAEF,OAyCJ,SACEngC,EACA8/B,EACAH,EACAC,EACArd,EACAC,G,MAEI4d,EAAaC,GAAe9uC,IAAIuuC,GAC/BM,IACHA,EAAa,IAAIt1B,IACjBu1B,GAAe5uC,IAAIquC,EAAgBM,IAErC,IAAMx9B,EAAY5C,EAAI4C,UACtB,GAAyB,iBAAdA,EACT,MAAM,IAAIzK,MAAM,8BAA8ByK,EAAS,KAEzD,IAAI09B,EAAUF,EAAW7uC,IAAIqR,GAC7B,IAAK09B,EAAS,CACZ,IAAMxiC,EAAQgiC,EAAe,GAAGloC,OAC1B4E,EAASsjC,EAAeloC,OACxB2oC,EAAYzpC,SAASC,cAAc,UACzCwpC,EAAUziC,MAAQA,EAClByiC,EAAU/jC,OAASA,EACnB,IAAMgkC,GAAAA,EAAS,GAAA5O,cAAa2O,EAAUtgC,WAAW,OAC3CwgC,EAAY,IAAIC,UAAU5iC,EAAOtB,GAGnCxI,OAAAA,EACA0L,OAAAA,EACAC,OAAAA,EACApJ,OAAAA,EACJ,GAAIqM,EAAU+9B,WAAW,KACvB3sC,EAAIsB,SAASsN,EAAU5B,MAAM,EAAG,GAAI,IACpCtB,EAAIpK,SAASsN,EAAU5B,MAAM,EAAG,GAAI,IACpCrB,EAAIrK,SAASsN,EAAU5B,MAAM,EAAG,GAAI,IACpCzK,EAAIqM,EAAUhL,OAAS,GAAKtC,SAASsN,EAAU5B,MAAM,EAAG,GAAI,KAAO,MAC9D,KAAI4B,EAAU+9B,WAAW,QAG9B,MAAM,IAAIxoC,MAAM,sCAAsCyK,EAAS,gCAF7D5O,GAADsC,EAAAA,GAAesM,EAAUM,UAAU,EAAGN,EAAUhL,OAAS,GAAGuL,MAAM,KAAKC,KAAI,SAAAnP,GAAK,OAAA2sC,WAAW3sC,EAAAA,IAAG,IAA5F,GAAEyL,EAACpJ,EAAAA,GAAEqJ,EAACrJ,EAAAA,GAAEC,EAACD,EAAAA,EAKd,KAAK,IAAIyR,EAAI,EAAGA,EAAIvL,EAAQuL,IAC1B,IAAK,IAAID,EAAI,EAAGA,EAAIhK,EAAOgK,IACzB24B,EAAUz9B,KAAuB,GAAjB+E,EAAIjK,EAAQgK,IAAc9T,EAC1CysC,EAAUz9B,KAAuB,GAAjB+E,EAAIjK,EAAQgK,GAAS,GAAKpI,EAC1C+gC,EAAUz9B,KAAuB,GAAjB+E,EAAIjK,EAAQgK,GAAS,GAAKnI,EAC1C8gC,EAAUz9B,KAAuB,GAAjB+E,EAAIjK,EAAQgK,GAAS,GAAKg4B,EAAe/3B,GAAGD,IAAU,IAAJvR,GAGtEiqC,EAAOK,aAAaJ,EAAW,EAAG,GAClCH,GAAAA,EAAU,GAAA1O,cAAa5xB,EAAI8gC,cAAcP,EAAW,OACpDH,EAAW3uC,IAAImR,EAAW09B,EAE5BtgC,CAAAA,EAAI4C,UAAY09B,EAChBtgC,EAAI+C,SAAS48B,EAASC,EAASrd,EAAiBC,EAlG9Cue,CA0CJ,CA1CoB/gC,EAAKmgC,EAAmBR,EAASC,EAASrd,EAAiBC,IAAAA,EAI7E,IAAMwe,EAAuB/qC,EAAAA,sBAAsBO,GACnD,GAAIwqC,EAEF,OAsIJ,SACEhhC,EACA8/B,EACAH,EACAC,EACArd,EACAC,G,YAEAxiB,EAAIo5B,YAAcp5B,EAAI4C,U,IACtB,IAAyC,SAAApP,OAAO8X,QAAQw0B,IAAenpC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAA9D,oBAAC0+B,EAAU1jC,EAAAA,GAAEsvC,EAAYtvC,EAAAA,GAClCqO,EAAIk1B,YACJl1B,EAAI6pB,UAAY10B,OAAOwb,iBAAmBtN,OAAO/N,SAAS+/B,GAC1D,IAAI6L,OAAAA,EAIFA,EAH0B,mBAAjBD,EAGYA,EAFV,IACA,IAAMze,EAAmBD,GAGf0e,E,IAEvB,IAA0B,qBAAmB99B,MAAM,OAAI4E,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAApD,IAAMo5B,EAAWp5B,EAAAA,MACdpE,EAAOw9B,EAAY,GACnBxvC,EAAIyvC,GAA0Bz9B,GACpC,GAAKhS,EAAL,CAIA,IAAM0vC,EAAiBF,EAAYj+B,UAAU,GAAGC,MAAM,KACjDk+B,EAAK,IAAOA,EAAK,IAGtB1vC,EAAEqO,EAAKshC,GAAcD,EAAM9e,EAAiBC,EAAkBmd,EAASC,GAAAA,MAPrE/8B,QAAQ5P,MAAM,4CAA4C0Q,EAAI,KASlE3D,C,gGAAAA,CAAAA,EAAIuhC,SACJvhC,EAAIwhC,WAAAA,C,kGAzKJC,CAuIJ,CAvIuBzhC,EAAKghC,EAAsBrB,EAASC,EAASrd,EAAiBC,IAAAA,EAInF,IAAMkf,EAAsBzrC,EAAAA,qBAAqBO,GACjD,QAAIkrC,IAwKN,SACE1hC,EACA8/B,EACAH,EACAC,EACArd,EACAC,G,QAEAxiB,EAAIk1B,YACJl1B,EAAI6pB,UAAY10B,OAAOwb,iB,IACvB,IAA0B,IAAAna,EAAA,KAAe+U,EAAEpI,MAAM,MAAI1M,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAlD,IAAM0qC,EAAW1qC,EAAAA,MACdkN,EAAOw9B,EAAY,GACnBxvC,EAAIyvC,GAA0Bz9B,GACpC,GAAKhS,EAAL,CAIA,IAAM0vC,EAAiBF,EAAYj+B,UAAU,GAAGC,MAAM,KACjDk+B,EAAK,IAAOA,EAAK,IAGtB1vC,EAAEqO,EAAKshC,GAAcD,EAAM9e,EAAiBC,EAAkBmd,EAASC,EAASE,EAAeJ,mBAAAA,MAP7F78B,QAAQ5P,MAAM,4CAA4C0Q,EAAI,KAStC,C,gGAAA,KAAxBm8B,EAAen8B,MACjB3D,EAAIo5B,YAAcp5B,EAAI4C,UACtB5C,EAAIuhC,UAEJvhC,EAAI2hC,OAEN3hC,EAAIwhC,WApMFI,CAuKJ,CAvKsB5hC,EAAK0hC,EAAqB/B,EAASC,EAASrd,EAAiBC,IAAAA,EACxE,EA2BX,IAAM6d,GAAoF,IAAIv1B,IA2K9F,SAAS+2B,GAAMzkC,EAAe1H,EAAakP,GACzC,YAAO,IADkCA,IAAAA,EAAAA,GAClCnP,KAAKC,IAAID,KAAKmP,IAAIxH,EAAO1H,GAAMkP,EAGxC,KAAMw8B,GAAsD,CAC1DzvB,EAAK,SAAC3R,EAA+BqhC,GAAmB,SAAIS,cAAcT,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAC5HxvB,EAAK,SAAC7R,EAA+BqhC,GAAmB,SAAIU,OAAOV,EAAK,GAAIA,EAAK,KACjFpvB,EAAK,SAACjS,EAA+BqhC,GAAmB,SAAIW,OAAOX,EAAK,GAAIA,EAAK,MAGnF,SAASC,GAAcD,EAAgB5pB,EAAmBF,EAAoBooB,EAAiBC,EAAiBF,QAAAA,IAAAA,IAAAA,EAAAA,GAC9G,IAAM3tC,EAASsvC,EAAKj+B,KAAI,SAAAnP,GAAK,OAAA2sC,WAAW3sC,IAAMqB,SAASrB,EAAAA,IAEvD,GAAIlC,EAAO6F,OAAS,EAClB,MAAM,IAAIO,MAAM,qCAGlB,IAAK,IAAI2P,EAAI,EAAGA,EAAI/V,EAAO6F,OAAQkQ,GAAK,EAEtC/V,EAAO+V,IAAM2P,EAAiC,EAApBioB,EAAwBvqC,OAAOwb,iBAGvC,IAAd5e,EAAO+V,KACT/V,EAAO+V,GAAK+5B,GAAMpsC,KAAK+N,MAAMzR,EAAO+V,GAAK,IAAO,GAAK2P,EAAW,IAGlE1lB,EAAO+V,IAAM63B,EAAWD,EAAoBvqC,OAAOwb,iBAGrD,IAAK,IAAI5I,EAAI,EAAGA,EAAIhW,EAAO6F,OAAQmQ,GAAK,EAEtChW,EAAOgW,IAAMwP,EAGK,IAAdxlB,EAAOgW,KACThW,EAAOgW,GAAK85B,GAAMpsC,KAAK+N,MAAMzR,EAAOgW,GAAK,IAAO,GAAKwP,EAAY,IAGnExlB,EAAOgW,IAAM63B,EAGf,OAAO7tC,CAAAA,CAAAA,E,iFCjnBT,iBAGE,aACED,KAAKmwC,MAAQ,EAuBjB,QApBShuC,EAAAA,UAAAA,OAAP,SAAc6J,EAAetB,GAC3B,IAAK,IAAIsL,EAAI,EAAGA,EAAIhK,EAAOgK,IAAK,CAC1BhW,KAAKmwC,MAAMrqC,QAAUkQ,GACvBhW,KAAKmwC,MAAMpnC,KAAK,IAElB,IAAK,IAAIkN,EAAIjW,KAAKmwC,MAAMn6B,GAAGlQ,OAAQmQ,EAAIvL,EAAQuL,IAC7CjW,KAAKmwC,MAAMn6B,GAAGjN,UAAAA,GAEhB/I,KAAKmwC,MAAMn6B,GAAGlQ,OAAS4E,CAEzB1K,CAAAA,KAAKmwC,MAAMrqC,OAASkG,CAAAA,EAGf7J,EAAAA,UAAAA,MAAP,WACE,IAAK,IAAI6T,EAAI,EAAGA,EAAIhW,KAAKmwC,MAAMrqC,OAAQkQ,IACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIjW,KAAKmwC,MAAMn6B,GAAGlQ,OAAQmQ,IACxCjW,KAAKmwC,MAAMn6B,GAAGC,QAAAA,CAAKlJ,EAI3B5K,CA3BA,IAAagC,EAAAA,UAAAA,CAAAA,E,+9BCCb,cACAO,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MAEAC,EAAAA,SAAAA,GAGE,WACEogC,EACAh5B,EACAyB,EACAw3B,EACAlkB,EACAG,EACgB8Y,EACCxV,EACG4gB,GATtB,MAWEljC,EAAAA,KAAAA,KAAM8iC,EAAW,OAAQh5B,GAAAA,EAAcyB,EAAQw3B,EAAYjL,EAAexV,EAAgB4gB,IAAkB,K,OAC5GrkB,EAAUovB,qBAAoB,SAAAjuC,GAAK,SAAKmQ,qBAAqBnQ,EAAAA,IAC7D6e,EAAUqvB,qBAAoB,SAAAluC,GAAK,SAAKoQ,qBAAqBpQ,EAAAA,IAE7Dgf,EAAWivB,qBAAoB,SAAAjuC,GAAK,SAAKmQ,qBAAqBnQ,EAAAA,IAC9Dgf,EAAWkvB,qBAAoB,SAAAluC,GAAK,SAAKoQ,qBAAqBpQ,EAAAA,IAJ9D6e,CAwDJ,QAvEqCnZ,EAAAA,EAAAA,GAsB5B1D,EAAAA,UAAAA,OAAP,SAAcu7B,GACZv9B,EAAAA,UAAMW,OAAMjB,KAAA,KAAC69B,GAEb1/B,KAAKslC,YAAAA,CAASv4B,EAGT5I,EAAAA,UAAAA,MAAP,WACEnE,KAAK6X,mBAAAA,EAGC1T,EAAAA,UAAAA,kBAAR,WACE,GAAInE,KAAKslC,OAAQ,CACftlC,KAAKgnC,YAAYhnC,KAAKslC,OAAOnvB,GAAInW,KAAKslC,OAAOlvB,GAAIpW,KAAKslC,OAAO3iC,KAAO3C,KAAKslC,OAAOnvB,GAAI,GACpF,IAAMm6B,EAAiBtwC,KAAKslC,OAAOhvB,GAAKtW,KAAKslC,OAAOlvB,GAAK,EACrDk6B,EAAiB,GACnBtwC,KAAKgnC,YAAY,EAAGhnC,KAAKslC,OAAOlvB,GAAK,EAAGpW,KAAKslC,OAAO3iC,KAAM2tC,GAE5DtwC,KAAKgnC,YAAY,EAAGhnC,KAAKslC,OAAOhvB,GAAItW,KAAKslC,OAAOjvB,GAAI,GACpDrW,KAAKslC,YAAAA,CAASv4B,CAAAA,EAIV5I,EAAAA,UAAAA,qBAAR,SAA6BhC,GAU3B,GATIA,EAAE2K,KAAOpI,EAAAA,uBACX1E,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQnwB,WAAWnB,IACrCpL,EAAE2K,KAAAA,EAAM,EAAAyjC,YAAWpuC,EAAE2K,IAE9B9M,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQ5vB,KAAK9M,EAAE2K,IAAIS,IAE9CvN,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQpwB,WAAWlB,IAG5CpL,EAAEiU,KAAOjU,EAAEmU,GAEbtW,KAAKqnC,uBAAuBllC,EAAEgU,GAAIhU,EAAEiU,GAAIjU,EAAEkU,GAAKlU,EAAEgU,QAC5C,CAELnW,KAAKqnC,uBAAuBllC,EAAEgU,GAAIhU,EAAEiU,GAAIjU,EAAEQ,KAAOR,EAAEgU,IACnD,IAAK,IAAIF,EAAI9T,EAAEiU,GAAK,EAAGH,EAAI9T,EAAEmU,GAAIL,IAC/BjW,KAAKqnC,uBAAuB,EAAGpxB,EAAG9T,EAAEQ,MAEtC3C,KAAKqnC,uBAAuB,EAAGllC,EAAEmU,GAAInU,EAAEkU,GAEzCrW,CAAAA,KAAKslC,OAASnjC,CAAAA,EAGRgC,EAAAA,UAAAA,qBAAR,SAA6BhC,GAC3BnC,KAAK6X,mBAAAA,EArEmB7K,EAAAA,CAUvBxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,qBAZQgsC,EAAb,CAAA3rC,CAAqCJ,EAAAA,iBAAxBN,EAAAA,gBAAAA,CAAAqsC,E,yxCCPb,cACA7rC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MACAhF,EAAAA,EAAAA,KAEAqX,EAAAA,EAAAA,MACAuC,EAAAA,EAAAA,MACAiG,EAAAA,EAAAA,MACA/R,EAAAA,EAAAA,MAEI8iC,EAAiB,EAErB7iC,EAAAA,SAAAA,GAWE,WACUixB,EACS1iB,EACjB6E,EACAG,EACuBuvB,EACUz+B,EACEmS,EACD/H,GARpC,MAUEla,EAAAA,KAAAA,OAAO,KATC+U,EAAAA,QAAAA,EACSA,EAAAA,eAAAA,EAIgBA,EAAAA,eAAAA,EACEA,EAAAA,iBAAAA,EACDA,EAAAA,gBAAAA,EAlB5BA,EAAAA,IAAMu5B,IAONv5B,EAAAA,iBAAmB,IAAIvJ,EAAAA,aAc7B,IAAMK,EAAoBkJ,EAAKmF,gBAAgBmB,WAAWxP,kB,OAC1DkJ,EAAKy5B,cAAgB,CACnBD,EAAqBxvB,eAAexc,EAAAA,gBAAiBwS,EAAKiF,eAAgB,EAAGjF,EAAK2nB,QAAS7wB,EAAmBkJ,EAAK05B,KACnHF,EAAqBxvB,eAAevc,EAAAA,qBAAsBuS,EAAKiF,eAAgB,EAAGjF,EAAK2nB,QAAS3nB,EAAK05B,KACrGF,EAAqBxvB,eAAerc,EAAAA,gBAAiBqS,EAAKiF,eAAgB,EAAGjF,EAAK2nB,QAAS3nB,EAAK05B,IAAK5vB,EAAWG,GAChHuvB,EAAqBxvB,eAAetc,EAAAA,kBAAmBsS,EAAKiF,eAAgB,EAAGjF,EAAK2nB,QAAS3nB,EAAK05B,IAAK15B,EAAKiuB,mBAE9GjuB,EAAKjU,WAAa,CAChBy9B,gBAAiB,EACjBC,iBAAkB,EAClBlQ,gBAAiB,EACjBC,iBAAkB,EAClBkQ,eAAgB,EAChBC,cAAe,EACfzQ,kBAAmB,EACnBG,mBAAoB,EACpBJ,YAAa,EACbG,aAAc,EACdptB,gBAAiB,EACjBC,iBAAkB,GAEpB+T,EAAK25B,kBAAoBxtC,OAAOwb,iBAChC3H,EAAK45B,oBACL55B,EAAK+uB,mBAtBL,CAgLJ,QAvM8Bp+B,EAAAA,EAAAA,GAS5BnG,OAAAA,eAAWyC,EAAAA,UAAA,kBAAe,C,IAA1B,WAA4D,OAAOnE,KAAKmlC,iBAAiBzyB,KAAAA,E,gCAuClFvO,EAAAA,UAAAA,QAAP,W,YACE,IAAgB,QAAAnE,KAAK2wC,eAAa9oC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAtBA,EAAAA,MACRC,SAEJ,C,gGAAA,CAAA3F,EAAAA,UAAM2F,QAAOjG,KAAA,SACb,EAAAkvC,yBAAwB/wC,KAAK4wC,IAAAA,EAGxBzsC,EAAAA,UAAAA,yBAAP,WAGMnE,KAAK6wC,oBAAsBxtC,OAAOwb,mBACpC7e,KAAK6wC,kBAAoBxtC,OAAOwb,iBAChC7e,KAAKwG,SAASxG,KAAKiS,eAAetP,KAAM3C,KAAKiS,eAAevP,MAAAA,EAIzDyB,EAAAA,UAAAA,UAAP,SAAiBuJ,G,QACf1N,KAAK6+B,QAAUnxB,E,IAEf,IAAgB,QAAA1N,KAAK2wC,eAAa9oC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAA/B,IAAMlD,EAACkD,EAAAA,MACVlD,EAAEgf,UAAU3jB,KAAK6+B,SACjBl6B,EAAEkd,OAAAA,C,oGAIC1d,EAAAA,UAAAA,SAAP,SAAgBxB,EAAcD,G,QAE5B1C,KAAK8wC,oB,IAGL,IAAgB,QAAA9wC,KAAK2wC,eAAa3jC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAtBA,EAAAA,MACRlK,OAAO9C,KAAKiD,WAIhBjD,C,gGAAAA,CAAAA,KAAKmc,eAAe1R,MAAMuB,MAAWhM,KAAKiD,WAAWktB,YAAW,KAChEnwB,KAAKmc,eAAe1R,MAAMC,OAAY1K,KAAKiD,WAAWqtB,aAAY,MAG7DnsB,EAAAA,UAAAA,kBAAP,WACEnE,KAAKwG,SAASxG,KAAKiS,eAAetP,KAAM3C,KAAKiS,eAAevP,KAAAA,EAGvDyB,EAAAA,UAAAA,OAAP,WACEnE,KAAKgxC,eAAc,YAAK,SAAEzpC,QAAAA,GAAAA,EAGrBpD,EAAAA,UAAAA,QAAP,WACEnE,KAAKgxC,eAAc,YAAK,SAAEroB,SAAAA,GAAAA,EAGrBxkB,EAAAA,UAAAA,mBAAP,SAA0BwC,EAAqCC,EAAmCqiB,QAAAA,IAAAA,IAAAA,GAAAA,GAChGjpB,KAAKgxC,eAAc,YAAK,SAAEhoB,mBAAmBriB,EAAOC,EAAKqiB,EAAAA,IAErDjpB,KAAK6+B,QAAQ7vB,qBACfhP,KAAKmlC,iBAAiBtuB,KAAK,CAAElQ,MAAO,EAAGC,IAAK5G,KAAKiS,eAAevP,KAAO,KAIpEyB,EAAAA,UAAAA,aAAP,WACEnE,KAAKgxC,eAAc,YAAK,SAAE7uB,cAAAA,GAAAA,EAGrBhe,EAAAA,UAAAA,iBAAP,WACEnE,KAAKgxC,eAAc,YAAK,SAAE/K,kBAAAA,GAAAA,EAGrB9hC,EAAAA,UAAAA,MAAP,WACEnE,KAAKgxC,eAAc,YAAK,SAAEnvB,OAAAA,GAAAA,EAGpB1d,EAAAA,UAAAA,cAAR,SAAsB8sC,G,YACpB,IAAgB,QAAAjxC,KAAK2wC,eAAa9oC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAChCopC,EADUppC,EAAAA,M,oGASP1D,EAAAA,UAAAA,WAAP,SAAkBwC,EAAeC,G,YAC/B,IAAgB,QAAA5G,KAAK2wC,eAAa3jC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAtBA,EAAAA,MACRuzB,cAAc55B,EAAOC,E,oGAIpBzC,EAAAA,UAAAA,kBAAP,W,YACE,IAAoB,QAAAnE,KAAK2wC,eAAa7rC,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAtBA,EAAAA,MACRmrB,mB,oGAOF9rB,EAAAA,UAAAA,kBAAR,WACOnE,KAAKokB,iBAAiB0L,eAQ3B9vB,KAAKiD,WAAWy9B,gBAAkB/8B,KAAKO,MAAMlE,KAAKokB,iBAAiBpY,MAAQ3I,OAAOwb,kBAKlF7e,KAAKiD,WAAW09B,iBAAmBh9B,KAAK6P,KAAKxT,KAAKokB,iBAAiB1Z,OAASrH,OAAOwb,kBAMnF7e,KAAKiD,WAAWytB,iBAAmB/sB,KAAKO,MAAMlE,KAAKiD,WAAW09B,iBAAmB3gC,KAAKqc,gBAAgBmB,WAAWsI,YAIjH9lB,KAAKiD,WAAW49B,cAA+D,IAA/C7gC,KAAKqc,gBAAgBmB,WAAWsI,WAAmB,EAAIniB,KAAK+N,OAAO1R,KAAKiD,WAAWytB,iBAAmB1wB,KAAKiD,WAAW09B,kBAAoB,GAG1K3gC,KAAKiD,WAAWwtB,gBAAkBzwB,KAAKiD,WAAWy9B,gBAAkB/8B,KAAK+N,MAAM1R,KAAKqc,gBAAgBmB,WAAW0zB,eAI/GlxC,KAAKiD,WAAW29B,eAAiBj9B,KAAKO,MAAMlE,KAAKqc,gBAAgBmB,WAAW0zB,cAAgB,GAI5FlxC,KAAKiD,WAAWstB,mBAAqBvwB,KAAKiS,eAAevP,KAAO1C,KAAKiD,WAAWytB,iBAChF1wB,KAAKiD,WAAWmtB,kBAAoBpwB,KAAKiS,eAAetP,KAAO3C,KAAKiD,WAAWwtB,gBAO/EzwB,KAAKiD,WAAWqtB,aAAe3sB,KAAK+N,MAAM1R,KAAKiD,WAAWstB,mBAAqBltB,OAAOwb,kBACtF7e,KAAKiD,WAAWktB,YAAcxsB,KAAK+N,MAAM1R,KAAKiD,WAAWmtB,kBAAoB/sB,OAAOwb,kBAOpF7e,KAAKiD,WAAWE,iBAAmBnD,KAAKiD,WAAWqtB,aAAetwB,KAAKiS,eAAevP,KACtF1C,KAAKiD,WAAWC,gBAAkBlD,KAAKiD,WAAWktB,YAAcnwB,KAAKiS,eAAetP,KAAAA,EArMnEqK,EAAAA,CAgBhBxI,EAAAA,EAAAA,EAAAA,uBACAA,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,kBACAA,EAAAA,EAAAA,EAAAA,kBAnBQ2sC,EAAb,CAAAvjC,CAA8B/N,EAAAA,YAAjBsE,EAAAA,SAAAA,CAAAgtC,E,aCPb,SAAgBC,EAAiBC,GAI/B,OAAO,OAAUA,GAAaA,GAAc,K,6HAX9CltC,EAAAA,aAAAA,SAAgCmH,GAC9B,IAAKA,EACH,MAAM,IAAIjF,MAAM,2BAElB,OAAOiF,CAAAA,EAGTnH,EAAAA,iBAAAA,EAWAA,EAAAA,gCAAAA,SAAgDktC,GAC9C,OAAOD,EAAiBC,IAL1B,SAA2BA,GACzB,OAAQ,MAAUA,GAAaA,GAAa,IAINC,CALxC,CAK0DD,EAAAA,CAAAA,E,o+BClB1D,cAEA3sC,EAAAA,EAAAA,MASAC,EAAAA,SAAAA,GAGE,WACEsgC,EACAh5B,EACAyB,EACAw3B,EACgBjL,EACCxV,EACG4gB,GAPtB,IAAA3gC,EASEvC,EAAAA,KAAAA,KAAM8iC,EAAW,YAAah5B,GAAAA,EAAcyB,EAAQw3B,EAAYjL,EAAexV,EAAgB4gB,IAAkB,K,OACjH3gC,EAAK6sC,cAAL,CAoGJ,QAjH0C1pC,EAAAA,EAAAA,GAgBhC1D,EAAAA,UAAAA,YAAR,WACEnE,KAAKslC,OAAS,CACZ3+B,WAAO,EACPC,SAAK,EACLqiB,sBAAkB,EAClB5e,WAAO,EAAA0C,EAIJ5I,EAAAA,UAAAA,OAAP,SAAcu7B,GACZv9B,EAAAA,UAAMW,OAAMjB,KAAA,KAAC69B,GAEb1/B,KAAKuxC,aAAAA,EAGAptC,EAAAA,UAAAA,MAAP,WACMnE,KAAKslC,OAAO3+B,OAAS3G,KAAKslC,OAAO1+B,MACnC5G,KAAKuxC,cACLvxC,KAAK+/B,YAAAA,EAIF57B,EAAAA,UAAAA,mBAAP,SAA0BwC,EAAqCC,EAAmCqiB,GAIhG,GAHA9mB,EAAAA,UAAM6mB,mBAAkBnnB,KAAA,KAAC8E,EAAOC,EAAKqiB,GAGhCjpB,KAAKwxC,gBAAgB7qC,EAAOC,EAAKqiB,EAAkBjpB,KAAKiS,eAAe7J,OAAOiC,OAQnF,GAHArK,KAAK+/B,YAGAp5B,GAAUC,EAAf,CAMA,IAAM6qC,EAAmB9qC,EAAM,GAAK3G,KAAKiS,eAAe7J,OAAOiC,MACzDqnC,EAAiB9qC,EAAI,GAAK5G,KAAKiS,eAAe7J,OAAOiC,MACrDsnC,EAAyBhuC,KAAKC,IAAI6tC,EAAkB,GACpDG,EAAuBjuC,KAAKmP,IAAI4+B,EAAgB1xC,KAAKiS,eAAevP,KAAO,GAGjF,GAAIivC,GAA0B3xC,KAAKiS,eAAevP,MAAQkvC,EAAuB,EAC/E5xC,KAAKslC,OAAOj7B,MAAQrK,KAAKiS,eAAe7J,OAAOiC,UADjD,CAOA,GAFArK,KAAKoO,KAAK0C,UAAY9Q,KAAK6+B,QAAQhwB,qBAAqBtB,IAEpD0b,EAAkB,CACpB,IAAM4R,EAAWl0B,EAAM,GACjBqF,EAAQpF,EAAI,GAAKi0B,EACjBnwB,EAASknC,EAAuBD,EAAyB,EAC/D3xC,KAAKmnC,WAAWtM,EAAU8W,EAAwB3lC,EAAOtB,EAAAA,KACpD,CAECmwB,EAAW4W,IAAqBE,EAAyBhrC,EAAM,GAAK,EAA1E,IACMkrC,EAAiBF,IAA2BD,EAAiB9qC,EAAI,GAAK5G,KAAKiS,eAAetP,KAChG3C,KAAKmnC,WAAWtM,EAAU8W,EAAwBE,EAAiBhX,EAAU,GAG7E,IAAMiX,EAAkBnuC,KAAKC,IAAIguC,EAAuBD,EAAyB,EAAG,GAIpF,GAHA3xC,KAAKmnC,WAAW,EAAGwK,EAAyB,EAAG3xC,KAAKiS,eAAetP,KAAMmvC,GAGrEH,IAA2BC,EAAsB,CAEnD,IAAM9W,EAAS4W,IAAmBE,EAAuBhrC,EAAI,GAAK5G,KAAKiS,eAAetP,KACtF3C,KAAKmnC,WAAW,EAAGyK,EAAsB9W,EAAQ,GAKrD96B,CAAAA,KAAKslC,OAAO3+B,MAAQ,CAACA,EAAM,GAAIA,EAAM,IACrC3G,KAAKslC,OAAO1+B,IAAM,CAACA,EAAI,GAAIA,EAAI,IAC/B5G,KAAKslC,OAAOrc,iBAAmBA,EAC/BjpB,KAAKslC,OAAOj7B,MAAQrK,KAAKiS,eAAe7J,OAAOiC,KAAAA,CAAAA,MA7C7CrK,KAAKuxC,aAAAA,EAgDDptC,EAAAA,UAAAA,gBAAR,SAAwBwC,EAAqCC,EAAmCqiB,EAA2B5e,GACzH,OAAQrK,KAAK+xC,qBAAqBprC,EAAO3G,KAAKslC,OAAO3+B,SAClD3G,KAAK+xC,qBAAqBnrC,EAAK5G,KAAKslC,OAAO1+B,MAC5CqiB,IAAqBjpB,KAAKslC,OAAOrc,kBACjC5e,IAAUrK,KAAKslC,OAAOj7B,KAAAA,EAGlBlG,EAAAA,UAAAA,qBAAR,SAA6B6tC,EAAsCC,GACjE,SAAKD,IAAWC,IAITD,EAAO,KAAOC,EAAO,IAAMD,EAAO,KAAOC,EAAO,IA/G1BjlC,EAAAA,CAQ5BxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,qBAVQ0tC,EAAb,CAAAvtC,CAA0CF,EAAAA,iBAA7BN,EAAAA,qBAAAA,CAAA+tC,E,gyCCVb,cACAvtC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KAEAhF,EAAAA,EAAAA,KACAqX,EAAAA,EAAAA,MACAuC,EAAAA,EAAAA,MACAiG,EAAAA,EAAAA,MASA/R,EAAAA,SAAAA,GAOE,WACEs3B,EACAh5B,EACAyB,EACA+D,EACAyzB,EACgBjL,EACCxV,EACyB2D,EACtBid,GATtB,MAWEljC,EAAAA,KAAAA,KAAM8iC,EAAW,OAAQh5B,EAAQwF,EAAO/D,EAAQw3B,EAAYjL,EAAexV,EAAgB4gB,IAAkB,K,OAHnExgC,EAAAA,wBAAAA,EAbpCA,EAAAA,gBAA0B,EAC1BA,EAAAA,eAAyB,GACzBA,EAAAA,uBAAqD,CAAC,EACtDA,EAAAA,UAAY,IAAIhF,EAAAA,SActBgF,EAAKygC,OAAS,IAAI5gC,EAAAA,UAJwB,CAgT9C,QA/TqCmD,EAAAA,EAAAA,GAsB5B1D,EAAAA,UAAAA,OAAP,SAAcu7B,GACZv9B,EAAAA,UAAMW,OAAMjB,KAAA,KAAC69B,GAGb,IAAMyS,EAAenyC,KAAKkhC,UAAAA,GAAS,GAC/BlhC,KAAKoyC,kBAAoB1S,EAAIgB,iBAAmB1gC,KAAKqyC,iBAAmBF,IAC1EnyC,KAAKoyC,gBAAkB1S,EAAIgB,gBAC3B1gC,KAAKqyC,eAAiBF,EACtBnyC,KAAKsyC,uBAAyB,CAAC,GAGjCtyC,KAAKslC,OAAOziC,QACZ7C,KAAKslC,OAAOxiC,OAAO9C,KAAKiS,eAAetP,KAAM3C,KAAKiS,eAAevP,KAAAA,EAG5DyB,EAAAA,UAAAA,MAAP,WACEnE,KAAKslC,OAAOziC,QACZ7C,KAAK+/B,WAAAA,EAGC57B,EAAAA,UAAAA,aAAR,SACEouC,EACAC,EACAt0B,GAMA,IAAK,IAAIjI,EAAIs8B,EAAUt8B,GAAKu8B,EAASv8B,IAInC,IAHA,IAAMyU,EAAMzU,EAAIjW,KAAKiS,eAAe7J,OAAOiC,MACrCqL,EAAO1V,KAAKiS,eAAe7J,OAAOC,MAAM5I,IAAIirB,GAC5C+nB,EAAezyC,KAAKooB,wBAAwBsqB,oBAAoBhoB,GAC7D1U,EAAI,EAAGA,EAAIhW,KAAKiS,eAAetP,KAAMqT,IAAK,CACjDN,EAAMixB,SAAS3wB,EAAGhW,KAAK2yC,WACvB,IAAI3R,EAAOhhC,KAAK2yC,UAGZC,GAAAA,EACAC,EAAY78B,EAIhB,GAAwB,IAApBgrB,EAAKtb,WAAT,CAOA,GAAI+sB,EAAa3sC,OAAS,GAAKkQ,IAAMy8B,EAAa,GAAG,GAAI,CACvDG,GAAAA,EACA,IAAM/+B,EAAQ4+B,EAAa9pC,QAI3Bq4B,EAAO,IAAIthB,EAAAA,eACT1f,KAAK2yC,UACLj9B,EAAMo9B,mBAAAA,EAAwBj/B,EAAM,GAAIA,EAAM,IAC9CA,EAAM,GAAKA,EAAM,IAInBg/B,EAAYh/B,EAAM,GAAK,GAOpB++B,GAAY5yC,KAAK+yC,eAAe/R,IAQ/B6R,EAAYn9B,EAAM5P,OAAS,GAAK4P,EAAMs9B,aAAaH,EAAY,KAAOhuC,EAAAA,iBAExEm8B,EAAKjtB,UAAW,SAChBitB,EAAKjtB,SAAW,GAAK,IASzBmK,EACE8iB,EACAhrB,EACAC,GAGFD,EAAI68B,CAAAA,CAAAA,CAAAA,EASF1uC,EAAAA,UAAAA,gBAAR,SAAwBouC,EAAkBC,GAA1C,WACQtkC,EAAMlO,KAAKoO,KACXzL,EAAO3C,KAAKiS,eAAetP,KAC7BmX,EAAiB,EACjBigB,EAAiB,EACjBkZ,EAA+B,KAEnC/kC,EAAI60B,OAEJ/iC,KAAKkzC,aAAaX,EAAUC,GAAS,SAACxR,EAAMhrB,EAAGC,G,QAGzCk9B,EAAgB,KAEhBnS,EAAKe,YAELoR,EADEnS,EAAKkB,cACShgC,EAAK28B,QAAQpwB,WAAWlB,IAC/ByzB,EAAKY,UACE,OAAOh9B,EAAAA,cAAcwe,WAAW4d,EAAKmB,cAAcc,KAAK,KAAI,IAE5D/gC,EAAK28B,QAAQ5vB,KAAK+xB,EAAKmB,cAAc50B,IAE9CyzB,EAAKa,UACdsR,EAAgB,OAAOvuC,EAAAA,cAAcwe,WAAW4d,EAAKiB,cAAcgB,KAAK,KAAI,IACnEjC,EAAKoS,gBACdD,EAAgBjxC,EAAK28B,QAAQ5vB,KAAK+xB,EAAKiB,cAAc10B,KAKvD,IAAIk2B,GAAAA,E,IACJ,IAAgB,UAAKriB,mBAAmBshB,qBAAqB1sB,EAAG9T,EAAK+P,eAAe7J,OAAOiC,MAAQ4L,IAAEtI,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAlG,IAAM8L,EAAC9L,EAAAA,MACc,QAApB8L,EAAE1H,QAAQ2xB,OAAmBD,IAG7BhqB,EAAEkpB,qBACJwQ,EAAgB15B,EAAEkpB,mBAAmBp1B,KAEvCk2B,EAA4B,QAApBhqB,EAAE1H,QAAQ2xB,MAAAA,CAGE,C,gGAAA,QAAlBuP,IAGFn5B,EAAS9D,EACT+jB,EAAS9jB,GAGPA,IAAM8jB,GAER7rB,EAAI4C,UAAYmiC,GAAiB,GACjC/wC,EAAKilC,WAAWrtB,EAAQigB,EAAQp3B,EAAOmX,EAAQ,GAC/CA,EAAS9D,EACT+jB,EAAS9jB,GACAg9B,IAAkBE,IAE3BjlC,EAAI4C,UAAYmiC,GAAiB,GACjC/wC,EAAKilC,WAAWrtB,EAAQigB,EAAQ/jB,EAAI8D,EAAQ,GAC5CA,EAAS9D,EACT+jB,EAAS9jB,GAGXg9B,EAAgBE,CAAAA,IAII,OAAlBF,IACF/kC,EAAI4C,UAAYmiC,EAChBjzC,KAAKmnC,WAAWrtB,EAAQigB,EAAQp3B,EAAOmX,EAAQ,IAGjD5L,EAAIi1B,SAAAA,EAGEh/B,EAAAA,UAAAA,gBAAR,SAAwBouC,EAAkBC,GAA1C,WACExyC,KAAKkzC,aAAaX,EAAUC,GAAS,SAACxR,EAAMhrB,EAAGC,GAC7C,IAAI+qB,EAAKqS,gBAGTnxC,EAAKoxC,WAAWtS,EAAMhrB,EAAGC,GACrB+qB,EAAKuS,eAAiBvS,EAAKwS,mBAAmB,CAGhD,GAFAtxC,EAAKkM,KAAK20B,OAEN/B,EAAKe,YACP,GAAIf,EAAKgB,cACP9/B,EAAKkM,KAAK0C,UAAY5O,EAAK28B,QAAQnwB,WAAWnB,SACzC,GAAIyzB,EAAKa,UACd3/B,EAAKkM,KAAK0C,UAAY,OAAOlM,EAAAA,cAAcwe,WAAW4d,EAAKiB,cAAcgB,KAAK,KAAI,QAC7E,CACL,IAAIp2B,EAAKm0B,EAAKiB,aACV//B,EAAKma,gBAAgBmB,WAAW4kB,4BAA8BpB,EAAKqB,UAAYx1B,EAAK,IACtFA,GAAM,GAER3K,EAAKkM,KAAK0C,UAAY5O,EAAK28B,QAAQ5vB,KAAKpC,GAAIU,GAAAA,MAG9C,GAAIyzB,EAAKkB,cACPhgC,EAAKkM,KAAK0C,UAAY5O,EAAK28B,QAAQpwB,WAAWlB,SACzC,GAAIyzB,EAAKY,UACd1/B,EAAKkM,KAAK0C,UAAY,OAAOlM,EAAAA,cAAcwe,WAAW4d,EAAKmB,cAAcc,KAAK,KAAI,QAC7E,CACL,IAAIn2B,EAAKk0B,EAAKmB,aACVjgC,EAAKma,gBAAgBmB,WAAW4kB,4BAA8BpB,EAAKqB,UAAYv1B,EAAK,IACtFA,GAAM,GAER5K,EAAKkM,KAAK0C,UAAY5O,EAAK28B,QAAQ5vB,KAAKnC,GAAIS,GAI5CyzB,CAAAA,EAAKwS,mBACPtxC,EAAKuxC,uBAAuBz9B,EAAGC,EAAG+qB,EAAKtb,YAErCsb,EAAKuS,eACPrxC,EAAKmlC,uBAAuBrxB,EAAGC,EAAG+qB,EAAKtb,YAEzCxjB,EAAKkM,KAAK+0B,SAAAA,CAAAA,GAAAA,EAKTh/B,EAAAA,UAAAA,cAAP,SAAqBouC,EAAkBC,GAEJ,IAA7BxyC,KAAKslC,OAAO6K,MAAMrqC,SAIlB9F,KAAK6/B,YACP7/B,KAAK6/B,WAAW6T,aAGlB1zC,KAAKgnC,YAAY,EAAGuL,EAAUvyC,KAAKiS,eAAetP,KAAM6vC,EAAUD,EAAW,GAC7EvyC,KAAK2zC,gBAAgBpB,EAAUC,GAC/BxyC,KAAK4zC,gBAAgBrB,EAAUC,GAAAA,EAG1BruC,EAAAA,UAAAA,iBAAP,WACEnE,KAAK6zC,iBAAiB7zC,KAAKqc,gBAAgBmB,WAAWxP,kBAAAA,EAMhD7J,EAAAA,UAAAA,eAAR,SAAuB68B,GAGrB,GAAwB,IAApBA,EAAKtb,WACP,OAAO,EAIT,GAAIsb,EAAKsB,UAAY,IACnB,OAAO,EAGT,IAAM/C,EAAQyB,EAAKQ,WAGnB,GAAIxhC,KAAKsyC,uBAAuBwB,eAAevU,GAC7C,OAAOv/B,KAAKsyC,uBAAuB/S,GAIrCv/B,KAAKoO,KAAK20B,OACV/iC,KAAKoO,KAAK6yB,KAAOjhC,KAAKqyC,eAKtB,IAAM0B,EAAWpwC,KAAKO,MAAMlE,KAAKoO,KAAK4lC,YAAYzU,GAAOvzB,OAAShM,KAAKoyC,gBAOvE,OAJApyC,KAAKoO,KAAK+0B,UAGVnjC,KAAKsyC,uBAAuB/S,GAASwU,EAC9BA,CAAAA,EA9SiB/mC,EAAAA,CAavBxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,yBACAA,EAAAA,EAAAA,EAAAA,qBAhBQyvC,EAAb,CAAAtmC,CAAqChJ,EAAAA,iBAAxBR,EAAAA,gBAAAA,CAAA8vC,E,qFChBb,0BAAA9xC,IACU,KAAA+xC,YAAA,CAgDV,QA9CS/xC,EAAAA,UAAAA,QAAP,aAMOA,EAAAA,UAAAA,OAAP,WACOnC,KAAKk0C,aACRl0C,KAAKm0C,YACLn0C,KAAKk0C,YAAAA,EAAa,EAQd/xC,EAAAA,UAAAA,UAAR,aAEOA,EAAAA,UAAAA,MAAP,aASOA,EAAAA,UAAAA,WAAP,aAkBFA,CAjDA,IAAsBgC,EAAAA,cAAAA,CAAAA,E,oHCHtB,IAAAW,EAAA,QAEA+C,EAAAA,EAAAA,MAaMusC,EAAyC,GAM/CjwC,EAAAA,iBAAAA,SACE4N,EACAmzB,EACAx3B,EACAgzB,EACAC,GAKA,IAHA,IAAM0T,GAAAA,EAAY,EAAAC,gBAAe5T,EAAiBC,EAAkB5uB,EAASrE,GAGpE5I,EAAI,EAAGA,EAAIsvC,EAAetuC,OAAQhB,IAAK,CAC9C,IACMyvC,GADAC,EAAQJ,EAAetvC,IACF2vC,QAAQn/B,QAAQ4vB,GAC3C,GAAIqP,GAAgB,EAAG,CACrB,IAAI,IAAAG,cAAaF,EAAMG,OAAQN,GAC7B,OAAOG,EAAMI,MAGc,IAAzBJ,EAAMC,QAAQ3uC,QAChB0uC,EAAMI,MAAM9sC,UACZssC,EAAev/B,OAAO/P,EAAG,IAEzB0vC,EAAMC,QAAQ5/B,OAAO0/B,EAAc,GAErC,MAKJ,KAASzvC,EAAI,EAAGA,EAAIsvC,EAAetuC,OAAQhB,IAAK,CAC9C,IAAM0vC,EAAQJ,EAAetvC,GAC7B,IAAI,IAAA4vC,cAAaF,EAAMG,OAAQN,GAG7B,OADAG,EAAMC,QAAQ1rC,KAAKm8B,GACZsP,EAAMI,KAIjB,KAAMC,EAAiC,CACrCD,MAAO,IAAI/sC,EAAAA,iBACT7C,SACAqvC,GAEFM,OAAQN,EACRI,QAAS,CAACvP,IAGZ,OADAkP,EAAerrC,KAAK8rC,GACbA,EAASD,KAAAA,EAMlBzwC,EAAAA,wBAAAA,SAAwC+gC,GACtC,IAAK,IAAIpgC,EAAI,EAAGA,EAAIsvC,EAAetuC,OAAQhB,IAAK,CAC9C,IAAMmV,EAAQm6B,EAAetvC,GAAG2vC,QAAQn/B,QAAQ4vB,GAChD,IAAe,IAAXjrB,EAAc,CACyB,IAArCm6B,EAAetvC,GAAG2vC,QAAQ3uC,QAE5BsuC,EAAetvC,GAAG8vC,MAAM9sC,UACxBssC,EAAev/B,OAAO/P,EAAG,IAGzBsvC,EAAetvC,GAAG2vC,QAAQ5/B,OAAOoF,EAAO,GAE1C,QAjEN,E,oHCpBA,IAAAnV,EAAA,OAIAX,EAAAA,eAAAA,SAA+Bu8B,EAAyBC,EAA0B5uB,EAA2BrE,GAE3G,IAAMonC,EAAiC,CACrCrmC,WAAYf,EAAOe,WACnBC,WAAYhB,EAAOgB,WACnBC,YAAQ,EACRC,kBAAc,EACdW,eAAW,EACXN,KAAMvB,EAAOuB,KAAKC,SAEpB,MAAO,CACL2P,iBAAkBxb,OAAOwb,iBACzB6hB,gBAAev+B,EACfw+B,iBAAgBx8B,EAChBg1B,WAAYpnB,EAAQonB,WACpBC,SAAUrnB,EAAQqnB,SAClBmK,WAAYxxB,EAAQwxB,WACpBD,eAAgBvxB,EAAQuxB,eACxBt1B,kBAAmB+D,EAAQ/D,kBAC3BN,OAAQonC,EAAAA,EAIZ3wC,EAAAA,aAAAA,SAA6BM,EAAqBoJ,GAChD,IAAK,IAAI/I,EAAI,EAAGA,EAAIL,EAAEiJ,OAAOuB,KAAKnJ,OAAQhB,IACxC,GAAIL,EAAEiJ,OAAOuB,KAAKnK,GAAG0I,OAASK,EAAEH,OAAOuB,KAAKnK,GAAG0I,KAC7C,OAAO,EAGX,OAAO/I,EAAEoa,mBAAqBhR,EAAEgR,kBAC5Bpa,EAAE00B,aAAetrB,EAAEsrB,YACnB10B,EAAE20B,WAAavrB,EAAEurB,UACjB30B,EAAE8+B,aAAe11B,EAAE01B,YACnB9+B,EAAE6+B,iBAAmBz1B,EAAEy1B,gBACvB7+B,EAAEuJ,oBAAsBH,EAAEG,mBAC1BvJ,EAAEi8B,kBAAoB7yB,EAAE6yB,iBACxBj8B,EAAEk8B,mBAAqB9yB,EAAE8yB,kBACzBl8B,EAAEiJ,OAAOe,aAAeZ,EAAEH,OAAOe,YACjChK,EAAEiJ,OAAOgB,aAAeb,EAAEH,OAAOgB,UAAAA,EAGvCvK,EAAAA,WAAAA,SAA2B4wC,GACzB,OAAOA,EAAYjwC,EAAAA,aAAAkwC,CA1CrB,E,wJCLA,IAAAlwC,EAAA,QAEaX,EAAAA,uBAAyB,IACzBA,EAAAA,YAAc,GAIdA,EAAAA,cAAoCW,EAAAA,WAAaA,EAAAA,aAAe,SAAW,cAE3EX,EAAAA,wBAA0B,CAP1B,E,kmBCFb,cAEAK,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAIMowC,EAAgB,KAChBC,EAAiB,KAEjBC,EAAoB,CACxB5nC,IAAK,mBACLC,KAAM,GAuBR,SAAgB4nC,EAAiBC,GAU/B,OAAOA,EAAM7V,MAAQ,GAAK6V,EAAMxoC,IAAM,GAAKwoC,EAAMvoC,IAAM,GAAKuoC,EAAM5V,KAAO,EAAI,IAAM4V,EAAM3V,IAAM,EAAI,IAAM2V,EAAM1V,OAAS,EAAI,EAV9H,CAAAx7B,EAAAA,iBAAAA,EAaA,eAAAhC,GA2BE,WAAY6C,EAA4BswC,GAAxC,MACEnzC,EAAAA,KAAAA,OAAO,KAD+B2C,EAAAA,QAAAA,EAXhCA,EAAAA,kBAA4B,EAG5BA,EAAAA,uBAA6C,GAG7CA,EAAAA,qBAAsC,KAGtCA,EAAAA,QAA8B,KAIpCA,EAAKywC,aAAevwC,EAASC,cAAc,UAC3CH,EAAKywC,aAAavpC,MAAQipC,EAC1BnwC,EAAKywC,aAAa7qC,OAASwqC,EAI3BpwC,EAAK0wC,WAAAA,EAAY,EAAA1V,cAAah7B,EAAKywC,aAAapnC,WAAW,KAAM,CAAEsD,OAAO,KAE1E,IAAMg9B,EAAYzpC,EAASC,cAAc,UACzCwpC,EAAUziC,MAAQlH,EAAKwwC,QAAQ5U,gBAC/B+N,EAAU/jC,OAAS5F,EAAKwwC,QAAQ3U,iBAChC77B,EAAK2wC,SAAAA,EAAU,EAAA3V,cAAa2O,EAAUtgC,WAAW,KAAM,CAAEsD,MAAO3M,EAAKwwC,QAAQtnC,qBAE7ElJ,EAAK4yB,OAAS/zB,KAAKO,MAAM+wC,EAAgBnwC,EAAKwwC,QAAQ5U,iBACtD57B,EAAK4wC,QAAU/xC,KAAKO,MAAMgxC,EAAiBpwC,EAAKwwC,QAAQ3U,kBACxD,IAAMgV,EAAW7wC,EAAK4yB,OAAS5yB,EAAK4wC,Q,OACpC5wC,EAAK8wC,UAAY,IAAIlxC,EAAAA,OAAOixC,GAC5B7wC,EAAK8wC,UAAUC,SAASF,GADxB,CAsQJ,QAnTsC9tC,EAAAA,EAAAA,GAoD7B1D,EAAAA,UAAAA,QAAP,WACoC,OAA9BnE,KAAK81C,uBACPzyC,OAAO4P,aAAajT,KAAK81C,sBACzB91C,KAAK81C,qBAAuB,OAIzB3xC,EAAAA,UAAAA,WAAP,WACEnE,KAAK+1C,kBAAoB,GAGpB5xC,EAAAA,UAAAA,MAAP,WACE,GAAInE,KAAK41C,UAAUt8B,KAAO,EAAG,CAC3B,IAAMq8B,EAAW31C,KAAK03B,OAAS13B,KAAK01C,QACpC11C,KAAK41C,UAAY,IAAIlxC,EAAAA,OAAOixC,GAC5B31C,KAAK41C,UAAUC,SAASF,EAE1B31C,CAAAA,KAAKw1C,UAAU3d,UAAU,EAAG,EAAGod,EAAeC,GAC9Cl1C,KAAKy1C,QAAQ5d,UAAU,EAAG,EAAG73B,KAAKs1C,QAAQ5U,gBAAiB1gC,KAAKs1C,QAAQ3U,iBAAAA,EAGnEx8B,EAAAA,UAAAA,KAAP,SACE+J,EACAmnC,EACAr/B,EACAC,GAGA,GAAmB,KAAfo/B,EAAM7V,KACR,OAAO,EAIT,IAAKx/B,KAAKg2C,UAAUX,GAClB,OAAO,EAGT,IAAMY,EAAWb,EAAiBC,GAC5Ba,EAAal2C,KAAK41C,UAAUn2C,IAAIw2C,GACtC,GAAIC,MAAAA,EAEF,OADAl2C,KAAKm2C,eAAejoC,EAAKgoC,EAAYlgC,EAAGC,IAAAA,EAG1C,GAAIjW,KAAK+1C,kBA1HkB,IA0H0B,CACnD,IAAI97B,EAEFA,EADEja,KAAK41C,UAAUt8B,KAAOtZ,KAAK41C,UAAUD,SAC/B31C,KAAK41C,UAAUt8B,KAGftZ,KAAK41C,UAAUQ,OAAQn8B,MAEjC,IAAMxV,EAAazE,KAAKq2C,aAAahB,EAAOp7B,GAG5C,OAFAja,KAAK41C,UAAUj2C,IAAIs2C,EAAUxxC,GAC7BzE,KAAKm2C,eAAejoC,EAAKzJ,EAAYuR,EAAGC,IAAAA,CAG1C,QAAO,GAGD9R,EAAAA,UAAAA,UAAR,SAAkBkxC,GAQhB,OAAOA,EAAM7V,KAAO,KAGdr7B,EAAAA,UAAAA,eAAR,SAAuB8V,GACrB,OAAQA,EAAQja,KAAK03B,OAAU13B,KAAKs1C,QAAQ5U,eAAAA,EAGtCv8B,EAAAA,UAAAA,eAAR,SAAuB8V,GACrB,OAAOtW,KAAKO,MAAM+V,EAAQja,KAAK03B,QAAU13B,KAAKs1C,QAAQ3U,gBAAAA,EAGhDx8B,EAAAA,UAAAA,eAAR,SACE+J,EACAgoC,EACAlgC,EACAC,GAGA,IAAIigC,EAAWI,QAAf,CAGA,IAAMC,EAASv2C,KAAKw2C,eAAeN,EAAWj8B,OACxCw8B,EAASz2C,KAAK02C,eAAeR,EAAWj8B,OAC9C/L,EAAIyoC,UACFT,EAAWU,SAAW52C,KAAK62C,QAAW72C,KAAKu1C,aAC3CgB,EACAE,EACAz2C,KAAKs1C,QAAQ5U,gBACb1gC,KAAKs1C,QAAQ3U,iBACb3qB,EACAC,EACAjW,KAAKs1C,QAAQ5U,gBACb1gC,KAAKs1C,QAAQ3U,iBAAAA,CAAAA,EAITx8B,EAAAA,UAAAA,uBAAR,SAA+B2yC,GAC7B,OAAIA,EAAM92C,KAAKs1C,QAAQ5nC,OAAOuB,KAAKnJ,OAC1B9F,KAAKs1C,QAAQ5nC,OAAOuB,KAAK6nC,GAE3BryC,EAAAA,oBAAoBqyC,EAAAA,EAGrB3yC,EAAAA,UAAAA,oBAAR,SAA4BkxC,GAC1B,OAAIr1C,KAAKs1C,QAAQtnC,kBAIRmnC,EAELE,EAAMxoC,KAAOG,EAAAA,uBACRhN,KAAKs1C,QAAQ5nC,OAAOe,WAEzB4mC,EAAMxoC,GAAK,IACN7M,KAAK+2C,uBAAuB1B,EAAMxoC,IAEpC7M,KAAKs1C,QAAQ5nC,OAAOgB,UAAAA,EAGrBvK,EAAAA,UAAAA,oBAAR,SAA4BkxC,GAC1B,OAAIA,EAAMvoC,KAAOE,EAAAA,uBACRnI,EAAAA,MAAMm+B,OAAOhjC,KAAKs1C,QAAQ5nC,OAAOgB,YAEtC2mC,EAAMvoC,GAAK,IAEN9M,KAAK+2C,uBAAuB1B,EAAMvoC,IAEpC9M,KAAKs1C,QAAQ5nC,OAAOe,UAAAA,EAKrBtK,EAAAA,UAAAA,aAAR,SAAqBkxC,EAAyBp7B,GAC5Cja,KAAK+1C,oBAEL/1C,KAAKy1C,QAAQ1S,OAGb,IAAMhR,EAAkB/xB,KAAKg3C,oBAAoB3B,GAGjDr1C,KAAKy1C,QAAQpnC,yBAA2B,OACxCrO,KAAKy1C,QAAQ3kC,UAAYihB,EAAgBxkB,IACzCvN,KAAKy1C,QAAQxkC,SAAS,EAAG,EAAGjR,KAAKs1C,QAAQ5U,gBAAiB1gC,KAAKs1C,QAAQ3U,kBACvE3gC,KAAKy1C,QAAQpnC,yBAA2B,cAGxC,IAAMk1B,EAAa8R,EAAM5V,KAAOz/B,KAAKs1C,QAAQhS,eAAiBtjC,KAAKs1C,QAAQ/R,WACrE0T,EAAY5B,EAAM1V,OAAS,SAAW,GAC5C3/B,KAAKy1C,QAAQxU,KACRgW,EAAS,IAAI1T,EAAU,IAAIvjC,KAAKs1C,QAAQlc,SAAWp5B,KAAKs1C,QAAQz2B,iBAAgB,MAAM7e,KAAKs1C,QAAQnc,WACxGn5B,KAAKy1C,QAAQtU,aAAen0B,EAAAA,cAE5BhN,KAAKy1C,QAAQ3kC,UAAY9Q,KAAKk3C,oBAAoB7B,GAAO9nC,IAGrD8nC,EAAM3V,MACR1/B,KAAKy1C,QAAQvS,YAAcl2B,EAAAA,aAG7BhN,KAAKy1C,QAAQhU,SAAS4T,EAAM9V,MAAO,EAAGv/B,KAAKs1C,QAAQ3U,kBAInD,IAAIgO,EAAY3uC,KAAKy1C,QAAQtkC,aAC3B,EAAG,EAAGnR,KAAKs1C,QAAQ5U,gBAAiB1gC,KAAKs1C,QAAQ3U,kBAE/C2V,GAAAA,EAOJ,GANKt2C,KAAKs1C,QAAQtnC,oBAChBsoC,EAAUa,EAAWxI,EAAW5c,IAK9BukB,GAA2B,MAAhBjB,EAAM9V,QAAkBv/B,KAAKs1C,QAAQtnC,kBAClD,IAAK,IAAIopC,EAAS,EAAGA,GAAU,IAE7Bp3C,KAAKy1C,QAAQhU,SAAS4T,EAAM9V,MAAO,EAAGv/B,KAAKs1C,QAAQ3U,iBAAmByW,GAOtEd,EAAUa,EAHVxI,EAAY3uC,KAAKy1C,QAAQtkC,aACvB,EAAG,EAAGnR,KAAKs1C,QAAQ5U,gBAAiB1gC,KAAKs1C,QAAQ3U,kBAEnB5O,IATAqlB,KAgBpCp3C,KAAKy1C,QAAQtS,UAGb,IAAMntB,EAAIhW,KAAKw2C,eAAev8B,GACxBhE,EAAIjW,KAAK02C,eAAez8B,GAE9Bja,KAAKw1C,UAAUzG,aAAaJ,EAAW34B,EAAGC,GAG1C,IAAMigC,EAAa,CACjBj8B,MAAK9V,EACLmyC,QAAO7xC,EACPmyC,UAAU,GAIZ,OAFA52C,KAAKq3C,kBAAkBnB,GAEhBA,CAAAA,EAGD/xC,EAAAA,UAAAA,kBAAR,SAA0B+xC,GAA1B,aAKQ,sBAAuB7yC,SAAWsB,EAAAA,WAAaA,EAAAA,WAKrD3E,KAAKs3C,uBAAuBvuC,KAAKmtC,GAGC,OAA9Bl2C,KAAK81C,uBAIT91C,KAAK81C,qBAAuBzyC,OAAOyG,YAAW,WAAM,OAAA3F,EAAKozC,iBAAAA,GAnT3B,QAsTxBpzC,EAAAA,UAAAA,gBAAR,sBACQqzC,EAAuBx3C,KAAKs3C,uBAClCt3C,KAAKs3C,uBAAyB,GAC9Bj0C,OAAOo0C,kBAAkBz3C,KAAKu1C,cAAcmC,MAAK,YAE/Cv1C,EAAK00C,QAAUc,EAIf,IAAK,IAAI7yC,EAAI,EAAGA,EAAI0yC,EAAqB1xC,OAAQhB,IACjC0yC,EAAqB1yC,GAG7B8xC,UAAAA,CAAW,IAGrB52C,KAAK81C,qBAAuB,MAEhC3xC,CAnTA,EAAsCK,EAAAA,eAAzBL,EAAAA,iBAAAA,EAuTb,eAAAhC,GACE,WAAY6C,EAAoB2vC,G,OAC9BxyC,EAAAA,KAAAA,OAAO,IAWX,QAbmC0F,EAAAA,EAAAA,GAK1B1D,EAAAA,UAAAA,KAAP,SACE+J,EACAmnC,EACAr/B,EACAC,GAEA,OAAO,GAEX9R,CAbA,EAAmCK,EAAAA,eAmBnC,SAAS2yC,EAAWxI,EAAsBlrB,GAKxC,IAJA,IAAI6yB,GAAAA,EACEp0C,EAAIuhB,EAAMjW,OAAS,GACnBI,EAAI6V,EAAMjW,OAAS,GAAK,IACxBK,EAAI4V,EAAMjW,OAAS,EAAI,IACpB4pC,EAAS,EAAGA,EAASzI,EAAUz9B,KAAKpL,OAAQsxC,GAAU,EACzDzI,EAAUz9B,KAAKkmC,KAAYl1C,GAC3BysC,EAAUz9B,KAAKkmC,EAAS,KAAOxpC,GAC/B+gC,EAAUz9B,KAAKkmC,EAAS,KAAOvpC,EACjC8gC,EAAUz9B,KAAKkmC,EAAS,GAAK,EAE7Bd,GAAAA,EAGJ,OAAOA,CAjCI,CAAAnyC,EAAAA,cAAAA,CAAAyzC,E,8ECrWb,iBAOE,WAAmBjC,GAAA,KAAAA,SAAA,EANX,KAAAkC,KAA8C,CAAC,EAC/C,KAAAC,MAAmC,KACnC,KAAAC,MAAmC,KACnC,KAAAC,UAAkC,GACnC,KAAA1+B,KAAe,CAsHxB,QAlHUnX,EAAAA,UAAAA,YAAR,SAAoByP,GAClB,IAAMqmC,EAAOrmC,EAAKqmC,KACZtkC,EAAO/B,EAAK+B,KACd/B,IAAS5R,KAAK83C,QAChB93C,KAAK83C,MAAQnkC,GAEX/B,IAAS5R,KAAK+3C,QAChB/3C,KAAK+3C,MAAQE,GAEF,OAATA,IACFA,EAAKtkC,KAAOA,GAED,OAATA,IACFA,EAAKskC,KAAOA,EAAAA,EAIR91C,EAAAA,UAAAA,YAAR,SAAoByP,GAClB,IAAMsmC,EAAOl4C,KAAK+3C,MACL,OAATG,IACFA,EAAKvkC,KAAO/B,GAEdA,EAAKqmC,KAAOC,EACZtmC,EAAK+B,KAAO,KACZ3T,KAAK+3C,MAAQnmC,EACM,OAAf5R,KAAK83C,QACP93C,KAAK83C,MAAQlmC,EAAAA,EAWVzP,EAAAA,UAAAA,SAAP,SAAgBg5B,GAEd,IADA,IAAMgd,EAAWn4C,KAAKg4C,UACblzC,EAAI,EAAGA,EAAIq2B,EAAOr2B,IACzBqzC,EAASpvC,KAAK,CACZkvC,KAAM,KACNtkC,KAAM,KACNnS,IAAK,KACL8J,MAAO,QAKNnJ,EAAAA,UAAAA,IAAP,SAAWX,GAGT,IAAMoQ,EAAO5R,KAAK63C,KAAKr2C,GACvB,gBAAIoQ,GACF5R,KAAKo4C,YAAYxmC,GACjB5R,KAAKq4C,YAAYzmC,GACVA,EAAKtG,OAEP,MAMFnJ,EAAAA,UAAAA,UAAP,SAAiBX,GACf,IAAMoQ,EAAO5R,KAAK63C,KAAKr2C,GACvB,gBAAIoQ,EACKA,EAAKtG,MAEP,MAGFnJ,EAAAA,UAAAA,KAAP,WACE,IAAMm2C,EAAOt4C,KAAK83C,MAClB,OAAgB,OAATQ,EAAgB,KAAOA,EAAKhtC,KAAAA,EAG9BnJ,EAAAA,UAAAA,IAAP,SAAWX,EAAa8J,GAEtB,IAAIsG,EAAO5R,KAAK63C,KAAKr2C,GACrB,QAAI,IAAAoQ,EAEFA,EAAO5R,KAAK63C,KAAKr2C,GACjBxB,KAAKo4C,YAAYxmC,GACjBA,EAAKtG,MAAQA,OACR,GAAItL,KAAKsZ,MAAQtZ,KAAK21C,SAE3B/jC,EAAO5R,KAAK83C,MACZ93C,KAAKo4C,YAAYxmC,UACV5R,KAAK63C,KAAKjmC,EAAKpQ,KACtBoQ,EAAKpQ,IAAMA,EACXoQ,EAAKtG,MAAQA,EACbtL,KAAK63C,KAAKr2C,GAAOoQ,MACZ,CAEL,IAAMumC,EAAWn4C,KAAKg4C,UAClBG,EAASryC,OAAS,IAEpB8L,EAAOumC,EAAS1vC,OACXjH,IAAMA,EACXoQ,EAAKtG,MAAQA,GAEbsG,EAAO,CACLqmC,KAAM,KACNtkC,KAAM,KACNnS,IAAGW,EACHmJ,MAAKnH,GAGTnE,KAAK63C,KAAKr2C,GAAOoQ,EACjB5R,KAAKsZ,MAEPtZ,CAAAA,KAAKq4C,YAAYzmC,EAAAA,EAErBzP,CA3HA,IAAagC,EAAAA,OAAAA,CAAAA,E,4xCCNb,cACAQ,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KAEAC,EAAAA,EAAAA,MACAhF,EAAAA,EAAAA,MACAqX,EAAAA,EAAAA,MACAuC,EAAAA,EAAAA,MACAiG,EAAAA,EAAAA,MAEM64B,EAAwB,4BAExBC,EAAkB,YAClBC,EAAkB,YAClBC,EAAc,cAGhBC,EAAiB,EAOrB/4B,EAAAA,SAAAA,GAcE,WACUif,EACSjsB,EACAuJ,EACAsL,EACAmxB,EACAC,EACMnI,EACYtsB,EACD/H,EACDpK,GAVnC,MAYE9P,EAAAA,KAAAA,OAAO,K,OAXCtC,EAAAA,QAAAA,EACSA,EAAAA,SAAAA,EACAA,EAAAA,eAAAA,EACAA,EAAAA,iBAAAA,EACAA,EAAAA,WAAAA,EACAA,EAAAA,YAAAA,EAEkBA,EAAAA,iBAAAA,EACDA,EAAAA,gBAAAA,EACDA,EAAAA,eAAAA,EAtB3BA,EAAAA,eAAyB84C,IAKzB94C,EAAAA,aAA8B,GAoBpCA,EAAKwF,cAAgBL,SAASC,cAAc,OAC5CpF,EAAKwF,cAAcH,UAAUC,IAzCL,cA0CxBtF,EAAKwF,cAAcoF,MAAMqb,WAAa,SACtCjmB,EAAKwF,cAAcC,aAAa,cAAe,QAC/CzF,EAAKi5C,oBAAoBj5C,EAAKoS,eAAetP,KAAM9C,EAAKoS,eAAevP,MACvE7C,EAAKk5C,oBAAsB/zC,SAASC,cAAc,OAClDpF,EAAKk5C,oBAAoB7zC,UAAUC,IA1Cf,mBA2CpBtF,EAAKk5C,oBAAoBzzC,aAAa,cAAe,QAErDzF,EAAKoD,WAAa,CAChBy9B,gBAAiB,EACjBC,iBAAkB,EAClBlQ,gBAAiB,EACjBC,iBAAkB,EAClBkQ,eAAgB,EAChBC,cAAe,EACfzQ,kBAAmB,EACnBG,mBAAoB,EACpBJ,YAAa,EACbG,aAAc,EACdptB,gBAAiB,EACjBC,iBAAkB,GAEpBtD,EAAKixC,oBACLjxC,EAAKm5C,aAELn5C,EAAKo5C,YAAcvI,EAAqBxvB,eAAexc,EAAAA,sBAAuBM,SAAUnF,EAAKg/B,SAE7Fh/B,EAAK+S,SAAS1N,UAAUC,IAAIozC,EAAwB14C,EAAKq5C,gBACzDr5C,EAAKsc,eAAe1W,YAAY5F,EAAKwF,eACrCxF,EAAKsc,eAAe1W,YAAY5F,EAAKk5C,qBAErCl5C,EAAK0G,SAAS1G,EAAK+4C,WAAWxI,qBAAoB,SAAAjuC,GAAK,SAAKg3C,aAAah3C,EAAAA,KACzEtC,EAAK0G,SAAS1G,EAAK+4C,WAAWvI,qBAAoB,SAAAluC,GAAK,SAAKi3C,aAAaj3C,EAAAA,KAEzEtC,EAAK0G,SAAS1G,EAAKg5C,YAAYzI,qBAAoB,SAAAjuC,GAAK,SAAKg3C,aAAah3C,EAAAA,KAC1EtC,EAAK0G,SAAS1G,EAAKg5C,YAAYxI,qBAAoB,SAAAluC,GAAK,SAAKi3C,aAAaj3C,EAAAA,KAhDlE,CAqWZ,QApXiC0F,EAAAA,EAAAA,GAY/BnG,OAAAA,eAAWyC,EAAAA,UAAA,kBAAe,C,IAA1B,WAA4D,OAAO,IAAI+S,EAAAA,cAAoCxE,KAAAA,E,gCAsDpGvO,EAAAA,UAAAA,QAAP,WACEnE,KAAK4S,SAAS1N,UAAU6R,OAAOwhC,EAAwBv4C,KAAKk5C,iBAAAA,EAI5D,EAAAnxC,yBAAwB/H,KAAKqF,cAAerF,KAAK+4C,oBAAqB/4C,KAAKq5C,mBAAoBr5C,KAAKs5C,yBAEpGn3C,EAAAA,UAAM2F,QAAOjG,KAAA,OAGPsC,EAAAA,UAAAA,kBAAR,W,QACEnE,KAAKiD,WAAWy9B,gBAAkB1gC,KAAKokB,iBAAiBpY,MAAQ3I,OAAOwb,iBACvE7e,KAAKiD,WAAW09B,iBAAmBh9B,KAAK6P,KAAKxT,KAAKokB,iBAAiB1Z,OAASrH,OAAOwb,kBACnF7e,KAAKiD,WAAWwtB,gBAAkBzwB,KAAKiD,WAAWy9B,gBAAkB/8B,KAAK+N,MAAM1R,KAAKqc,gBAAgBmB,WAAW0zB,eAC/GlxC,KAAKiD,WAAWytB,iBAAmB/sB,KAAKO,MAAMlE,KAAKiD,WAAW09B,iBAAmB3gC,KAAKqc,gBAAgBmB,WAAWsI,YACjH9lB,KAAKiD,WAAW29B,eAAiB,EACjC5gC,KAAKiD,WAAW49B,cAAgB,EAChC7gC,KAAKiD,WAAWmtB,kBAAoBpwB,KAAKiD,WAAWwtB,gBAAkBzwB,KAAKiS,eAAetP,KAC1F3C,KAAKiD,WAAWstB,mBAAqBvwB,KAAKiD,WAAWytB,iBAAmB1wB,KAAKiS,eAAevP,KAC5F1C,KAAKiD,WAAWktB,YAAcxsB,KAAK+N,MAAM1R,KAAKiD,WAAWmtB,kBAAoB/sB,OAAOwb,kBACpF7e,KAAKiD,WAAWqtB,aAAe3sB,KAAK+N,MAAM1R,KAAKiD,WAAWstB,mBAAqBltB,OAAOwb,kBACtF7e,KAAKiD,WAAWC,gBAAkBlD,KAAKiD,WAAWktB,YAAcnwB,KAAKiS,eAAetP,KACpF3C,KAAKiD,WAAWE,iBAAmBnD,KAAKiD,WAAWqtB,aAAetwB,KAAKiS,eAAevP,K,IAEtF,IAAsB,QAAA1C,KAAKuF,cAAYT,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAApC,IAAM/B,EAAO+B,EAAAA,MAChB/B,EAAQ0H,MAAMuB,MAAWhM,KAAKiD,WAAWktB,YAAW,KACpDptB,EAAQ0H,MAAMC,OAAY1K,KAAKiD,WAAWE,iBAAgB,KAC1DJ,EAAQ0H,MAAMqb,WAAgB9lB,KAAKiD,WAAWE,iBAAgB,KAE9DJ,EAAQ0H,MAAM8uC,SAAW,SAGtBv5C,C,gGAAAA,CAAAA,KAAKs5C,0BACRt5C,KAAKs5C,wBAA0Bt0C,SAASC,cAAc,SACtDjF,KAAKmc,eAAe1W,YAAYzF,KAAKs5C,0BAGvC,IAAME,EACDx5C,KAAKy5C,kBAALz5C,wFAIQA,KAAKiD,WAAWC,gBAJxBlD,MAOLA,KAAKs5C,wBAAwB5vC,YAAc8vC,EAE3Cx5C,KAAK+4C,oBAAoBtuC,MAAMC,OAAS1K,KAAKynB,iBAAiBhd,MAAMC,OACpE1K,KAAKmc,eAAe1R,MAAMuB,MAAWhM,KAAKiD,WAAWktB,YAAW,KAChEnwB,KAAKmc,eAAe1R,MAAMC,OAAY1K,KAAKiD,WAAWqtB,aAAY,MAG7DnsB,EAAAA,UAAAA,UAAP,SAAiBuJ,GACf1N,KAAK6+B,QAAUnxB,EACf1N,KAAKg5C,YAAAA,EAGC70C,EAAAA,UAAAA,WAAR,sBACOnE,KAAKq5C,qBACRr5C,KAAKq5C,mBAAqBr0C,SAASC,cAAc,SACjDjF,KAAKmc,eAAe1W,YAAYzF,KAAKq5C,qBAIvC,IAAIG,EACCx5C,KAAKy5C,kBAALz5C,yBACQA,KAAK6+B,QAAQpwB,WAAWlB,IADhCvN,kBAEcA,KAAKqc,gBAAgBmB,WAAW2b,WAF9Cn5B,gBAGYA,KAAKqc,gBAAgBmB,WAAW4b,SAH5Cp5B,OAMLw5C,GACKx5C,KAAKy5C,kBAAiB,cAAc/0C,EAAAA,WAApC1E,oBACcA,KAAKqc,gBAAgBmB,WAAW+lB,WAD9CvjC,KAGAA,KAAKy5C,kBAAiB,SAAS/0C,EAAAA,WAH/B1E,mBAIcA,KAAKqc,gBAAgBmB,WAAW8lB,eAJ9CtjC,KAMAA,KAAKy5C,kBAAiB,SAAS/0C,EAAAA,aAN/B1E,0BAULw5C,GACE,+BAAsCx5C,KAAKk5C,eAA3C,iCAKFM,GACE,0BAAiCx5C,KAAKk5C,eAAtC,8BAEuBl5C,KAAK6+B,QAAQlwB,OAAOpB,IAF3C,aAGYvN,KAAK6+B,QAAQjwB,aAAarB,IAHtC,gCAMuBvN,KAAK6+B,QAAQjwB,aAAarB,IANjD,aAOYvN,KAAK6+B,QAAQlwB,OAAOpB,IAPhC,OAWFisC,GACKx5C,KAAKy5C,kBAALz5C,mCAAwE0E,EAAAA,aAAY,IAAIA,EAAAA,yBAAxF1E,yBACoBA,KAAK6+B,QAAQlwB,OAAOpB,IADxCvN,2BAIAA,KAAKy5C,kBAJLz5C,6BAIkE0E,EAAAA,aAAY,IAAIA,EAAAA,mBAAkB,SAASA,EAAAA,yBAJ7G1E,mCAKoCA,KAAKk5C,eALzCl5C,0BAOAA,KAAKy5C,kBAPLz5C,6BAOkE0E,EAAAA,aAAY,IAAIA,EAAAA,mBAAkB,IAAIA,EAAAA,yBAPxG1E,6BAQ+BA,KAAKk5C,eARpCl5C,0BAUAA,KAAKy5C,kBAVLz5C,6BAUkE0E,EAAAA,aAAY,IAAIA,EAAAA,yBAVlF1E,wBAWmBA,KAAK6+B,QAAQlwB,OAAOpB,IAXvCvN,YAYQA,KAAK6+B,QAAQjwB,aAAarB,IAZlCvN,KAcAA,KAAKy5C,kBAdLz5C,iBAcmD0E,EAAAA,aAAY,IAAIA,EAAAA,uBAdnE1E,kBAeaA,KAAKqc,gBAAgBmB,WAAW0pB,YAAW,UAAUlnC,KAAK6+B,QAAQlwB,OAAOpB,IAftFvN,WAiBAA,KAAKy5C,kBAjBLz5C,iBAiBmD0E,EAAAA,aAAY,IAAIA,EAAAA,6BAjBnE1E,2BAkBsBA,KAAK6+B,QAAQlwB,OAAOpB,IAlB1CvN,WAqBLw5C,GACKx5C,KAAKy5C,kBAALz5C,8FAOAA,KAAKy5C,kBAPLz5C,iEASmBA,KAAK6+B,QAAQ/vB,gBAAgBvB,IAThDvN,KAYLA,KAAK6+B,QAAQ5vB,KAAK4J,SAAQ,SAACnU,EAAGI,GAC5B00C,GACKr3C,EAAKs3C,kBAAiB,KAAKjB,EAAkB1zC,EAAC,aAAaJ,EAAE6I,IAAG,MAChEpL,EAAKs3C,kBAAiB,KAAKhB,EAAkB3zC,EAAC,wBAAwBJ,EAAE6I,IAAG,SAElFisC,GACKx5C,KAAKy5C,kBAAiB,KAAKjB,EAAkB7zC,EAAAA,uBAAsB,aAAa8U,EAAAA,MAAMupB,OAAOhjC,KAAK6+B,QAAQnwB,YAAYnB,IAAG,MACzHvN,KAAKy5C,kBAAiB,KAAKhB,EAAkB9zC,EAAAA,uBAAsB,wBAAwB3E,KAAK6+B,QAAQpwB,WAAWlB,IAAG,MAE3HvN,KAAKq5C,mBAAmB3vC,YAAc8vC,CAAAA,EAGjCr1C,EAAAA,UAAAA,yBAAP,WACEnE,KAAK8wC,mBAAAA,EAGC3sC,EAAAA,UAAAA,oBAAR,SAA4BxB,EAAcD,GAExC,IAAK,IAAIoC,EAAI9E,KAAKuF,aAAaO,OAAQhB,GAAKpC,EAAMoC,IAAK,CACrD,IAAM4lB,EAAM1lB,SAASC,cAAc,OACnCjF,KAAKqF,cAAcI,YAAYilB,GAC/B1qB,KAAKuF,aAAawD,KAAK2hB,EAGzB,MAAO1qB,KAAKuF,aAAaO,OAASpD,GAChC1C,KAAKqF,cAAcqD,YAAY1I,KAAKuF,aAAakD,MAAAA,EAI9CtE,EAAAA,UAAAA,SAAP,SAAgBxB,EAAcD,GAC5B1C,KAAK84C,oBAAoBn2C,EAAMD,GAC/B1C,KAAK8wC,mBAAAA,EAGA3sC,EAAAA,UAAAA,kBAAP,WACEnE,KAAK8wC,mBAAAA,EAGA3sC,EAAAA,UAAAA,OAAP,WACEnE,KAAKqF,cAAcH,UAAU6R,OAAO2hC,EAAAA,EAG/Bv0C,EAAAA,UAAAA,QAAP,WACEnE,KAAKqF,cAAcH,UAAUC,IAAIuzC,EAAAA,EAG5Bv0C,EAAAA,UAAAA,mBAAP,SAA0BwC,EAAqCC,EAAmCqiB,GAEhG,KAAOjpB,KAAK+4C,oBAAoB3vC,SAAStD,QACvC9F,KAAK+4C,oBAAoBrwC,YAAY1I,KAAK+4C,oBAAoB3vC,SAAS,IAOzE,GAJApJ,KAAKi5C,YAAYjwB,mBAAmBriB,EAAOC,EAAKqiB,GAChDjpB,KAAK05C,WAAW,EAAG15C,KAAKiS,eAAevP,KAAO,GAGzCiE,GAAUC,EAAf,CAKA,IAAM6qC,EAAmB9qC,EAAM,GAAK3G,KAAKiS,eAAe7J,OAAOiC,MACzDqnC,EAAiB9qC,EAAI,GAAK5G,KAAKiS,eAAe7J,OAAOiC,MACrDsnC,EAAyBhuC,KAAKC,IAAI6tC,EAAkB,GACpDG,EAAuBjuC,KAAKmP,IAAI4+B,EAAgB1xC,KAAKiS,eAAevP,KAAO,GAGjF,KAAIivC,GAA0B3xC,KAAKiS,eAAevP,MAAQkvC,EAAuB,GAAjF,CAKA,IAAM+H,EAAmB30C,SAASwiB,yBAElC,GAAIyB,EAAkB,CACpB,IAAM2wB,EAAajzC,EAAM,GAAKC,EAAI,GAClC+yC,EAAiBl0C,YACfzF,KAAK65C,wBAAwBlI,EAAwBiI,EAAahzC,EAAI,GAAKD,EAAM,GAAIizC,EAAajzC,EAAM,GAAKC,EAAI,GAAIgrC,EAAuBD,EAAyB,QAElK,CAEL,IAAM9W,EAAW4W,IAAqBE,EAAyBhrC,EAAM,GAAK,EACpEm0B,EAAS6W,IAA2BD,EAAiB9qC,EAAI,GAAK5G,KAAKiS,eAAetP,KACxFg3C,EAAiBl0C,YAAYzF,KAAK65C,wBAAwBlI,EAAwB9W,EAAUC,IAE5F,IAAMgX,EAAkBF,EAAuBD,EAAyB,EAGxE,GAFAgI,EAAiBl0C,YAAYzF,KAAK65C,wBAAwBlI,EAAyB,EAAG,EAAG3xC,KAAKiS,eAAetP,KAAMmvC,IAE/GH,IAA2BC,EAAsB,CAEnD,IAAM/xC,EAAS6xC,IAAmBE,EAAuBhrC,EAAI,GAAK5G,KAAKiS,eAAetP,KACtFg3C,EAAiBl0C,YAAYzF,KAAK65C,wBAAwBjI,EAAsB,EAAG/xC,GAAA,CAGvFG,CAAAA,KAAK+4C,oBAAoBtzC,YAAYk0C,EAAAA,CAAAA,CAAAA,EAS/Bx1C,EAAAA,UAAAA,wBAAR,SAAgCumB,EAAaovB,EAAkBC,EAAgBx7B,QAAAA,IAAAA,IAAAA,EAAAA,GAC7E,IAAMxb,EAAUiC,SAASC,cAAc,OAKvC,OAJAlC,EAAQ0H,MAAMC,OAAY6T,EAAWve,KAAKiD,WAAWE,iBAAgB,KACrEJ,EAAQ0H,MAAMqB,IAAS4e,EAAM1qB,KAAKiD,WAAWE,iBAAgB,KAC7DJ,EAAQ0H,MAAMmB,KAAUkuC,EAAW95C,KAAKiD,WAAWC,gBAAe,KAClEH,EAAQ0H,MAAMuB,MAAWhM,KAAKiD,WAAWC,iBAAmB62C,EAASD,GAAS,KACvE/2C,CAAAA,EAGFoB,EAAAA,UAAAA,aAAP,aAIOA,EAAAA,UAAAA,iBAAP,WAEEnE,KAAK8wC,oBACL9wC,KAAKg5C,YAAAA,EAGA70C,EAAAA,UAAAA,MAAP,W,YACE,IAAgB,QAAAnE,KAAKuF,cAAYT,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAArBA,EAAAA,MACRyF,UAAY,E,oGAIXpG,EAAAA,UAAAA,WAAP,SAAkBwC,EAAeC,GAK/B,IAJA,IAAMozC,EAAkBh6C,KAAKiS,eAAe7J,OAAOkd,MAAQtlB,KAAKiS,eAAe7J,OAAO6N,EAChFuP,EAAU7hB,KAAKmP,IAAI9S,KAAKiS,eAAe7J,OAAO4N,EAAGhW,KAAKiS,eAAetP,KAAO,GAC5EyjC,EAAcpmC,KAAKqc,gBAAgBmB,WAAW4oB,YAE3CnwB,EAAItP,EAAOsP,GAAKrP,EAAKqP,IAAK,CACjC,IAAMgkC,EAAaj6C,KAAKuF,aAAa0Q,GACrCgkC,EAAW1vC,UAAY,GACvB,IAAMmgB,EAAMzU,EAAIjW,KAAKiS,eAAe7J,OAAOiC,MACrCF,EAAWnK,KAAKiS,eAAe7J,OAAOC,MAAM5I,IAAIirB,GAChDmc,EAAc7mC,KAAKqc,gBAAgBmB,WAAWqpB,YACpDoT,EAAWx0C,YAAYzF,KAAKi5C,YAAYiB,UAAU/vC,EAAWugB,EAAKA,IAAQsvB,EAAiBnT,EAAarhB,EAAS4gB,EAAapmC,KAAKiD,WAAWC,gBAAiBlD,KAAKiS,eAAetP,MAAAA,CAAAA,EAIvLjB,OAAAA,eAAYyC,EAAAA,UAAA,oBAAiB,C,IAA7B,WACE,MAAO,IAAIo0C,EAAwBv4C,KAAKk5C,cAAAA,E,gCAGlC/0C,EAAAA,UAAAA,aAAR,SAAqBhC,GACnBnC,KAAKm6C,kBAAkBh4C,EAAEgU,GAAIhU,EAAEkU,GAAIlU,EAAEiU,GAAIjU,EAAEmU,GAAInU,EAAEQ,MAAAA,EAAM,EAGjDwB,EAAAA,UAAAA,aAAR,SAAqBhC,GACnBnC,KAAKm6C,kBAAkBh4C,EAAEgU,GAAIhU,EAAEkU,GAAIlU,EAAEiU,GAAIjU,EAAEmU,GAAInU,EAAEQ,MAAAA,EAAM,EAGjDwB,EAAAA,UAAAA,kBAAR,SAA0B6R,EAAWK,EAAYJ,EAAWK,EAAY3T,EAAcy3C,GACpF,KAAOpkC,IAAMK,GAAMJ,IAAMK,GAAI,CAC3B,IAAMoU,EAAM1qB,KAAKuF,aAAa0Q,GAC9B,IAAKyU,EACH,OAEF,IAAM2vB,EAAO3vB,EAAIthB,SAAS4M,GACtBqkC,IACFA,EAAK5vC,MAAM6vC,eAAiBF,EAAU,YAAc,UAEhDpkC,GAAKrT,IACTqT,EAAI,EACJC,IAAAA,CAAAA,EAhXgBjJ,EAAAA,CAqBnBxI,EAAAA,EAAAA,EAAAA,uBACAA,EAAAA,EAAAA,EAAAA,kBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,iBAxBQ+1C,EAAb,CAAA36B,CAAiChb,EAAAA,YAApBT,EAAAA,YAAAA,CAAAo2C,E,khCCxBb,cACA91C,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MACAhF,EAAAA,EAAAA,MACAqX,EAAAA,EAAAA,MAEa/S,EAAAA,WAAa,aACbA,EAAAA,UAAY,YACZA,EAAAA,aAAe,eACfA,EAAAA,gBAAkB,kBAClBA,EAAAA,oBAAsB,sBACtBA,EAAAA,aAAe,eACfA,EAAAA,mBAAqB,qBACrBA,EAAAA,yBAA2B,qBAC3BA,EAAAA,uBAAyB,mBACzBA,EAAAA,6BAA+B,yBAE5C,iBAOE,WACmBijB,EACTyX,EACkCzW,EACR/L,EACHmc,EACMpX,GALpB,KAAAgG,UAAA,EACT,KAAAyX,QAAA,EACkC,KAAAzW,wBAAA,EACR,KAAA/L,gBAAA,EACH,KAAAmc,aAAA,EACM,KAAApX,mBAAA,EAZ/B,KAAAuxB,UAAsB,IAAIjuC,EAAAA,SAI1B,KAAA26B,mBAAA,CAgTV,QApSSl9B,EAAAA,UAAAA,UAAP,SAAiBuL,GACf1N,KAAK6+B,QAAUnxB,CAAAA,EAGVvL,EAAAA,UAAAA,mBAAP,SAA0BwE,EAAqCC,EAAmCqiB,GAChGjpB,KAAKggC,gBAAkBr5B,EACvB3G,KAAKigC,cAAgBr5B,EACrB5G,KAAKq/B,kBAAoBpW,CAAAA,EAGpB9mB,EAAAA,UAAAA,UAAP,SAAiBgI,EAAuBugB,EAAa8vB,EAAsB3T,EAAiCrhB,EAAiB4gB,EAAsBzgB,EAAmBhjB,GAUpK,IAAK,IAAL,IATM4kB,EAAWvnB,KAAKonB,UAAUI,yBAE1BirB,EAAezyC,KAAKooB,wBAAwBsqB,oBAAoBhoB,GAMlE+vB,EAAa,EACRzkC,EAAIrS,KAAKmP,IAAI3I,EAASrE,OAAQnD,GAAQ,EAAGqT,GAAK,EAAGA,IACxD,GAAI7L,EAASw8B,SAAS3wB,EAAGhW,KAAK2yC,WAAWrQ,YAAc79B,EAAAA,gBAAmB+1C,GAAexkC,IAAMwP,EAAU,CACvGi1B,EAAazkC,EAAI,EACjB,KAIJ,KAASA,EAAI,EAAGA,EAAIykC,EAAYzkC,IAAK,CACnC7L,EAASw8B,SAAS3wB,EAAGhW,KAAK2yC,WAC1B,IAAI3mC,EAAQhM,KAAK2yC,UAAUjtB,WAG3B,GAAc,IAAV1Z,EAAJ,CAKA,IAAI4mC,GAAAA,EACAC,EAAY78B,EAKZgrB,EAAOhhC,KAAK2yC,UAChB,GAAIF,EAAa3sC,OAAS,GAAKkQ,IAAMy8B,EAAa,GAAG,GAAI,CACvDG,GAAAA,EACA,IAAM/+B,EAAQ4+B,EAAa9pC,QAI3Bq4B,EAAO,IAAInhC,EAAAA,eACTG,KAAK2yC,UACLxoC,EAAS2oC,mBAAAA,EAAwBj/B,EAAM,GAAIA,EAAM,IACjDA,EAAM,GAAKA,EAAM,IAInBg/B,EAAYh/B,EAAM,GAAK,EAGvB7H,EAAQg1B,EAAKtb,UAGf,KAAMg1B,EAAc16C,KAAKonB,UAAUniB,cAAc,QAkBjD,GAjBI+G,EAAQ,IACV0uC,EAAYjwC,MAAMuB,MAAW2Z,EAAY3Z,EAAK,MAG5C4mC,IAGF8H,EAAYjwC,MAAMuqB,QAAU,SAKxBxP,GAAWxP,GAAKwP,GAAWqtB,IAC7BrtB,EAAUxP,KAIThW,KAAKw4B,aAAaiO,gBAAkB+T,GAAexkC,IAAMwP,EAO5D,OANAk1B,EAAYx1C,UAAUC,IAAIhB,EAAAA,cAEtBiiC,GACFsU,EAAYx1C,UAAUC,IAAIhB,EAAAA,oBAGpB0iC,GACN,IAAK,MACH6T,EAAYx1C,UAAUC,IAAIhB,EAAAA,wBAC1B,MACF,IAAK,YACHu2C,EAAYx1C,UAAUC,IAAIhB,EAAAA,8BAC1B,MACF,QACEu2C,EAAYx1C,UAAUC,IAAIhB,EAAAA,0BAK5B68B,EAAKqB,UACPqY,EAAYx1C,UAAUC,IAAIhB,EAAAA,YAGxB68B,EAAKwB,YACPkY,EAAYx1C,UAAUC,IAAIhB,EAAAA,cAGxB68B,EAAKuB,SACPmY,EAAYx1C,UAAUC,IAAIhB,EAAAA,WAGxB68B,EAAKuS,eACPmH,EAAYx1C,UAAUC,IAAIhB,EAAAA,iBAGxB68B,EAAKqS,cACPqH,EAAYhxC,YAAcjF,EAAAA,qBAE1Bi2C,EAAYhxC,YAAcs3B,EAAKQ,YAAc/8B,EAAAA,qBAG3Cu8B,EAAKwS,mBACPkH,EAAYx1C,UAAUC,IAAIhB,EAAAA,qBAG5B,IAAI2I,EAAKk0B,EAAKmB,aACV8B,EAAcjD,EAAKkD,iBACnBr3B,EAAKm0B,EAAKiB,aACVmC,EAAcpD,EAAKqD,iBACjBtC,IAAcf,EAAKe,YACzB,GAAIA,EAAW,CACb,IAAMuC,EAAOx3B,EACbA,EAAKD,EACLA,EAAKy3B,EACL,IAAMC,EAAQN,EACdA,EAAcG,EACdA,EAAcG,CAKhB,KAAIf,OAAAA,EACAV,OAAAA,EACAW,GAAAA,E,IACJ,IAAgB,kBAAAzjC,KAAKohB,mBAAmBshB,qBAAqB1sB,EAAG0U,KAAIvQ,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAE,CAAjE,IAAMV,EAACU,EAAAA,MACc,QAApBV,EAAE1H,QAAQ2xB,OAAmBD,IAG7BhqB,EAAEkpB,qBACJyB,EAAc,SACdv3B,EAAK4M,EAAEkpB,mBAAmBn1B,MAAQ,EAAI,SACtCg2B,EAAa/pB,EAAEkpB,oBAEblpB,EAAEmpB,qBACJqB,EAAc,SACdn3B,EAAK2M,EAAEmpB,mBAAmBp1B,MAAQ,EAAI,SACtCs1B,EAAarpB,EAAEmpB,oBAEjBa,EAA4B,QAApBhqB,EAAE1H,QAAQ2xB,MAAAA,CAIpB,C,gGAAA,KAAMiX,EAAgB36C,KAAK2jC,mBAAmB3tB,EAAG0U,GAC5C+Y,GACCzjC,KAAK6+B,QAAQ7vB,qBAAuB2rC,IACtC1W,EAAc,SACdn3B,EAAK9M,KAAK6+B,QAAQ7vB,oBAAoBxB,MAAQ,EAAI,SAClDs1B,EAAa9iC,KAAK6+B,QAAQ7vB,qBAM1B2rC,IACFnX,EAAaxjC,KAAK6+B,QAAQ/vB,gBAC1B20B,GAAAA,GAIEA,GACFiX,EAAYx1C,UAAUC,IAAI,wBAI5B,IAAIy1C,OAAAA,EACJ,OAAQxW,GACN,KAAK,SACL,KAAK,SACHwW,EAAa56C,KAAK6+B,QAAQ5vB,KAAKpC,GAC/B6tC,EAAYx1C,UAAUC,IAAI,YAAY0H,GACtC,MACF,KAAK,SACH+tC,EAAah2C,EAAAA,KAAKsI,QAAQL,GAAM,GAAIA,GAAM,EAAI,IAAW,IAALA,GACpD7M,KAAK66C,UAAUH,EAAa,qBAAqBI,GAAUjuC,IAAO,GAAG3C,SAAS,IAAK,IAAK,IACxF,MAEF,QACM63B,GACF6Y,EAAa56C,KAAK6+B,QAAQpwB,WAC1BisC,EAAYx1C,UAAUC,IAAI,YAAYX,EAAAA,yBAEtCo2C,EAAa56C,KAAK6+B,QAAQnwB,WAKhC,OAAQu1B,GACN,KAAK,SACL,KAAK,SACCjD,EAAKqB,UAAYv1B,EAAK,GAAK9M,KAAKqc,gBAAgBmB,WAAW4kB,6BAC7Dt1B,GAAM,GAEH9M,KAAK+6C,sBAAsBL,EAAaE,EAAY56C,KAAK6+B,QAAQ5vB,KAAKnC,GAAKk0B,EAAMwC,OAAAA,IACpFkX,EAAYx1C,UAAUC,IAAI,YAAY2H,GAExC,MACF,KAAK,SACH,IAAM+T,EAAQjc,EAAAA,KAAKsI,QAChBJ,GAAM,GAAM,IACZA,GAAO,EAAK,IACA,IAAbmT,GAEGjgB,KAAK+6C,sBAAsBL,EAAaE,EAAY/5B,EAAOmgB,EAAMwC,EAAYV,IAChF9iC,KAAK66C,UAAUH,EAAa,UAAUI,EAAShuC,EAAG5C,SAAS,IAAK,IAAK,IAEvE,MAEF,QACOlK,KAAK+6C,sBAAsBL,EAAaE,EAAY56C,KAAK6+B,QAAQpwB,WAAYuyB,EAAMwC,OAAAA,IAClFzB,GACF2Y,EAAYx1C,UAAUC,IAAI,YAAYX,EAAAA,wBAK9C+iB,EAAS9hB,YAAYi1C,GAErB1kC,EAAI68B,CAAAA,CAEN,QAAOtrB,CAAAA,EAGDplB,EAAAA,UAAAA,sBAAR,SAA8BY,EAAsB8J,EAAYC,EAAYk0B,EAAiBwC,EAAgCV,GAC3H,GAA6D,IAAzD9iC,KAAKqc,gBAAgBmB,WAAWomB,uBAAAA,EAA8B,EAAAC,iCAAgC7C,EAAKsB,WACrG,OAAO,EAIT,IAAIwB,OAAAA,EAWJ,OAVKN,GAAeV,IAClBgB,EAAgB9jC,KAAK6+B,QAAQ1vB,cAAc40B,SAASl3B,EAAGW,KAAMV,EAAGU,YAAAA,IAI9Ds2B,IACFA,EAAgBl/B,EAAAA,MAAMggC,oBAAoBpB,GAAc32B,EAAIi2B,GAAch2B,EAAI9M,KAAKqc,gBAAgBmB,WAAWomB,sBAC9G5jC,KAAK6+B,QAAQ1vB,cAAc01B,UAAUrB,GAAc32B,GAAIW,MAAOs1B,GAAch2B,GAAIU,KAAMs2B,MAAAA,EAAAA,EAAiB,SAGrGA,IACF9jC,KAAK66C,UAAU93C,EAAS,SAAS+gC,EAAcv2B,MAAAA,EACxC,EAMHpL,EAAAA,UAAAA,UAAR,SAAkBY,EAAsB0H,GACtC1H,EAAQuC,aAAa,QAAS,IAAGvC,EAAQoF,aAAa,UAAY,IAAKsC,EAAK,MAGtEtI,EAAAA,UAAAA,mBAAR,SAA2B6T,EAAWC,GACpC,IAAMtP,EAAQ3G,KAAKggC,gBACbp5B,EAAM5G,KAAKigC,cACjB,SAAKt5B,IAAUC,KAGX5G,KAAKq/B,kBACH14B,EAAM,IAAMC,EAAI,GACXoP,GAAKrP,EAAM,IAAMsP,GAAKtP,EAAM,IACjCqP,EAAIpP,EAAI,IAAMqP,GAAKrP,EAAI,GAEpBoP,EAAIrP,EAAM,IAAMsP,GAAKtP,EAAM,IAChCqP,GAAKpP,EAAI,IAAMqP,GAAKrP,EAAI,GAEpBqP,EAAItP,EAAM,IAAMsP,EAAIrP,EAAI,IAC3BD,EAAM,KAAOC,EAAI,IAAMqP,IAAMtP,EAAM,IAAMqP,GAAKrP,EAAM,IAAMqP,EAAIpP,EAAI,IAClED,EAAM,GAAKC,EAAI,IAAMqP,IAAMrP,EAAI,IAAMoP,EAAIpP,EAAI,IAC7CD,EAAM,GAAKC,EAAI,IAAMqP,IAAMtP,EAAM,IAAMqP,GAAKrP,EAAM,KAnTzB7B,EAAAA,CAU7B+C,EAAAA,EAAAA,EAAAA,yBACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,cACAA,EAAAA,EAAAA,EAAAA,qBAbQmzC,EAAb,IAuTA,SAASF,EAASjwC,EAAcowC,EAAiBn1C,GAC/C,KAAO+E,EAAK/E,OAASA,GACnB+E,EAAOowC,EAAUpwC,EAEnB,OAAOA,CA3TI,CAAA1G,EAAAA,sBAAAA,CAAA62C,E,qFChBb,iBAuBE,WACU/oC,GAAA,KAAAA,eAAA,EApBH,KAAAipC,mBAAA,EAOA,KAAAC,qBAA+B,CAyHxC,QArGSh5C,EAAAA,UAAAA,eAAP,WACEnC,KAAKytB,oBAAAA,EACLztB,KAAK2tB,kBAAAA,EACL3tB,KAAKk7C,mBAAAA,EACLl7C,KAAKm7C,qBAAuB,GAM9Bz5C,OAAAA,eAAWS,EAAAA,UAAA,sBAAmB,C,IAA9B,WACE,OAAInC,KAAKk7C,kBACA,CAAC,EAAG,GAGRl7C,KAAK2tB,cAAiB3tB,KAAKytB,gBAIzBztB,KAAKo7C,6BAA+Bp7C,KAAK2tB,aAHvC3tB,KAAKytB,cAAAA,E,gCAUhB/rB,OAAAA,eAAWS,EAAAA,UAAA,oBAAiB,C,IAA5B,WACE,OAAInC,KAAKk7C,kBACA,CAACl7C,KAAKiS,eAAetP,KAAM3C,KAAKiS,eAAe7J,OAAOkd,MAAQtlB,KAAKiS,eAAevP,KAAO,GAG7F1C,KAAKytB,gBAKLztB,KAAK2tB,cAAgB3tB,KAAKo7C,8BACvBC,EAAkBr7C,KAAKytB,eAAe,GAAKztB,KAAKm7C,sBAChCn7C,KAAKiS,eAAetP,KAEpC04C,EAAkBr7C,KAAKiS,eAAetP,MAAS,EAC1C,CAAC3C,KAAKiS,eAAetP,KAAM3C,KAAKytB,eAAe,GAAK9pB,KAAKO,MAAMm3C,EAAkBr7C,KAAKiS,eAAetP,MAAQ,GAE/G,CAAC04C,EAAkBr7C,KAAKiS,eAAetP,KAAM3C,KAAKytB,eAAe,GAAK9pB,KAAKO,MAAMm3C,EAAkBr7C,KAAKiS,eAAetP,OAEzH,CAAC04C,EAAiBr7C,KAAKytB,eAAe,IAI3CztB,KAAKm7C,sBAEHn7C,KAAK2tB,aAAa,KAAO3tB,KAAKytB,eAAe,IAEzC4tB,EAAkBr7C,KAAKytB,eAAe,GAAKztB,KAAKm7C,sBAChCn7C,KAAKiS,eAAetP,KACjC,CAAC04C,EAAkBr7C,KAAKiS,eAAetP,KAAM3C,KAAKytB,eAAe,GAAK9pB,KAAKO,MAAMm3C,EAAkBr7C,KAAKiS,eAAetP,OAEzH,CAACgB,KAAKC,IAAIy3C,EAAiBr7C,KAAK2tB,aAAa,IAAK3tB,KAAK2tB,aAAa,IAGxE3tB,KAAK2tB,kBAAAA,EAvBV,IAgBQ0tB,CAAAA,E,gCAaLl5C,EAAAA,UAAAA,2BAAP,WACE,IAAMwE,EAAQ3G,KAAKytB,eACb7mB,EAAM5G,KAAK2tB,aACjB,SAAKhnB,IAAUC,KAGRD,EAAM,GAAKC,EAAI,IAAOD,EAAM,KAAOC,EAAI,IAAMD,EAAM,GAAKC,EAAI,KAQ9DzE,EAAAA,UAAAA,OAAP,SAAcqmB,GAUZ,OARIxoB,KAAKytB,iBACPztB,KAAKytB,eAAe,IAAMjF,GAExBxoB,KAAK2tB,eACP3tB,KAAK2tB,aAAa,IAAMnF,GAItBxoB,KAAK2tB,cAAgB3tB,KAAK2tB,aAAa,GAAK,GAC9C3tB,KAAK4tB,kBAAAA,IAKH5tB,KAAKytB,gBAAkBztB,KAAKytB,eAAe,GAAK,IAClDztB,KAAKytB,eAAe,GAAK,MAEpB,EAEXtrB,CApIA,IAAagC,EAAAA,eAAAA,CAAAA,E,mgBCNb,cACAK,EAAAA,EAAAA,MAGAC,EAAAA,WAYE,WACEO,EACAhC,EACkCqZ,GAAA,KAAAA,gBAAA,EAZ7B,KAAArQ,MAAgB,EAChB,KAAAtB,OAAiB,EAKhB,KAAA4wC,kBAAoB,IAAI92C,EAAAA,aAQ9BxE,KAAKu7C,iBAAmB,IAAIC,EAAmBx2C,EAAUhC,EAAehD,KAAKqc,gBAWjF,QArBE3a,OAAAA,eAAWS,EAAAA,UAAA,eAAY,C,IAAvB,WAAqC,OAAOnC,KAAKgM,MAAQ,GAAKhM,KAAK0K,OAAS,G,gCAG5EhJ,OAAAA,eAAWS,EAAAA,UAAA,mBAAgB,C,IAA3B,WAA8C,OAAOnC,KAAKs7C,kBAAkB5oC,KAAAA,E,gCAUrEvQ,EAAAA,UAAAA,QAAP,WACE,IAAMlC,EAASD,KAAKu7C,iBAAiBl3B,UACjCpkB,EAAO+L,QAAUhM,KAAKgM,OAAS/L,EAAOyK,SAAW1K,KAAK0K,SACxD1K,KAAKgM,MAAQ/L,EAAO+L,MACpBhM,KAAK0K,OAASzK,EAAOyK,OACrB1K,KAAKs7C,kBAAkBzkC,OAAAA,EAzBD/R,EAAAA,CAevB+C,EAAAA,EAAAA,EAAAA,kBAfQ4zC,EAAb,CAAAh3C,GAAaN,EAAAA,gBAAAA,EA6Cb,IAAAO,EAAA,WAIE,WACU0iB,EACAs0B,EACAr/B,GAFA,KAAA+K,UAAA,EACA,KAAAs0B,eAAA,EACA,KAAAr/B,gBAAA,EANF,KAAAs/B,QAA0B,CAAE3vC,MAAO,EAAGtB,OAAQ,GAQpD1K,KAAK47C,gBAAkB57C,KAAKonB,UAAUniB,cAAc,QACpDjF,KAAK47C,gBAAgB12C,UAAUC,IAAI,8BACnCnF,KAAK47C,gBAAgBlyC,YAAc,IACnC1J,KAAK47C,gBAAgBt2C,aAAa,cAAe,QACjDtF,KAAK07C,eAAej2C,YAAYzF,KAAK47C,gBAmBzC,QAhBSz5C,EAAAA,UAAAA,QAAP,WACEnC,KAAK47C,gBAAgBnxC,MAAM0uB,WAAan5B,KAAKqc,gBAAgBmB,WAAW2b,WACxEn5B,KAAK47C,gBAAgBnxC,MAAM2uB,SAAcp5B,KAAKqc,gBAAgBmB,WAAW4b,SAAQ,KAGjF,IAAMyiB,EAAW77C,KAAK47C,gBAAgBjwC,wBAStC,OALuB,IAAnBkwC,EAAS7vC,OAAmC,IAApB6vC,EAASnxC,SACnC1K,KAAK27C,QAAQ3vC,MAAQ6vC,EAAS7vC,MAC9BhM,KAAK27C,QAAQjxC,OAAS/G,KAAK6P,KAAKqoC,EAASnxC,SAGpC1K,KAAK27C,OAAAA,EAEhBx5C,CAhCA,K,u/BC/CA,cACAuC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MAGAC,EAAAA,SAAAA,GASE,WAAYi3C,EAAsBvc,EAAevzB,GAAjD,MACE7J,EAAAA,KAAAA,OAAO,K,OANF0F,EAAAA,QAAkB,EAGlBA,EAAAA,aAAuB,GAI5BA,EAAKiF,GAAKgvC,EAAUhvC,GACpBjF,EAAKgF,GAAKivC,EAAUjvC,GACpBhF,EAAKk0C,aAAexc,EACpB13B,EAAK6vB,OAAS1rB,EAVT,CAuCT,QA3CoCnE,EAAAA,EAAAA,GAiB3B1D,EAAAA,UAAAA,WAAP,WAEE,OAAO,SAGFA,EAAAA,UAAAA,SAAP,WACE,OAAOnE,KAAK03B,MAAAA,EAGPvzB,EAAAA,UAAAA,SAAP,WACE,OAAOnE,KAAK+7C,YAAAA,EAGP53C,EAAAA,UAAAA,QAAP,WAGE,OAAO,SAGFA,EAAAA,UAAAA,gBAAP,SAAuBmH,GACrB,MAAM,IAAIjF,MAAM,oBAGXlC,EAAAA,UAAAA,cAAP,WACE,MAAO,CAACnE,KAAK8M,GAAI9M,KAAKwhC,WAAYxhC,KAAK0lB,WAAY1lB,KAAKsiC,UAAAA,EAE5Dn+B,CA3CA,CAAAU,CAAoCJ,EAAAA,eAAvBN,EAAAA,eAAAA,EA6Cb,iBAOE,WAC0B8N,GAAA,KAAAA,eAAA,EALlB,KAAA+pC,kBAAwC,GACxC,KAAAC,uBAAiC,EACjC,KAAAtJ,UAAsB,IAAIhuC,EAAAA,QAmRpC,QA7QSxC,EAAAA,UAAAA,SAAP,SAAgB2P,GACd,IAAMoqC,EAA2B,CAC/B/nC,GAAInU,KAAKi8C,yBACTnqC,QAAO3P,GAIT,OADAnC,KAAKg8C,kBAAkBjzC,KAAKmzC,GACrBA,EAAO/nC,EAAAA,EAGThS,EAAAA,UAAAA,WAAP,SAAkB2qB,GAChB,IAAK,IAAIhoB,EAAI,EAAGA,EAAI9E,KAAKg8C,kBAAkBl2C,OAAQhB,IACjD,GAAI9E,KAAKg8C,kBAAkBl3C,GAAGqP,KAAO2Y,EAEnC,OADA9sB,KAAKg8C,kBAAkBnnC,OAAO/P,EAAG,MAKrC,OAAO,GAGF3C,EAAAA,UAAAA,oBAAP,SAA2BuoB,GACzB,GAAsC,IAAlC1qB,KAAKg8C,kBAAkBl2C,OACzB,MAAO,GAGT,IAAM4P,EAAO1V,KAAKiS,eAAe7J,OAAOC,MAAM5I,IAAIirB,GAClD,IAAKhV,GAAwB,IAAhBA,EAAK5P,OAChB,MAAO,GAgBT,IAbA,IAAMq2C,EAA6B,GAC7BC,EAAU1mC,EAAKo9B,mBAAAA,GAMjBuJ,EAAmB,EACnBC,EAAqB,EACrBC,EAAwB,EACxBC,EAAc9mC,EAAKE,MAAM,GACzB6mC,EAAc/mC,EAAKgnC,MAAM,GAEpB1mC,EAAI,EAAGA,EAAIN,EAAKinC,mBAAoB3mC,IAG3C,GAFAN,EAAKixB,SAAS3wB,EAAGhW,KAAK2yC,WAEY,IAA9B3yC,KAAK2yC,UAAUjtB,WAAnB,CAMA,GAAI1lB,KAAK2yC,UAAU7lC,KAAO0vC,GAAex8C,KAAK2yC,UAAU9lC,KAAO4vC,EAAa,CAG1E,GAAIzmC,EAAIqmC,EAAmB,EAQzB,IAPA,IAAM5J,EAAezyC,KAAK48C,iBACxBR,EACAG,EACAD,EACA5mC,EACA2mC,GAEOv3C,EAAI,EAAGA,EAAI2tC,EAAa3sC,OAAQhB,IACvCq3C,EAAOpzC,KAAK0pC,EAAa3tC,IAK7Bu3C,EAAmBrmC,EACnBumC,EAAwBD,EACxBE,EAAcx8C,KAAK2yC,UAAU7lC,GAC7B2vC,EAAcz8C,KAAK2yC,UAAU9lC,EAG/ByvC,CAAAA,GAAsBt8C,KAAK2yC,UAAUnR,WAAW17B,QAAUpB,EAAAA,qBAAqBoB,MAIjF,IAAI9F,KAAKiS,eAAetP,KAAO05C,EAAmB,EAQhD,IAPM5J,EAAezyC,KAAK48C,iBACxBR,EACAG,EACAD,EACA5mC,EACA2mC,GAEOv3C,EAAI,EAAGA,EAAI2tC,EAAa3sC,OAAQhB,IACvCq3C,EAAOpzC,KAAK0pC,EAAa3tC,IAI7B,OAAOq3C,CAAAA,EAWDh6C,EAAAA,UAAAA,iBAAR,SAAyBuT,EAAcmnC,EAAoBC,EAAkB3yC,EAAuB0wB,GAClG,IAAMhwB,EAAO6K,EAAKtE,UAAUyrC,EAAYC,GAIpCC,EAAsC,GAC1C,IACEA,EAAkB/8C,KAAKg8C,kBAAkB,GAAGlqC,QAAQjH,EAItD,CAHE,MAAO1J,GACP4P,QAAQ5P,MAAMA,EAEhB,KAAK,IAAI2D,EAAI,EAAGA,EAAI9E,KAAKg8C,kBAAkBl2C,OAAQhB,IAEjD,IAEE,IADA,IAAMk4C,EAAeh9C,KAAKg8C,kBAAkBl3C,GAAGgN,QAAQjH,GAC9CsP,EAAI,EAAGA,EAAI6iC,EAAal3C,OAAQqU,IACvC8iC,EAAuBC,aAAaH,EAAiBC,EAAa7iC,GAOxE,CALI,MAAOhZ,GACP4P,QAAQ5P,MAAMA,EAIlB,QADAnB,KAAKm9C,0BAA0BJ,EAAiB5yC,EAAU0wB,GACnDkiB,CAAAA,EAWD56C,EAAAA,UAAAA,0BAAR,SAAkCg6C,EAA4BzmC,EAAmBmlB,GAC/E,IAAIuiB,EAAoB,EACpBC,GAAAA,EACAf,EAAqB,EACrBgB,EAAenB,EAAOiB,GAG1B,GAAKE,EAAL,CAIA,IAAK,IAAItnC,EAAI6kB,EAAU7kB,EAAIhW,KAAKiS,eAAetP,KAAMqT,IAAK,CACxD,IAAMhK,EAAQ0J,EAAKgQ,SAAS1P,GACtBpR,EAAS8Q,EAAK6nC,UAAUvnC,GAAGlQ,QAAUpB,EAAAA,qBAAqBoB,OAIhE,GAAc,IAAVkG,EAAJ,CAWA,IANKqxC,GAAuBC,EAAa,IAAMhB,IAC7CgB,EAAa,GAAKtnC,EAClBqnC,GAAAA,GAIEC,EAAa,IAAMhB,EAAoB,CAOzC,GANAgB,EAAa,GAAKtnC,IAGlBsnC,EAAenB,IAASiB,IAItB,MAOEE,EAAa,IAAMhB,GACrBgB,EAAa,GAAKtnC,EAClBqnC,GAAAA,GAEAA,GAAAA,CAMJf,CAAAA,GAAsB13C,CAAA,CAKpB04C,CAAAA,IACFA,EAAa,GAAKt9C,KAAKiS,eAAetP,KAAAA,CAAAA,EAY3BR,EAAAA,aAAf,SAA4Bg6C,EAA4BqB,GAEtD,IADA,IAAIC,GAAAA,EACK34C,EAAI,EAAGA,EAAIq3C,EAAOr2C,OAAQhB,IAAK,CACtC,IAAM+O,EAAQsoC,EAAOr3C,GACrB,GAAK24C,EAAL,CAwBE,GAAID,EAAS,IAAM3pC,EAAM,GAIvB,OADAsoC,EAAOr3C,EAAI,GAAG,GAAK04C,EAAS,GACrBrB,EAGT,GAAIqB,EAAS,IAAM3pC,EAAM,GAKvB,OAFAsoC,EAAOr3C,EAAI,GAAG,GAAKnB,KAAKC,IAAI45C,EAAS,GAAI3pC,EAAM,IAC/CsoC,EAAOtnC,OAAO/P,EAAG,GACVq3C,EAKTA,EAAOtnC,OAAO/P,EAAG,GACjBA,GAAAA,KA1CF,CACE,GAAI04C,EAAS,IAAM3pC,EAAM,GAGvB,OADAsoC,EAAOtnC,OAAO/P,EAAG,EAAG04C,GACbrB,EAGT,GAAIqB,EAAS,IAAM3pC,EAAM,GAIvB,OADAA,EAAM,GAAKlQ,KAAKmP,IAAI0qC,EAAS,GAAI3pC,EAAM,IAChCsoC,EAGLqB,EAAS,GAAK3pC,EAAM,KAGtBA,EAAM,GAAKlQ,KAAKmP,IAAI0qC,EAAS,GAAI3pC,EAAM,IACvC4pC,GAAAA,EAAU,CAoChB,QARIA,EAEFtB,EAAOA,EAAOr2C,OAAS,GAAG,GAAK03C,EAAS,GAGxCrB,EAAOpzC,KAAKy0C,GAGPrB,CAAAA,EAtREc,EAAsBjwC,EAAAA,CAQ9BxI,EAAAA,EAAAA,EAAAA,iBARQy4C,EAAb,IAAa94C,EAAAA,uBAAAA,CAAA84C,E,0FCnDb,iBAGE,WACU1kB,GAAA,KAAAA,UAAA,CAQZ,QAJE72B,OAAAA,eAAWS,EAAAA,UAAA,YAAS,C,IAApB,WAEE,OADwBnC,KAAKu4B,UAAUmlB,YAAc19C,KAAKu4B,UAAUmlB,cAAyC14C,UACtF24C,gBAAkB39C,KAAKu4B,WAAavzB,SAAS44C,UAAAA,E,gCAExEz7C,CAZA,IAAagC,EAAAA,mBAAAA,CAAAA,E,igBCFb,cACAK,EAAAA,EAAAA,MAEAC,EAAAA,WAGE,WACmC7B,EACEwhB,GADF,KAAAxhB,eAAA,EACE,KAAAwhB,iBAAA,CAsBvC,QAlBSjiB,EAAAA,UAAAA,UAAP,SAAiBuQ,EAA2C3P,EAAsB42B,EAAkBpb,EAAkBsb,GACpH,OAAO,IAAA5d,WACL5Y,OACAqP,EACA3P,EACA42B,EACApb,EACAve,KAAKokB,iBAAiB0L,aACtB9vB,KAAK4C,eAAeK,WAAWC,gBAC/BlD,KAAK4C,eAAeK,WAAWE,iBAC/B02B,EAAAA,EAIG13B,EAAAA,UAAAA,iBAAP,SAAwBuQ,EAAmB3P,EAAsB42B,EAAkBpb,GACjF,IAAMvC,EAAShc,KAAKic,UAAUvJ,EAAO3P,EAAS42B,EAAUpb,GACxD,OAAO,IAAA4L,kBAAiBnO,EAAAA,EAzBHlX,EAAAA,CAIpB+C,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,mBALQg2C,EAAb,CAAAp5C,GAAaN,EAAAA,aAAAA,CAAA05C,E,69BCFb,cACAn5C,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAhF,EAAAA,EAAAA,MACAqX,EAAAA,EAAAA,MAQAuC,EAAAA,SAAAA,GA6BE,WACUqkC,EACAt/B,EACR/S,EACiBgZ,EACkBL,EACfihB,EACJpL,GAPlB,MASE93B,EAAAA,KAAAA,OAAO,KA+BP,GAvCQtC,EAAAA,UAAAA,EACAA,EAAAA,UAAAA,EAG2BA,EAAAA,iBAAAA,EA5B7BA,EAAAA,WAAAA,EACAA,EAAAA,mBAAAA,EACAA,EAAAA,yBAAAA,EACAA,EAAAA,wBAAAA,EACAA,EAAAA,aAAuB,EACvBA,EAAAA,cAAwB,EACxBA,EAAAA,gBAAmC,CACzC8G,WAAO,EACPC,SAAK,EACLqiB,kBAAkB,GAGZppB,EAAAA,oBAAsB,IAAI6E,EAAAA,aAE1B7E,EAAAA,0BAA4B,IAAI6E,EAAAA,aAEhC7E,EAAAA,UAAY,IAAI6E,EAAAA,aAEhB7E,EAAAA,kBAAoB,IAAI6E,EAAAA,aAgB9B7E,EAAK0G,SAAS,CAAEuB,QAAS,WAAM,SAAKg2C,UAAUh2C,SAAAA,IAE9CjI,EAAKk+C,iBAAmB,IAAIt5C,EAAAA,iBAAgB,SAACkC,EAAOC,GAAQ,SAAKX,YAAYU,EAAOC,EAAAA,IACpF/G,EAAK0G,SAAS1G,EAAKk+C,kBAEnBl+C,EAAK6H,kBAAoB,IAAI9C,EAAAA,iBAC7B/E,EAAK6H,kBAAkBC,aAAY,WAAM,SAAKq2C,0BAAAA,IAC9Cn+C,EAAK0G,SAAS1G,EAAK6H,mBAEnB7H,EAAK0G,SAAS0zB,EAAczzB,UAAS,WAAM,SAAKy3C,cAAAA,KAChDp+C,EAAK0G,SAAS0zB,EAAcjW,QAAQ4N,kBAAiB,iBAAM,OAAc,QAAdzvB,EAAAA,EAAK27C,iBAAAA,IAAS37C,OAAAA,EAAAA,EAAEU,OAAAA,KAC3EhD,EAAK0G,SAASke,EAAewD,gBAAe,WAAM,SAAKi2B,uBAAAA,KACvDr+C,EAAK0G,SAAS1G,EAAKukB,iBAAiB+5B,kBAAiB,WAAM,SAAKC,mBAAAA,KAKhEv+C,EAAK0G,SAAS8+B,EAAkBhR,wBAAuB,WAAM,SAAK4pB,cAAAA,KAClEp+C,EAAK0G,SAAS8+B,EAAkB/Q,qBAAoB,WAAM,SAAK2pB,cAAAA,KAG/Dp+C,EAAKi+C,UAAU/0B,iBAAgB,SAAA5mB,GAAK,SAAKkqB,YAAYlqB,EAAEwE,MAAOxE,EAAEyE,KAAAA,EAAK,IAIrE/G,EAAK0G,UAAAA,EAAS,EAAAqB,0BAAyBvE,OAAQ,UAAU,WAAM,SAAK26C,0BAAAA,KAIhE,yBAA0B36C,OAAQ,CACpC,IAAM6T,EAAW,IAAImnC,sBAAqB,SAAAl8C,GAAK,SAAKm8C,sBAAsBn8C,EAAEA,EAAE2D,OAAS,MAAK,CAAEy4C,UAAW,IACzGrnC,EAASsnC,QAAQ/yC,GACjB5L,EAAK0G,SAAS,CAAEuB,QAAS,WAAM,SAAS22C,YAAAA,G,SA+I9C,QAvNmC52C,EAAAA,EAAAA,GAmBjCnG,OAAAA,eAAWyC,EAAAA,UAAA,qBAAkB,C,IAA7B,WAA6D,OAAOnE,KAAK0+C,oBAAoBhsC,KAAAA,E,gCAE7FhR,OAAAA,eAAWyC,EAAAA,UAAA,2BAAwB,C,IAAnC,WAAgF,OAAOnE,KAAK2+C,0BAA0BjsC,KAAAA,E,gCAEtHhR,OAAAA,eAAWyC,EAAAA,UAAA,WAAQ,C,IAAnB,WAAgE,OAAOnE,KAAK0iB,UAAUhQ,KAAAA,E,gCAEtFhR,OAAAA,eAAWyC,EAAAA,UAAA,mBAAgB,C,IAA3B,WAAwE,OAAOnE,KAAK4+C,kBAAkBlsC,KAAAA,E,gCAEtGhR,OAAAA,eAAWyC,EAAAA,UAAA,aAAU,C,IAArB,WAA6C,OAAOnE,KAAK89C,UAAU76C,UAAAA,E,gCAiD3DkB,EAAAA,UAAAA,sBAAR,SAA8BqwC,GAC5Bx0C,KAAK6+C,eAAAA,IAAYrK,EAAMsK,eAA4D,IAA5BtK,EAAMuK,mBAA4BvK,EAAMsK,eAG1F9+C,KAAK6+C,WAAc7+C,KAAKokB,iBAAiB0L,cAC5C9vB,KAAKokB,iBAAiBC,WAGnBrkB,KAAK6+C,WAAa7+C,KAAKg/C,oBAC1Bh/C,KAAKqsB,YAAY,EAAGrsB,KAAKwe,UAAY,GACrCxe,KAAKg/C,mBAAAA,EAAoB,EAItB76C,EAAAA,UAAAA,YAAP,SAAmBwC,EAAeC,EAAaq4C,QAAAA,IAAAA,IAAAA,GAAAA,GACzCj/C,KAAK6+C,UACP7+C,KAAKg/C,mBAAAA,GAGFC,IACHj/C,KAAKk/C,yBAAAA,GAEPl/C,KAAK+9C,iBAAiB/zC,QAAQrD,EAAOC,EAAK5G,KAAKwe,WAAAA,EAGzCra,EAAAA,UAAAA,YAAR,SAAoBwC,EAAeC,GACjC5G,KAAK89C,UAAUpE,WAAW/yC,EAAOC,GAG7B5G,KAAKm/C,yBACPn/C,KAAK89C,UAAU90B,mBAAmBhpB,KAAKo/C,gBAAgBz4C,MAAO3G,KAAKo/C,gBAAgBx4C,IAAK5G,KAAKo/C,gBAAgBn2B,kBAC7GjpB,KAAKm/C,wBAAAA,GAIFn/C,KAAKk/C,yBACRl/C,KAAK2+C,0BAA0B9nC,KAAK,CAAElQ,MAAKxE,EAAEyE,IAAGzC,IAElDnE,KAAK0iB,UAAU7L,KAAK,CAAElQ,MAAKxE,EAAEyE,IAAGzC,IAChCnE,KAAKk/C,yBAAAA,CAA0B,EAG1B/6C,EAAAA,UAAAA,OAAP,SAAcxB,EAAcD,GAC1B1C,KAAKwe,UAAY9b,EACjB1C,KAAKq/C,qBAAAA,EAGCl7C,EAAAA,UAAAA,sBAAR,WACEnE,KAAK89C,UAAU7X,mBACfjmC,KAAKqsB,YAAY,EAAGrsB,KAAKwe,UAAY,GACrCxe,KAAKq/C,qBAAAA,EAGCl7C,EAAAA,UAAAA,oBAAR,WAEMnE,KAAK89C,UAAU76C,WAAWktB,cAAgBnwB,KAAKs/C,cAAgBt/C,KAAK89C,UAAU76C,WAAWqtB,eAAiBtwB,KAAKu/C,eAGnHv/C,KAAK0+C,oBAAoB7nC,KAAK7W,KAAK89C,UAAU76C,WAAAA,EAGxCkB,EAAAA,UAAAA,QAAP,WACEhC,EAAAA,UAAM2F,QAAOjG,KAAA,OAGRsC,EAAAA,UAAAA,YAAP,SAAmBkkB,GAAnB,WAEEroB,KAAK89C,UAAUh2C,UACf9H,KAAK89C,UAAYz1B,EACjBroB,KAAK89C,UAAU/0B,iBAAgB,SAAA5mB,GAAK,OAAAgC,EAAKkoB,YAAYlqB,EAAEwE,MAAOxE,EAAEyE,KAAAA,EAAK,IAGrE5G,KAAKm/C,wBAAAA,EACLn/C,KAAKi+C,cAAAA,EAGA95C,EAAAA,UAAAA,mBAAP,SAA0B+Z,GACxB,OAAOle,KAAK+9C,iBAAiBrpB,mBAAmBxW,EAAAA,EAG1C/Z,EAAAA,UAAAA,aAAR,WACMnE,KAAK6+C,UACP7+C,KAAKg/C,mBAAAA,EAELh/C,KAAKqsB,YAAY,EAAGrsB,KAAKwe,UAAY,IAIlCra,EAAAA,UAAAA,kBAAP,W,QACmC,QAAjCA,EAAc,QAAdhC,EAAAA,KAAK27C,iBAAAA,IAAS37C,OAAAA,EAAAA,EAAE8tB,yBAAAA,IAAiB9rB,GAAAA,EAAAA,KAAAA,GACjCnE,KAAKi+C,cAAAA,EAGA95C,EAAAA,UAAAA,UAAP,SAAiBuJ,GACf1N,KAAK89C,UAAUn6B,UAAUjW,GACzB1N,KAAKi+C,cAAAA,EAGA95C,EAAAA,UAAAA,yBAAP,WAGEnE,KAAKokB,iBAAiBC,UAEtBrkB,KAAK89C,UAAUE,2BACfh+C,KAAKqsB,YAAY,EAAGrsB,KAAKwe,UAAY,IAGhCra,EAAAA,UAAAA,SAAP,SAAgBxB,EAAcD,GAC5B1C,KAAK89C,UAAUt3C,SAAS7D,EAAMD,GAC9B1C,KAAKi+C,cAAAA,EAIA95C,EAAAA,UAAAA,kBAAP,WACEnE,KAAK89C,UAAUM,mBAAAA,EAGVj6C,EAAAA,UAAAA,OAAP,WACEnE,KAAK89C,UAAUv2C,QAAAA,EAGVpD,EAAAA,UAAAA,QAAP,WACEnE,KAAK89C,UAAUn1B,SAAAA,EAGVxkB,EAAAA,UAAAA,mBAAP,SAA0BwC,EAAqCC,EAAmCqiB,GAChGjpB,KAAKo/C,gBAAgBz4C,MAAQA,EAC7B3G,KAAKo/C,gBAAgBx4C,IAAMA,EAC3B5G,KAAKo/C,gBAAgBn2B,iBAAmBA,EACxCjpB,KAAK89C,UAAU90B,mBAAmBriB,EAAOC,EAAKqiB,EAAAA,EAGzC9kB,EAAAA,UAAAA,aAAP,WACEnE,KAAK89C,UAAU37B,cAAAA,EAGVhe,EAAAA,UAAAA,MAAP,WACEnE,KAAK89C,UAAUj7C,OAAAA,EArNOmK,EAAAA,CAiCrBxI,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,kBACAA,EAAAA,EAAAA,EAAAA,oBACAA,EAAAA,EAAAA,EAAAA,iBApCQg7C,EAAb,CAAA/lC,CAAmC9U,EAAAA,YAAtBR,EAAAA,cAAAA,CAAAq7C,E,g+BCbb,cACA96C,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAhF,EAAAA,EAAAA,MACAqX,EAAAA,EAAAA,MACAuC,EAAAA,EAAAA,MACAiG,EAAAA,EAAAA,KACA/R,EAAAA,EAAAA,MAwBM8xC,EAA0BjwB,OAAOC,aAAa,KAC9CiwB,EAA+B,IAAI5+C,OAAO2+C,EAAyB,KA4BzE9/B,EAAAA,SAAAA,GAmDE,WACmB/M,EACAuJ,EACAy8B,EACgB3mC,EACFumB,EACC7gB,EACE0E,EACDzZ,GARnC,MAUET,EAAAA,KAAAA,OAAO,K,OATUtC,EAAAA,SAAAA,EACAA,EAAAA,eAAAA,EACAA,EAAAA,WAAAA,EACgBA,EAAAA,eAAAA,EACFA,EAAAA,aAAAA,EACCA,EAAAA,cAAAA,EACEA,EAAAA,gBAAAA,EACDA,EAAAA,eAAAA,EAlD3BA,EAAAA,kBAA4B,EAqB5BA,EAAAA,UAAAA,EAKAA,EAAAA,UAAsB,IAAI8E,EAAAA,SAE1B9E,EAAAA,oBAA8B,EAC9BA,EAAAA,kBAAAA,EACAA,EAAAA,wBAAAA,EACAA,EAAAA,sBAAAA,EAEAA,EAAAA,uBAAyBA,EAAK0G,SAAS,IAAI3B,EAAAA,cAE3C/E,EAAAA,iBAAmBA,EAAK0G,SAAS,IAAI3B,EAAAA,cAErC/E,EAAAA,mBAAqBA,EAAK0G,SAAS,IAAI3B,EAAAA,cAEvC/E,EAAAA,sBAAwBA,EAAK0G,SAAS,IAAI3B,EAAAA,cAgBhD/E,EAAK0c,mBAAqB,SAAApa,GAAS,SAAK2V,aAAapF,EAAAA,EACrD7S,EAAK8/C,iBAAmB,SAAAx9C,GAAS,SAAKy9C,WAAWltC,EAAAA,EACjD7S,EAAK24B,aAAaqnB,aAAY,WACxBhgD,EAAKmmB,cACPnmB,EAAK+tB,gBAAAA,IAGT/tB,EAAKigD,cAAgBjgD,EAAKoS,eAAe7J,OAAOC,MAAM03C,QAAO,YAAU,SAAKC,QAAQx3B,EAAAA,IACpF3oB,EAAK0G,SAAS1G,EAAKoS,eAAe+R,QAAQ4N,kBAAiB,SAAAzvB,GAAK,SAAK89C,kBAAkB99C,EAAAA,KAEvFtC,EAAK4pB,SAEL5pB,EAAKqgD,OAAS,IAAIx7C,EAAAA,eAAe7E,EAAKoS,gBACtCpS,EAAKsgD,qBAAuB,EAzBX,CAu4BrB,QA37BsCt4C,EAAAA,EAAAA,GA2CpCnG,OAAAA,eAAWyC,EAAAA,UAAA,wBAAqB,C,IAAhC,WAAqD,OAAOnE,KAAKogD,uBAAuB1tC,KAAAA,E,gCAExFhR,OAAAA,eAAWyC,EAAAA,UAAA,kBAAe,C,IAA1B,WAAqE,OAAOnE,KAAKqgD,iBAAiB3tC,KAAAA,E,gCAElGhR,OAAAA,eAAWyC,EAAAA,UAAA,oBAAiB,C,IAA5B,WAA+C,OAAOnE,KAAK2iB,mBAAmBjQ,KAAAA,E,gCAE9EhR,OAAAA,eAAWyC,EAAAA,UAAA,uBAAoB,C,IAA/B,WAA+E,OAAOnE,KAAKsgD,sBAAsB5tC,KAAAA,E,gCA+B1GvO,EAAAA,UAAAA,QAAP,WACEnE,KAAKugD,2BAAAA,EAGAp8C,EAAAA,UAAAA,MAAP,WACEnE,KAAK4tB,gBAAAA,EAOAzpB,EAAAA,UAAAA,QAAP,WACEnE,KAAK4tB,iBACL5tB,KAAKwgD,UAAAA,CAAW,EAMXr8C,EAAAA,UAAAA,OAAP,WACEnE,KAAKwgD,UAAAA,CAAW,EAGlB9+C,OAAAA,eAAWyC,EAAAA,UAAA,iBAAc,C,IAAzB,WAA4D,OAAOnE,KAAKkgD,OAAOO,mBAAAA,E,gCAC/E/+C,OAAAA,eAAWyC,EAAAA,UAAA,eAAY,C,IAAvB,WAA0D,OAAOnE,KAAKkgD,OAAOQ,iBAAAA,E,gCAK7Eh/C,OAAAA,eAAWyC,EAAAA,UAAA,eAAY,C,IAAvB,WACE,IAAMwC,EAAQ3G,KAAKkgD,OAAOO,oBACpB75C,EAAM5G,KAAKkgD,OAAOQ,kBACxB,SAAK/5C,IAAUC,GAGRD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,K,gCAMjDlF,OAAAA,eAAWyC,EAAAA,UAAA,gBAAa,C,IAAxB,WACE,IAAMwC,EAAQ3G,KAAKkgD,OAAOO,oBACpB75C,EAAM5G,KAAKkgD,OAAOQ,kBACxB,IAAK/5C,IAAUC,EACb,MAAO,GAGT,IAAMwB,EAASpI,KAAKiS,eAAe7J,OAC7BnI,EAAmB,GAEzB,GAAkC,IAA9BD,KAAKmgD,qBAA+C,CAEtD,GAAIx5C,EAAM,KAAOC,EAAI,GACnB,MAAO,GAOT,IAFA,IAAMi0B,EAAWl0B,EAAM,GAAKC,EAAI,GAAKD,EAAM,GAAKC,EAAI,GAC9Ck0B,EAASn0B,EAAM,GAAKC,EAAI,GAAKA,EAAI,GAAKD,EAAM,GACzC7B,EAAI6B,EAAM,GAAI7B,GAAK8B,EAAI,GAAI9B,IAAK,CACvC,IAAM67C,EAAWv4C,EAAOgC,4BAA4BtF,GAAAA,EAAS+1B,EAAUC,GACvE76B,EAAO8I,KAAK43C,EAAAA,CAAAA,KAET,CAEL,IAAM9O,EAAiBlrC,EAAM,KAAOC,EAAI,GAAKA,EAAI,UAIjD,IAHA3G,EAAO8I,KAAKX,EAAOgC,4BAA4BzD,EAAM,MAAUA,EAAM,GAAIkrC,IAGhE/sC,EAAI6B,EAAM,GAAK,EAAG7B,GAAK8B,EAAI,GAAK,EAAG9B,IAAK,CAC/C,IAAMygB,EAAand,EAAOC,MAAM5I,IAAIqF,GAC9B67C,EAAWv4C,EAAOgC,4BAA4BtF,GAAAA,IAChDygB,MAAAA,OAAAA,EAAAA,EAAYiV,WACdv6B,EAAOA,EAAO6F,OAAS,IAAM66C,EAE7B1gD,EAAO8I,KAAK43C,EAKZh6C,CAAAA,EAAM,KAAOC,EAAI,KACb2e,EAAand,EAAOC,MAAM5I,IAAImH,EAAI,IAClC+5C,EAAWv4C,EAAOgC,4BAA4BxD,EAAI,MAAU,EAAGA,EAAI,IACrE2e,GAAcA,EAAYiV,UAC5Bv6B,EAAOA,EAAO6F,OAAS,IAAM66C,EAE7B1gD,EAAO8I,KAAK43C,GAWlB,QAJwB1gD,EAAOqR,KAAI,YACjC,OAAOoE,EAAK5K,QAAQ40C,EAA8B,QACjDzc,KAAKniB,EAAQmO,UAAY,OAAS,O,gCAQhC9qB,EAAAA,UAAAA,eAAP,WACEnE,KAAKkgD,OAAOtyB,iBACZ5tB,KAAKugD,4BACLvgD,KAAKgK,UACLhK,KAAK2iB,mBAAmB9L,MAAAA,EAQnB1S,EAAAA,UAAAA,QAAP,SAAey8C,GAAf,WAEO5gD,KAAKiyB,yBACRjyB,KAAKiyB,uBAAyB5uB,OAAO8a,uBAAsB,WAAM,OAAAha,EAAKwuB,UAAAA,KAKpE7R,EAAQ0F,SAAWo6B,GACC5gD,KAAKqM,cACTvG,QAChB9F,KAAKogD,uBAAuBvpC,KAAK7W,KAAKqM,cAAAA,EASpClI,EAAAA,UAAAA,SAAR,WACEnE,KAAKiyB,4BAAAA,EACLjyB,KAAKqgD,iBAAiBxpC,KAAK,CACzBlQ,MAAO3G,KAAKkgD,OAAOO,oBACnB75C,IAAK5G,KAAKkgD,OAAOQ,kBACjBz3B,iBAAgD,IAA9BjpB,KAAKmgD,sBAAAA,EAQnBh8C,EAAAA,UAAAA,oBAAR,SAA4BuO,GAC1B,IAAMsJ,EAAShc,KAAK6gD,sBAAsBnuC,GACpC/L,EAAQ3G,KAAKkgD,OAAOO,oBACpB75C,EAAM5G,KAAKkgD,OAAOQ,kBAExB,SAAK/5C,GAAUC,GAAQoV,IAIhBhc,KAAK8gD,sBAAsB9kC,EAAQrV,EAAOC,EAAAA,EAG5CzC,EAAAA,UAAAA,kBAAP,SAAyB6R,EAAWC,GAClC,IAAMtP,EAAQ3G,KAAKkgD,OAAOO,oBACpB75C,EAAM5G,KAAKkgD,OAAOQ,kBACxB,SAAK/5C,IAAUC,IAGR5G,KAAK8gD,sBAAsB,CAAC9qC,EAAGC,GAAItP,EAAOC,EAAAA,EAGzCzC,EAAAA,UAAAA,sBAAV,SAAgC6X,EAA0BrV,EAAyBC,GACjF,OAAQoV,EAAO,GAAKrV,EAAM,IAAMqV,EAAO,GAAKpV,EAAI,IAC3CD,EAAM,KAAOC,EAAI,IAAMoV,EAAO,KAAOrV,EAAM,IAAMqV,EAAO,IAAMrV,EAAM,IAAMqV,EAAO,GAAKpV,EAAI,IAC1FD,EAAM,GAAKC,EAAI,IAAMoV,EAAO,KAAOpV,EAAI,IAAMoV,EAAO,GAAKpV,EAAI,IAC7DD,EAAM,GAAKC,EAAI,IAAMoV,EAAO,KAAOrV,EAAM,IAAMqV,EAAO,IAAMrV,EAAM,IAOjExC,EAAAA,UAAAA,oBAAR,SAA4BuO,EAAmBquC,G,QAEvCltC,EAAyC,QAAjC/O,EAA2B,QAA3B5C,EAAAA,KAAK02C,WAAWr+B,mBAAAA,IAAWrY,OAAAA,EAAAA,EAAEwW,YAAAA,IAAI5T,OAAAA,EAAAA,EAAE+O,MACjD,GAAIA,EAIF,OAHA7T,KAAKkgD,OAAOzyB,eAAiB,CAAC5Z,EAAMlN,MAAMqP,EAAI,EAAGnC,EAAMlN,MAAMsP,EAAI,GACjEjW,KAAKkgD,OAAO/E,sBAAAA,EAAuB,EAAA6F,gBAAentC,EAAO7T,KAAKiS,eAAetP,MAC7E3C,KAAKkgD,OAAOvyB,kBAAAA,GAAe5gB,EAI7B,IAAMiP,EAAShc,KAAK6gD,sBAAsBnuC,GAC1C,QAAIsJ,IACFhc,KAAKihD,cAAcjlC,EAAQ+kC,GAC3B/gD,KAAKkgD,OAAOvyB,kBAAAA,GAAe5gB,EACpB,EAQJ5I,EAAAA,UAAAA,UAAP,WACEnE,KAAKkgD,OAAOhF,mBAAAA,EACZl7C,KAAKgK,UACLhK,KAAK2iB,mBAAmB9L,MAAAA,EAGnB1S,EAAAA,UAAAA,YAAP,SAAmBwC,EAAeC,GAChC5G,KAAKkgD,OAAOtyB,iBACZjnB,EAAQhD,KAAKC,IAAI+C,EAAO,GACxBC,EAAMjD,KAAKmP,IAAIlM,EAAK5G,KAAKiS,eAAe7J,OAAOC,MAAMvC,OAAS,GAC9D9F,KAAKkgD,OAAOzyB,eAAiB,CAAC,EAAG9mB,GACjC3G,KAAKkgD,OAAOvyB,aAAe,CAAC3tB,KAAKiS,eAAetP,KAAMiE,GACtD5G,KAAKgK,UACLhK,KAAK2iB,mBAAmB9L,MAAAA,EAOlB1S,EAAAA,UAAAA,QAAR,SAAgBqkB,GACOxoB,KAAKkgD,OAAOH,OAAOv3B,IAEtCxoB,KAAKgK,SAAAA,EAQD7F,EAAAA,UAAAA,sBAAR,SAA8BuO,GAC5B,IAAMsJ,EAAShc,KAAK2X,cAAcsE,UAAUvJ,EAAO1S,KAAKmc,eAAgBnc,KAAKiS,eAAetP,KAAM3C,KAAKiS,eAAevP,MAAAA,GACtH,GAAKsZ,EAUL,OALAA,EAAO,KACPA,EAAO,KAGPA,EAAO,IAAMhc,KAAKiS,eAAe7J,OAAOiC,MACjC2R,CAAAA,EAQD7X,EAAAA,UAAAA,2BAAR,SAAmCuO,GACjC,IAAI0kC,GAAAA,EAAS,EAAA7d,4BAA2Bl2B,OAAQqP,EAAO1S,KAAKmc,gBAAgB,GACtE+kC,EAAiBlhD,KAAK4C,eAAeK,WAAWqtB,aACtD,OAAI8mB,GAAU,GAAKA,GAAU8J,EACpB,GAEL9J,EAAS8J,IACX9J,GAAU8J,GAGZ9J,EAASzzC,KAAKmP,IAAInP,KAAKC,IAAIwzC,GAzYG,SA0Y9BA,GA1Y8B,IA2YbzzC,KAAKsoB,IAAImrB,GAAWzzC,KAAK+N,MAAe,GAAT0lC,GAAAA,EAQ3CjzC,EAAAA,UAAAA,qBAAP,SAA4BuO,GAC1B,OAAIoO,EAAQqN,MACHzb,EAAMoY,QAAU9qB,KAAKqc,gBAAgBmB,WAAW2jC,8BAGlDzuC,EAAMqY,QAAAA,EAOR5mB,EAAAA,UAAAA,YAAP,SAAmBuO,GAIjB,GAHA1S,KAAKohD,oBAAsB1uC,EAAM2uC,WAGZ,IAAjB3uC,EAAM2T,SAAgBrmB,KAAKgmB,eAKV,IAAjBtT,EAAM2T,OAAV,CAKA,IAAKrmB,KAAKwgD,SAAU,CAClB,IAAKxgD,KAAK6rB,qBAAqBnZ,GAC7B,OAIFA,EAAMpG,iBAIRoG,CAAAA,EAAMxJ,iBAGNlJ,KAAKshD,kBAAoB,EAErBthD,KAAKwgD,UAAY9tC,EAAMqY,SACzB/qB,KAAKuhD,oBAAoB7uC,GAEJ,IAAjBA,EAAM8uC,OACRxhD,KAAKyhD,eAAe/uC,GACM,IAAjBA,EAAM8uC,OACfxhD,KAAK0hD,eAAehvC,GACM,IAAjBA,EAAM8uC,QACfxhD,KAAK2hD,eAAejvC,GAIxB1S,KAAK4hD,yBACL5hD,KAAKgK,SAAAA,EAAQ,GAMP7F,EAAAA,UAAAA,uBAAR,sBAEMnE,KAAKmc,eAAekL,gBACtBrnB,KAAKmc,eAAekL,cAAcxhB,iBAAiB,YAAa7F,KAAKuc,oBACrEvc,KAAKmc,eAAekL,cAAcxhB,iBAAiB,UAAW7F,KAAK2/C,mBAErE3/C,KAAK6hD,yBAA2Bx+C,OAAO2kC,aAAY,WAAM,SAAK8Z,aAAAA,GA3crC,KAidnB39C,EAAAA,UAAAA,0BAAR,WACMnE,KAAKmc,eAAekL,gBACtBrnB,KAAKmc,eAAekL,cAAcze,oBAAoB,YAAa5I,KAAKuc,oBACxEvc,KAAKmc,eAAekL,cAAcze,oBAAoB,UAAW5I,KAAK2/C,mBAExE/X,cAAc5nC,KAAK6hD,0BACnB7hD,KAAK6hD,8BAAAA,CAA2B90C,EAQ1B5I,EAAAA,UAAAA,oBAAR,SAA4BuO,GACtB1S,KAAKkgD,OAAOzyB,iBACdztB,KAAKkgD,OAAOvyB,aAAe3tB,KAAK6gD,sBAAsBnuC,GAAAA,EASlDvO,EAAAA,UAAAA,eAAR,SAAuBuO,GAOrB,GANA1S,KAAKkgD,OAAO/E,qBAAuB,EACnCn7C,KAAKkgD,OAAOhF,mBAAAA,EACZl7C,KAAKmgD,qBAAuBngD,KAAKusB,mBAAmB7Z,GAAS,EAAuB,EAGpF1S,KAAKkgD,OAAOzyB,eAAiBztB,KAAK6gD,sBAAsBnuC,GACnD1S,KAAKkgD,OAAOzyB,eAAjB,CAGAztB,KAAKkgD,OAAOvyB,kBAAAA,EAGZ,IAAMjY,EAAO1V,KAAKiS,eAAe7J,OAAOC,MAAM5I,IAAIO,KAAKkgD,OAAOzyB,eAAe,IACxE/X,GAKDA,EAAK5P,SAAW9F,KAAKkgD,OAAOzyB,eAAe,IAMM,IAAjD/X,EAAKqsC,SAAS/hD,KAAKkgD,OAAOzyB,eAAe,KAC3CztB,KAAKkgD,OAAOzyB,eAAe,OAQvBtpB,EAAAA,UAAAA,eAAR,SAAuBuO,GACjB1S,KAAKgiD,oBAAoBtvC,GAAAA,KAC3B1S,KAAKmgD,qBAAuB,IASxBh8C,EAAAA,UAAAA,eAAR,SAAuBuO,GACrB,IAAMsJ,EAAShc,KAAK6gD,sBAAsBnuC,GACtCsJ,IACFhc,KAAKmgD,qBAAuB,EAC5BngD,KAAKiiD,cAAcjmC,EAAO,MAQvB7X,EAAAA,UAAAA,mBAAP,SAA0BuO,GACxB,OAAOA,EAAMoY,UAAYhK,EAAQqN,OAASnuB,KAAKqc,gBAAgBmB,WAAW2jC,8BAAAA,EAQpEh9C,EAAAA,UAAAA,aAAR,SAAqBuO,GAQnB,GAJAA,EAAMvJ,2BAIDnJ,KAAKkgD,OAAOzyB,eAAjB,CAMA,IAAMy0B,EAAuBliD,KAAKkgD,OAAOvyB,aAAe,CAAC3tB,KAAKkgD,OAAOvyB,aAAa,GAAI3tB,KAAKkgD,OAAOvyB,aAAa,IAAM,KAIrH,GADA3tB,KAAKkgD,OAAOvyB,aAAe3tB,KAAK6gD,sBAAsBnuC,GACjD1S,KAAKkgD,OAAOvyB,aAAjB,CAMkC,IAA9B3tB,KAAKmgD,qBACHngD,KAAKkgD,OAAOvyB,aAAa,GAAK3tB,KAAKkgD,OAAOzyB,eAAe,GAC3DztB,KAAKkgD,OAAOvyB,aAAa,GAAK,EAE9B3tB,KAAKkgD,OAAOvyB,aAAa,GAAK3tB,KAAKiS,eAAetP,KAEb,IAA9B3C,KAAKmgD,sBACdngD,KAAKmiD,gBAAgBniD,KAAKkgD,OAAOvyB,cAInC3tB,KAAKshD,kBAAoBthD,KAAKoiD,2BAA2B1vC,GAKvB,IAA9B1S,KAAKmgD,uBACHngD,KAAKshD,kBAAoB,EAC3BthD,KAAKkgD,OAAOvyB,aAAa,GAAK3tB,KAAKiS,eAAetP,KACzC3C,KAAKshD,kBAAoB,IAClCthD,KAAKkgD,OAAOvyB,aAAa,GAAK,IAOlC,IAAMvlB,EAASpI,KAAKiS,eAAe7J,OACnC,GAAIpI,KAAKkgD,OAAOvyB,aAAa,GAAKvlB,EAAOC,MAAMvC,OAAQ,CACrD,IAAM4P,EAAOtN,EAAOC,MAAM5I,IAAIO,KAAKkgD,OAAOvyB,aAAa,IACnDjY,GAAuD,IAA/CA,EAAKqsC,SAAS/hD,KAAKkgD,OAAOvyB,aAAa,KACjD3tB,KAAKkgD,OAAOvyB,aAAa,IAKxBu0B,CAAAA,GACHA,EAAqB,KAAOliD,KAAKkgD,OAAOvyB,aAAa,IACrDu0B,EAAqB,KAAOliD,KAAKkgD,OAAOvyB,aAAa,IACrD3tB,KAAKgK,SAAAA,EAAQ,MA5CbhK,KAAKgK,SAAAA,EAAQ,GAoDT7F,EAAAA,UAAAA,YAAR,WACE,GAAKnE,KAAKkgD,OAAOvyB,cAAiB3tB,KAAKkgD,OAAOzyB,gBAG1CztB,KAAKshD,kBAAmB,CAC1BthD,KAAKsgD,sBAAsBzpC,KAAK,CAAE2R,OAAQxoB,KAAKshD,kBAAmBz4B,qBAAqB,IAKvF,IAAMzgB,EAASpI,KAAKiS,eAAe7J,OAC/BpI,KAAKshD,kBAAoB,GACO,IAA9BthD,KAAKmgD,uBACPngD,KAAKkgD,OAAOvyB,aAAa,GAAK3tB,KAAKiS,eAAetP,MAEpD3C,KAAKkgD,OAAOvyB,aAAa,GAAKhqB,KAAKmP,IAAI1K,EAAOiC,MAAQrK,KAAKiS,eAAevP,KAAM0F,EAAOC,MAAMvC,OAAS,KAEpE,IAA9B9F,KAAKmgD,uBACPngD,KAAKkgD,OAAOvyB,aAAa,GAAK,GAEhC3tB,KAAKkgD,OAAOvyB,aAAa,GAAKvlB,EAAOiC,OAEvCrK,KAAKgK,SAAAA,CAAAA,EAQD7F,EAAAA,UAAAA,WAAR,SAAmBuO,GACjB,IAAM2vC,EAAc3vC,EAAM2uC,UAAYrhD,KAAKohD,oBAI3C,GAFAphD,KAAKugD,4BAEDvgD,KAAKqM,cAAcvG,QAAU,GAAKu8C,EAhpBP,KAgpBmD3vC,EAAMoY,QAAU9qB,KAAKqc,gBAAgBiiB,UAAU,wBAC/H,GAAIt+B,KAAKiS,eAAe7J,OAAOkd,QAAUtlB,KAAKiS,eAAe7J,OAAOiC,MAAO,CACzE,IAAMi4C,EAActiD,KAAK2X,cAAcsE,UACrCvJ,EACA1S,KAAK4S,SACL5S,KAAKiS,eAAetP,KACpB3C,KAAKiS,eAAevP,MAAAA,GAGtB,GAAI4/C,QAAAA,IAAeA,EAAY,aAAoBA,EAAY,GAAkB,CAC/E,IAAMv2B,GAAAA,EAAW,EAAAw2B,oBAAmBD,EAAY,GAAK,EAAGA,EAAY,GAAK,EAAGtiD,KAAKiS,eAAgBjS,KAAKw4B,aAAaptB,gBAAgB4gB,uBACnIhsB,KAAKw4B,aAAantB,iBAAiB0gB,GAAAA,EAAU,QAIjD/rB,KAAKwiD,8BAAAA,EAIDr+C,EAAAA,UAAAA,6BAAR,WACE,IAAMwC,EAAQ3G,KAAKkgD,OAAOO,oBACpB75C,EAAM5G,KAAKkgD,OAAOQ,kBAClB16B,KAAiBrf,IAAWC,GAAQD,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,IAE7Eof,EAQArf,GAAUC,IAIV5G,KAAKyiD,oBAAuBziD,KAAK0iD,kBACpC/7C,EAAM,KAAO3G,KAAKyiD,mBAAmB,IAAM97C,EAAM,KAAO3G,KAAKyiD,mBAAmB,IAChF77C,EAAI,KAAO5G,KAAK0iD,iBAAiB,IAAM97C,EAAI,KAAO5G,KAAK0iD,iBAAiB,IAExE1iD,KAAK2iD,uBAAuBh8C,EAAOC,EAAKof,IAfpChmB,KAAK4iD,kBACP5iD,KAAK2iD,uBAAuBh8C,EAAOC,EAAKof,EAAAA,EAkBtC7hB,EAAAA,UAAAA,uBAAR,SAA+BwC,EAAqCC,EAAmCof,GACrGhmB,KAAKyiD,mBAAqB97C,EAC1B3G,KAAK0iD,iBAAmB97C,EACxB5G,KAAK4iD,iBAAmB58B,EACxBhmB,KAAK2iB,mBAAmB9L,MAAAA,EAGlB1S,EAAAA,UAAAA,kBAAR,SAA0BhC,GAA1B,WACEnC,KAAK4tB,iBAKL5tB,KAAK8/C,cAAch4C,UACnB9H,KAAK8/C,cAAgB39C,EAAE0vB,aAAaxpB,MAAM03C,QAAO,YAAU,OAAA57C,EAAK67C,QAAQx3B,EAAAA,GAAAA,EAQlErkB,EAAAA,UAAAA,oCAAR,SAA4CohB,EAAyBvJ,GAEnE,IADA,IAAI6mC,EAAY7mC,EAAO,GACdlX,EAAI,EAAGkX,EAAO,IAAMlX,EAAGA,IAAK,CACnC,IAAM+C,EAAS0d,EAAWohB,SAAS7hC,EAAG9E,KAAK2yC,WAAWnR,WAAW17B,OAC/B,IAA9B9F,KAAK2yC,UAAUjtB,WAGjBm9B,IACSh7C,EAAS,GAAKmU,EAAO,KAAOlX,IAIrC+9C,GAAah7C,EAAS,EAG1B,QAAOg7C,CAAAA,EAGF1+C,EAAAA,UAAAA,aAAP,SAAoBsmB,EAAaC,EAAa5kB,GAC5C9F,KAAKkgD,OAAOtyB,iBACZ5tB,KAAKugD,4BACLvgD,KAAKkgD,OAAOzyB,eAAiB,CAAChD,EAAKC,GACnC1qB,KAAKkgD,OAAO/E,qBAAuBr1C,EACnC9F,KAAKgK,UACLhK,KAAKwiD,8BAAAA,EAGAr+C,EAAAA,UAAAA,iBAAP,SAAwBqH,GACjBxL,KAAK8iD,oBAAoBt3C,KACxBxL,KAAKgiD,oBAAoBx2C,GAAAA,IAC3BxL,KAAKgK,SAAAA,GAEPhK,KAAKwiD,+BAAAA,EAQDr+C,EAAAA,UAAAA,WAAR,SAAmB6X,EAA0B+kC,EAAuCgC,EAAyCC,GAE3H,QAAI,IAF8ED,IAAAA,GAAAA,QAAA,IAAyCC,IAAAA,GAAAA,KAEvHhnC,EAAO,IAAMhc,KAAKiS,eAAetP,MAArC,CAIA,IAAMyF,EAASpI,KAAKiS,eAAe7J,OAC7Bmd,EAAand,EAAOC,MAAM5I,IAAIuc,EAAO,IAC3C,GAAKuJ,EAAL,CAIA,IAAM7P,EAAOtN,EAAOgC,4BAA4B4R,EAAO,OAGnD6gC,EAAa78C,KAAKijD,oCAAoC19B,EAAYvJ,GAClE8gC,EAAWD,EAGTqG,EAAalnC,EAAO,GAAK6gC,EAC3BsG,EAAoB,EACpBC,EAAqB,EACrBC,EAAqB,EACrBC,EAAsB,EAE1B,GAAgC,MAA5B5tC,EAAK6tC,OAAO1G,GAAqB,CAEnC,KAAOA,EAAa,GAAqC,MAAhCnnC,EAAK6tC,OAAO1G,EAAa,IAChDA,IAEF,KAAOC,EAAWpnC,EAAK5P,QAAwC,MAA9B4P,EAAK6tC,OAAOzG,EAAW,IACtDA,GAAAA,KAEG,CAKL,IAAIjiB,EAAW7e,EAAO,GAClB8e,EAAS9e,EAAO,GAIkB,IAAlCuJ,EAAWG,SAASmV,KACtBsoB,IACAtoB,KAEkC,IAAhCtV,EAAWG,SAASoV,KACtBsoB,IACAtoB,KAIF,IAAMntB,EAAS4X,EAAWg4B,UAAUziB,GAAQh1B,OAO5C,IANI6H,EAAS,IACX21C,GAAuB31C,EAAS,EAChCmvC,GAAYnvC,EAAS,GAIhBktB,EAAW,GAAKgiB,EAAa,IAAM78C,KAAKwjD,qBAAqBj+B,EAAWohB,SAAS9L,EAAW,EAAG76B,KAAK2yC,aAAa,CACtHptB,EAAWohB,SAAS9L,EAAW,EAAG76B,KAAK2yC,WACvC,IAAM18B,EAASjW,KAAK2yC,UAAUnR,WAAW17B,OACP,IAA9B9F,KAAK2yC,UAAUjtB,YAEjBy9B,IACAtoB,KACS5kB,EAAS,IAGlBotC,GAAsBptC,EAAS,EAC/B4mC,GAAc5mC,EAAS,GAEzB4mC,IACAhiB,GAEF,MAAOC,EAASvV,EAAWzf,QAAUg3C,EAAW,EAAIpnC,EAAK5P,SAAW9F,KAAKwjD,qBAAqBj+B,EAAWohB,SAAS7L,EAAS,EAAG96B,KAAK2yC,aAAa,CAC9IptB,EAAWohB,SAAS7L,EAAS,EAAG96B,KAAK2yC,WACrC,IAAM/kC,EAAS5N,KAAK2yC,UAAUnR,WAAW17B,OACP,IAA9B9F,KAAK2yC,UAAUjtB,YAEjB09B,IACAtoB,KACSltB,EAAS,IAGlB01C,GAAuB11C,EAAS,EAChCkvC,GAAYlvC,EAAS,GAEvBkvC,IACAhiB,GAAAA,CAKJgiB,CAAAA,IAIA,IAAIn2C,EACAk2C,EACEqG,EACAC,EACAE,EAIFv9C,EAASnC,KAAKmP,IAAI9S,KAAKiS,eAAetP,KACxCm6C,EACED,EACAsG,EACAC,EACAC,EACAC,GAEJ,GAAKvC,GAA4E,KAA5CrrC,EAAKxG,MAAM2tC,EAAYC,GAAU2G,OAAtE,CAKA,GAAIV,GACY,IAAVp8C,GAA8C,KAA/B4e,EAAWytB,aAAa,GAAqB,CAC9D,IAAM0Q,EAAqBt7C,EAAOC,MAAM5I,IAAIuc,EAAO,GAAK,GACxD,GAAI0nC,GAAsBn+B,EAAWiV,WAA+E,KAAlEkpB,EAAmB1Q,aAAahzC,KAAKiS,eAAetP,KAAO,GAAqB,CAChI,IAAMghD,EAA2B3jD,KAAK4jD,WAAW,CAAC5jD,KAAKiS,eAAetP,KAAO,EAAGqZ,EAAO,GAAK,OAAI,GAAO,GACvG,GAAI2nC,EAA0B,CAC5B,IAAMvM,EAASp3C,KAAKiS,eAAetP,KAAOghD,EAAyBh9C,MACnEA,GAASywC,EACTtxC,GAAUsxC,CAAAA,CAAAA,CAOlB,IAAI4L,GACEr8C,EAAQb,IAAW9F,KAAKiS,eAAetP,MAAkE,KAA1D4iB,EAAWytB,aAAahzC,KAAKiS,eAAetP,KAAO,GAAqB,CACzH,IAAMkhD,EAAiBz7C,EAAOC,MAAM5I,IAAIuc,EAAO,GAAK,GACpD,IAAI6nC,MAAAA,OAAAA,EAAAA,EAAgBrpB,YAAgD,KAAnCqpB,EAAe7Q,aAAa,GAAqB,CAChF,IAAM8Q,EAAuB9jD,KAAK4jD,WAAW,CAAC,EAAG5nC,EAAO,GAAK,OAAI,GAAO,GACpE8nC,IACFh+C,GAAUg+C,EAAqBh+C,OAAAA,CAMvC,OAAO,CAAEa,MAAKgZ,EAAE7Z,OAAM+H,EAAA,KAQd1J,EAAAA,UAAAA,cAAV,SAAwB6X,EAA0B+kC,GAChD,IAAMgD,EAAe/jD,KAAK4jD,WAAW5nC,EAAQ+kC,GAC7C,GAAIgD,EAAc,CAEhB,KAAOA,EAAap9C,MAAQ,GAC1Bo9C,EAAap9C,OAAS3G,KAAKiS,eAAetP,KAC1CqZ,EAAO,KAEThc,KAAKkgD,OAAOzyB,eAAiB,CAACs2B,EAAap9C,MAAOqV,EAAO,IACzDhc,KAAKkgD,OAAO/E,qBAAuB4I,EAAaj+C,MAAAA,CAAAA,EAQ5C3B,EAAAA,UAAAA,gBAAR,SAAwB6X,GACtB,IAAM+nC,EAAe/jD,KAAK4jD,WAAW5nC,GAAAA,GACrC,GAAI+nC,EAAc,CAIhB,IAHA,IAAIppC,EAASqB,EAAO,GAGb+nC,EAAap9C,MAAQ,GAC1Bo9C,EAAap9C,OAAS3G,KAAKiS,eAAetP,KAC1CgY,IAKF,IAAK3a,KAAKkgD,OAAO9E,6BACf,KAAO2I,EAAap9C,MAAQo9C,EAAaj+C,OAAS9F,KAAKiS,eAAetP,MACpEohD,EAAaj+C,QAAU9F,KAAKiS,eAAetP,KAC3CgY,IAIJ3a,KAAKkgD,OAAOvyB,aAAe,CAAC3tB,KAAKkgD,OAAO9E,6BAA+B2I,EAAap9C,MAAQo9C,EAAap9C,MAAQo9C,EAAaj+C,OAAQ6U,EAAAA,CAAAA,EASlIxW,EAAAA,UAAAA,qBAAR,SAA6B68B,GAG3B,OAAwB,IAApBA,EAAKtb,YAGF1lB,KAAKqc,gBAAgBmB,WAAWwmC,cAAc1uC,QAAQ0rB,EAAKQ,aAAe,GAOzEr9B,EAAAA,UAAAA,cAAV,SAAwBuR,GACtB,IAAMuuC,EAAejkD,KAAKiS,eAAe7J,OAAO87C,uBAAuBxuC,GACjE7B,EAAsB,CAC1BlN,MAAO,CAAEqP,EAAG,EAAGC,EAAGguC,EAAanwC,OAC/BlN,IAAK,CAAEoP,EAAGhW,KAAKiS,eAAetP,KAAO,EAAGsT,EAAGguC,EAAaE,OAE1DnkD,KAAKkgD,OAAOzyB,eAAiB,CAAC,EAAGw2B,EAAanwC,OAC9C9T,KAAKkgD,OAAOvyB,kBAAAA,EACZ3tB,KAAKkgD,OAAO/E,sBAAAA,EAAuB,EAAA6F,gBAAentC,EAAO7T,KAAKiS,eAAetP,KAAAA,EAz7BpDqK,EAAAA,CAuDxBxI,EAAAA,EAAAA,EAAAA,gBACAA,EAAAA,EAAAA,EAAAA,cACAA,EAAAA,EAAAA,EAAAA,eACAA,EAAAA,EAAAA,EAAAA,iBACAA,EAAAA,EAAAA,EAAAA,iBA3DQ4/C,EAAb,CAAAzkC,CAAsCD,EAAAA,YAAzBvb,EAAAA,iBAAAA,CAAAigD,E,+MC9Db,IAAAt/C,EAAA,QAKaX,EAAAA,kBAAAA,EAAmB,EAAAkgD,iBAAkC,mBAarDlgD,EAAAA,qBAAAA,EAAsB,EAAAkgD,iBAAqC,sBAO3DlgD,EAAAA,eAAAA,EAAgB,EAAAkgD,iBAA+B,gBAQ/ClgD,EAAAA,gBAAAA,EAAiB,EAAAkgD,iBAAgC,iBAoCjDlgD,EAAAA,mBAAAA,EAAoB,EAAAkgD,iBAAmC,oBA6BvDlgD,EAAAA,eAAAA,EAAgB,EAAAkgD,iBAA+B,gBAQ/ClgD,EAAAA,yBAAAA,EAA0B,EAAAkgD,iBAAyC,yBArGnE,E,ggBCTb,cAGA7/C,EAAAA,WAiBE,WAC2B6X,GAAA,KAAAA,gBAAA,CAoC7B,QAjDE3a,OAAAA,eAAkBS,EAAA,eAAY,C,IAA9B,WACE,IAAKmiD,EAAaC,cAAe,CAC/B,IAAMC,EAAyCnhD,OAAeohD,cAAiBphD,OAAeqhD,mBAC9F,IAAKF,EAEH,OADAzzC,QAAQC,KAAK,4FACN,KAETszC,EAAaC,cAAgB,IAAIC,CAEnC,QAAOF,EAAaC,aAAAA,E,gCAQfpiD,EAAAA,UAAAA,cAAP,WACE,IAAM+L,EAAMo2C,EAAaK,aACzB,GAAKz2C,EAAL,CAGA,IAAM02C,EAAkB12C,EAAI22C,qBAC5B32C,EAAI42C,gBAAgB9kD,KAAK+kD,qBAAqB/kD,KAAKglD,gBAAgBhlD,KAAKqc,gBAAgBmB,WAAWynC,aAAa,SAAC78C,GAC/Gw8C,EAAgBx8C,OAASA,EACzBw8C,EAAgBM,QAAQh3C,EAAIi3C,aAC5BP,EAAgBj+C,MAAM,QAIlBxE,EAAAA,UAAAA,qBAAR,SAA6BijD,GAK3B,IAJA,IAAMC,EAAehiD,OAAOiiD,KAAKF,GAC3BG,EAAMF,EAAav/C,OACnB0/C,EAAQ,IAAIC,WAAWF,GAEpBzgD,EAAI,EAAGA,EAAIygD,EAAKzgD,IACvB0gD,EAAM1gD,GAAKugD,EAAaz2B,WAAW9pB,GAGrC,OAAO0gD,EAAMp9C,MAAAA,EAGPjG,EAAAA,UAAAA,gBAAR,SAAwBujD,GAKtB,OAHiBA,EAAQr0C,MAAM,KAGf,IApDPizC,EAAYx/C,EAAAA,CAkBpB+C,EAAAA,EAAAA,EAAAA,kBAlBQy8C,EAAb,CAAA9/C,GAAaL,EAAAA,aAAAA,CAAAmgD,E,sFCFb,IAAAx/C,EAAA,QAgBA+C,EAAAA,WAYE,WACU89C,GAAA,KAAAA,WAAA,EARH,KAAAC,gBAAkB,IAAI9gD,EAAAA,aAEtB,KAAA+gD,gBAAkB,IAAI/gD,EAAAA,aAEtB,KAAAghD,cAAgB,IAAIhhD,EAAAA,aAMzB9E,KAAK+lD,OAAS,IAAIC,MAAShmD,KAAK2lD,YAChC3lD,KAAKimD,YAAc,EACnBjmD,KAAKkmD,QAAU,CAuMnB,QAlNExkD,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAA8C,OAAOnC,KAAK4lD,gBAAgBlzC,KAAAA,E,gCAE1EhR,OAAAA,eAAWS,EAAAA,UAAA,WAAQ,C,IAAnB,WAA8C,OAAOnC,KAAK6lD,gBAAgBnzC,KAAAA,E,gCAE1EhR,OAAAA,eAAWS,EAAAA,UAAA,SAAM,C,IAAjB,WAAsC,OAAOnC,KAAK8lD,cAAcpzC,KAAAA,E,gCAUhEhR,OAAAA,eAAWS,EAAAA,UAAA,YAAS,C,IAApB,WACE,OAAOnC,KAAK2lD,UAAAA,E,IAGd,SAAqBQ,GAEnB,GAAInmD,KAAK2lD,aAAeQ,EAAxB,CAOA,IADA,IAAMC,EAAW,IAAIJ,MAAqBG,GACjCrhD,EAAI,EAAGA,EAAInB,KAAKmP,IAAIqzC,EAAcnmD,KAAK8F,QAAShB,IACvDshD,EAASthD,GAAK9E,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBvhD,IAEjD9E,KAAK+lD,OAASK,EACdpmD,KAAK2lD,WAAaQ,EAClBnmD,KAAKimD,YAAc,I,gCAGrBvkD,OAAAA,eAAWS,EAAAA,UAAA,SAAM,C,IAAjB,WACE,OAAOnC,KAAKkmD,OAAAA,E,IAGd,SAAkBI,GAChB,GAAIA,EAAYtmD,KAAKkmD,QACnB,IAAK,IAAIphD,EAAI9E,KAAKkmD,QAASphD,EAAIwhD,EAAWxhD,IACxC9E,KAAK+lD,OAAOjhD,QAAAA,EAGhB9E,KAAKkmD,QAAUI,CAAAA,E,gCAWVnkD,EAAAA,UAAAA,IAAP,SAAW8X,GACT,OAAOja,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBpsC,GAAAA,EAWnC9X,EAAAA,UAAAA,IAAP,SAAW8X,EAAe3O,GACxBtL,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBpsC,IAAU3O,CAAAA,EAQtCnJ,EAAAA,UAAAA,KAAP,SAAYmJ,GACVtL,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBrmD,KAAKkmD,UAAY56C,EAC9CtL,KAAKkmD,UAAYlmD,KAAK2lD,YACxB3lD,KAAKimD,cAAgBjmD,KAAKimD,YAAcjmD,KAAK2lD,WAC7C3lD,KAAK8lD,cAAcjvC,KAAK,IAExB7W,KAAKkmD,SAAAA,EASF/jD,EAAAA,UAAAA,QAAP,WACE,GAAInC,KAAKkmD,UAAYlmD,KAAK2lD,WACxB,MAAM,IAAIt/C,MAAM,4CAIlB,OAFArG,KAAKimD,cAAgBjmD,KAAKimD,YAAcjmD,KAAK2lD,WAC7C3lD,KAAK8lD,cAAcjvC,KAAK,GACjB7W,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBrmD,KAAKkmD,QAAU,KAMzDxkD,OAAAA,eAAWS,EAAAA,UAAA,SAAM,C,IAAjB,WACE,OAAOnC,KAAKkmD,UAAYlmD,KAAK2lD,UAAAA,E,gCAOxBxjD,EAAAA,UAAAA,IAAP,WACE,OAAOnC,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBrmD,KAAKkmD,UAAY,KAYpD/jD,EAAAA,UAAAA,OAAP,SAAcwE,EAAe4/C,G,IAAqB,aAAAzhD,EAAAA,UAAAA,OAAAA,IAAA5C,EAAAA,EAAAA,GAAAA,UAAAA,GAEhD,GAAIqkD,EAAa,CACf,IAAK,IAAIzhD,EAAI6B,EAAO7B,EAAI9E,KAAKkmD,QAAUK,EAAazhD,IAClD9E,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBvhD,IAAM9E,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBvhD,EAAIyhD,IAE9EvmD,KAAKkmD,SAAWK,EAChBvmD,KAAK4lD,gBAAgB/uC,KAAK,CAAEoD,MAAOtT,EAAO6hB,OAAQ+9B,GAIpD,KAASzhD,EAAI9E,KAAKkmD,QAAU,EAAGphD,GAAK6B,EAAO7B,IACzC9E,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBvhD,EAAI0hD,EAAM1gD,SAAW9F,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgBvhD,IAEzF,IAASA,EAAI,EAAGA,EAAI0hD,EAAM1gD,OAAQhB,IAChC9E,KAAK+lD,OAAO/lD,KAAKqmD,gBAAgB1/C,EAAQ7B,IAAM0hD,EAAM1hD,GAOvD,GALI0hD,EAAM1gD,QACR9F,KAAK6lD,gBAAgBhvC,KAAK,CAAEoD,MAAOtT,EAAO6hB,OAAQg+B,EAAM1gD,SAItD9F,KAAKkmD,QAAUM,EAAM1gD,OAAS9F,KAAK2lD,WAAY,CACjD,IAAMc,EAAezmD,KAAKkmD,QAAUM,EAAM1gD,OAAU9F,KAAK2lD,WACzD3lD,KAAKimD,aAAeQ,EACpBzmD,KAAKkmD,QAAUlmD,KAAK2lD,WACpB3lD,KAAK8lD,cAAcjvC,KAAK4vC,EAAAA,MAExBzmD,KAAKkmD,SAAWM,EAAM1gD,MAAAA,EAQnB3D,EAAAA,UAAAA,UAAP,SAAiBg5B,GACXA,EAAQn7B,KAAKkmD,UACf/qB,EAAQn7B,KAAKkmD,SAEflmD,KAAKimD,aAAe9qB,EACpBn7B,KAAKkmD,SAAW/qB,EAChBn7B,KAAK8lD,cAAcjvC,KAAKskB,EAAAA,EAGnBh5B,EAAAA,UAAAA,cAAP,SAAqBwE,EAAew0B,EAAeic,GACjD,KAAIjc,GAAS,GAAb,CAGA,GAAIx0B,EAAQ,GAAKA,GAAS3G,KAAKkmD,QAC7B,MAAM,IAAI7/C,MAAM,+BAElB,GAAIM,EAAQywC,EAAS,EACnB,MAAM,IAAI/wC,MAAM,gDAGlB,GAAI+wC,EAAS,EAAG,CACd,IAAK,IAAItyC,EAAIq2B,EAAQ,EAAGr2B,GAAK,EAAGA,IAC9B9E,KAAKL,IAAIgH,EAAQ7B,EAAIsyC,EAAQp3C,KAAKP,IAAIkH,EAAQ7B,IAEhD,IAAM4hD,EAAgB//C,EAAQw0B,EAAQic,EAAUp3C,KAAKkmD,QACrD,GAAIQ,EAAe,EAEjB,IADA1mD,KAAKkmD,SAAWQ,EACT1mD,KAAKkmD,QAAUlmD,KAAK2lD,YACzB3lD,KAAKkmD,UACLlmD,KAAKimD,cACLjmD,KAAK8lD,cAAcjvC,KAAK,QAI5B,IAAS/R,EAAI,EAAGA,EAAIq2B,EAAOr2B,IACzB9E,KAAKL,IAAIgH,EAAQ7B,EAAIsyC,EAAQp3C,KAAKP,IAAIkH,EAAQ7B,GAAAA,CAAAA,EAW5C3C,EAAAA,UAAAA,gBAAR,SAAwB8X,GACtB,OAAQja,KAAKimD,YAAchsC,GAASja,KAAK2lD,UAAAA,EAE7CxjD,CAxNA,CAAA0F,GAAa1D,EAAAA,aAAAA,CAAAA,E,6ECdbA,EAAAA,MAAAA,SAAgBwiD,EAASC,EAAQC,GAC/B,QAAI,IAD2BA,IAAAA,EAAAA,GACZ,iBAARD,EACT,OAAOA,EAIT,IAAME,EAAoBd,MAAMe,QAAQH,GAAO,GAAK,CAAC,EAErD,IAAK,IAAMplD,KAAOolD,EAEhBE,EAAatlD,GAAOqlD,GAAS,EAAID,EAAIplD,GAAQolD,EAAIplD,IAAQmlD,EAAMC,EAAIplD,GAAMqlD,EAAQ,GAGnF,OAAOC,CAAAA,CAAAA,E,uBCXQ3jC,EAmBAre,EA6GAkiD,EAoCAx5C,E,6SA8FjB,SAAgBy5C,EAAYviD,GAC1B,IAAMF,EAAIE,EAAEwF,SAAS,IACrB,OAAO1F,EAAEsB,OAAS,EAAI,IAAMtB,EAAIA,CASlC,UAAgB0iD,EAAcC,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,I,6HAjR7B,SAAiBjkC,GACChhB,EAAAA,MAAhB,SAAsBD,EAAW0L,EAAWC,EAAWpJ,GACrD,gBAAIA,EACK,IAAIwiD,EAAY/kD,GAAK+kD,EAAYr5C,GAAKq5C,EAAYp5C,GAAKo5C,EAAYxiD,GAErE,IAAIwiD,EAAY/kD,GAAK+kD,EAAYr5C,GAAKq5C,EAAYp5C,EAAAA,EAG3C1L,EAAAA,OAAhB,SAAuBD,EAAW0L,EAAWC,EAAWpJ,GAItD,YAAO,IAJ+CA,IAAAA,EAAAA,MAI9CvC,GAAK,GAAK0L,GAAK,GAAKC,GAAK,EAAIpJ,KAAO,EAZhD,EAAiB0e,EAAAA,EAAAA,WAAAA,EAAAA,SAAQ,MAmBRre,EAAAA,EAAAA,QAAAA,EAAAA,MAAK,KACJiK,MAAhB,SAAsBlC,EAAYC,GAChC,IAAMrI,GAAe,IAAVqI,EAAGU,MAAe,IAC7B,GAAU,IAAN/I,EACF,MAAO,CACL8I,IAAKT,EAAGS,IACRC,KAAMV,EAAGU,MAGb,IAAM65C,EAAOv6C,EAAGU,MAAQ,GAAM,IACxB85C,EAAOx6C,EAAGU,MAAQ,GAAM,IACxB+5C,EAAOz6C,EAAGU,MAAQ,EAAK,IACvBg6C,EAAO36C,EAAGW,MAAQ,GAAM,IACxBi6C,EAAO56C,EAAGW,MAAQ,GAAM,IACxBk6C,EAAO76C,EAAGW,MAAQ,EAAK,IACvBtL,EAAIslD,EAAM7jD,KAAK+N,OAAO21C,EAAMG,GAAO/iD,GACnCmJ,EAAI65C,EAAM9jD,KAAK+N,OAAO41C,EAAMG,GAAOhjD,GACnCoJ,EAAI65C,EAAM/jD,KAAK+N,OAAO61C,EAAMG,GAAOjjD,GAGzC,MAAO,CAAE8I,IAFG4V,EAASrV,MAAM5L,EAAG0L,EAAGC,GAEnBL,KADD2V,EAASpV,OAAO7L,EAAG0L,EAAGC,GAAAA,EAIrB/I,EAAAA,SAAhB,SAAyB2e,GACvB,OAA+B,MAAV,IAAbA,EAAMjW,KAAAA,EAGA1I,EAAAA,oBAAhB,SAAoC+H,EAAYC,EAAY66C,GAC1D,IAAM1nD,EAASuN,EAAKo3B,oBAAoB/3B,EAAGW,KAAMV,EAAGU,KAAMm6C,GAC1D,GAAK1nD,EAGL,OAAOuN,EAAKN,QACTjN,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,MAIJ6E,EAAAA,OAAhB,SAAuB2e,GACrB,IAAMmkC,GAA0B,IAAbnkC,EAAMjW,QAAiB,EACpC1I,EAAAA,EAAY0I,EAAKq6C,WAAWD,GAAU,GAArC1lD,EAAC4C,EAAAA,GAAE8I,EAAC9I,EAAAA,GAAE+I,EAAC/I,EAAAA,GACd,MAAO,CACLyI,IAAK4V,EAASrV,MAAM5L,EAAG0L,EAAGC,GAC1BL,KAAMo6C,EAAAA,EAIM9iD,EAAAA,QAAhB,SAAwB2e,EAAe/T,GACrC,IAAMjL,EAAId,KAAK+N,MAAgB,IAAVhC,GACf7H,EAAAA,EAAY2F,EAAKq6C,WAAWpkC,EAAMjW,MAAK,GAAtCtL,EAAC2F,EAAAA,GAAE+F,EAAC/F,EAAAA,GAAEgG,EAAChG,EAAAA,GACd,MAAO,CACL0F,IAAK4V,EAASrV,MAAM5L,EAAG0L,EAAGC,EAAGpJ,GAC7B+I,KAAM2V,EAASpV,OAAO7L,EAAG0L,EAAGC,EAAGpJ,GAAAA,EAInBK,EAAAA,WAAhB,SAA2B2e,GACzB,MAAO,CAAEA,EAAMjW,MAAQ,GAAM,IAAOiW,EAAMjW,MAAQ,GAAM,IAAOiW,EAAMjW,MAAQ,EAAK,OAOrErJ,EAAAA,MAAAA,EAAAA,IAAG,KACF+I,QAAhB,SAAwBK,GACtB,GAAIA,EAAIyH,MAAM,mBACZ,OAAQzH,EAAIzH,QACV,KAAK,EACH,IAAM5D,EAAIsB,SAAS+J,EAAI2B,MAAM,EAAG,GAAGwrB,OAAO,GAAI,IACxC9sB,EAAIpK,SAAS+J,EAAI2B,MAAM,EAAG,GAAGwrB,OAAO,GAAI,IACxC7sB,EAAIrK,SAAS+J,EAAI2B,MAAM,EAAG,GAAGwrB,OAAO,GAAI,IAC9C,OAAOltB,EAAKN,QAAQhL,EAAG0L,EAAGC,GAE5B,KAAK,EACG3L,EAAIsB,SAAS+J,EAAI2B,MAAM,EAAG,GAAGwrB,OAAO,GAAI,IACxC9sB,EAAIpK,SAAS+J,EAAI2B,MAAM,EAAG,GAAGwrB,OAAO,GAAI,IACxC7sB,EAAIrK,SAAS+J,EAAI2B,MAAM,EAAG,GAAGwrB,OAAO,GAAI,IAF9C,IAGMj2B,EAAIjB,SAAS+J,EAAI2B,MAAM,EAAG,GAAGwrB,OAAO,GAAI,IAC9C,OAAOltB,EAAKN,QAAQhL,EAAG0L,EAAGC,EAAGpJ,GAE/B,KAAK,EACH,MAAO,CACL8I,IAAGpL,EACHqL,MAAOhK,SAAS+J,EAAI2B,MAAM,GAAI,KAAO,EAAI,OAAU,GAEvD,KAAK,EACH,MAAO,CACL3B,IAAGpL,EACHqL,KAAMhK,SAAS+J,EAAI2B,MAAM,GAAI,MAAQ,GAI7C,IAAM44C,EAAYv6C,EAAIyH,MAAM,sFAC5B,GAAI8yC,EAKF,OAJM5lD,EAAIsB,SAASskD,EAAU,IACvBl6C,EAAIpK,SAASskD,EAAU,IACvBj6C,EAAIrK,SAASskD,EAAU,IACvBrjD,EAAId,KAAK+N,MAAoE,cAA7Do2C,EAAU,GAAmB,EAAIhZ,WAAWgZ,EAAU,MACrEt6C,EAAKN,QAAQhL,EAAG0L,EAAGC,EAAGpJ,GAE/B,MAAM,IAAI4B,MAAM,wCAOpB,SAAiBlE,GAsBf,SAAgB4lD,EAAmB7lD,EAAW0L,EAAWC,GACvD,IAAMm6C,EAAK9lD,EAAI,IACT+lD,EAAKr6C,EAAI,IACTs6C,EAAKr6C,EAAI,IAIf,MAAY,OAHDm6C,GAAM,OAAUA,EAAK,MAAQrkD,KAAKwkD,KAAKH,EAAK,MAAS,MAAO,MAG7C,OAFfC,GAAM,OAAUA,EAAK,MAAQtkD,KAAKwkD,KAAKF,EAAK,MAAS,MAAO,MAE/B,OAD7BC,GAAM,OAAUA,EAAK,MAAQvkD,KAAKwkD,KAAKD,EAAK,MAAS,MAAO,KArBzD,CAAA/lD,EAAAA,kBAAhB,SAAkC6kD,GAChC,OAAOe,EACJf,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAd7kD,EAAA,EAWYA,EAAAA,mBAAkBgC,CAtBpC,EAAiB6iD,EAAAA,EAAAA,MAAAA,EAAAA,IAAG,KAoCpB,SAAiBx5C,GAyCf,SAAgB46C,EAAgB5jB,EAAgBE,EAAgBijB,GAU9D,IAPA,IAAMH,EAAOhjB,GAAU,GAAM,IACvBijB,EAAOjjB,GAAU,GAAM,IACvBkjB,EAAOljB,GAAW,EAAK,IACzB6iB,EAAO3iB,GAAU,GAAM,IACvB4iB,EAAO5iB,GAAU,GAAM,IACvB6iB,EAAO7iB,GAAW,EAAK,IACvB2jB,EAAKnB,EAAcF,EAAIe,mBAAmBV,EAAKC,EAAKC,GAAMP,EAAIe,mBAAmBP,EAAKC,EAAKC,IACxFW,EAAKV,IAAUN,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAEhDF,GAAO1jD,KAAKC,IAAI,EAAGD,KAAK6P,KAAW,GAAN6zC,IAC7BC,GAAO3jD,KAAKC,IAAI,EAAGD,KAAK6P,KAAW,GAAN8zC,IAC7BC,GAAO5jD,KAAKC,IAAI,EAAGD,KAAK6P,KAAW,GAAN+zC,IAC7Bc,EAAKnB,EAAcF,EAAIe,mBAAmBV,EAAKC,EAAKC,GAAMP,EAAIe,mBAAmBP,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CAGvD,UAAgBe,EAAkB9jB,EAAgBE,EAAgBijB,GAUhE,IAPA,IAAMH,EAAOhjB,GAAU,GAAM,IACvBijB,EAAOjjB,GAAU,GAAM,IACvBkjB,EAAOljB,GAAW,EAAK,IACzB6iB,EAAO3iB,GAAU,GAAM,IACvB4iB,EAAO5iB,GAAU,GAAM,IACvB6iB,EAAO7iB,GAAW,EAAK,IACvB2jB,EAAKnB,EAAcF,EAAIe,mBAAmBV,EAAKC,EAAKC,GAAMP,EAAIe,mBAAmBP,EAAKC,EAAKC,IACxFW,EAAKV,IAAUN,EAAM,KAAQC,EAAM,KAAQC,EAAM,MAEtDF,EAAM1jD,KAAKmP,IAAI,IAAMu0C,EAAM1jD,KAAK6P,KAAmB,IAAb,IAAM6zC,KAC5CC,EAAM3jD,KAAKmP,IAAI,IAAMw0C,EAAM3jD,KAAK6P,KAAmB,IAAb,IAAM8zC,KAC5CC,EAAM5jD,KAAKmP,IAAI,IAAMy0C,EAAM5jD,KAAK6P,KAAmB,IAAb,IAAM+zC,KAC5Cc,EAAKnB,EAAcF,EAAIe,mBAAmBV,EAAKC,EAAKC,GAAMP,EAAIe,mBAAmBP,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,CAhEvC,CAAAplD,EAAAA,oBAAhB,SAAoCqiC,EAAgBE,EAAgBijB,GAClE,IAAMY,EAAMvB,EAAIwB,kBAAkBhkB,GAAU,GACtCikB,EAAMzB,EAAIwB,kBAAkB9jB,GAAU,GAE5C,GADWwiB,EAAcqB,EAAKE,GACrBd,EAAO,CACd,GAAIc,EAAMF,EAAK,CACb,IAAM5jD,EAAUyjD,EAAgB5jB,EAAQE,EAAQijB,GAC1C/iD,EAAesiD,EAAcqB,EAAKvB,EAAIwB,kBAAkB7jD,GAAW,IACzE,GAAIC,EAAe+iD,EAAO,CACxB,IAAMe,EAAUJ,EAAkB9jB,EAAQA,EAAQmjB,GAElD,OAAO/iD,EADcsiD,EAAcqB,EAAKvB,EAAIwB,kBAAkBE,GAAW,IACpC/jD,EAAU+jD,CAEjD,QAAO/jD,CAET,KAAMgkD,EAAUL,EAAkB9jB,EAAQE,EAAQijB,GAC5CiB,EAAe1B,EAAcqB,EAAKvB,EAAIwB,kBAAkBG,GAAW,IACzE,OAAIC,EAAejB,GACXe,EAAUN,EAAgB5jB,EAAQA,EAAQmjB,GAEzCiB,EADc1B,EAAcqB,EAAKvB,EAAIwB,kBAAkBE,GAAW,IACpCC,EAAUD,GAE1CC,CAAAA,CAAAA,EAKKxmD,EAAAA,gBAAegC,EAoBfhC,EAAAA,kBAAiB2C,EAqBjB3C,EAAAA,WAAhB,SAA2BmJ,GACzB,MAAO,CAAEA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EAAAA,EAG3DnJ,EAAAA,QAAhB,SAAwBD,EAAW0L,EAAWC,EAAWpJ,GACvD,MAAO,CACL8I,IAAK4V,EAASrV,MAAM5L,EAAG0L,EAAGC,EAAGpJ,GAC7B+I,KAAM2V,EAASpV,OAAO7L,EAAG0L,EAAGC,EAAGpJ,GAAAA,CAzFrC,EAAiB+I,EAAAA,EAAAA,OAAAA,EAAAA,KAAI,KA8FrBrJ,EAAAA,YAAAA,EAWAA,EAAAA,cAAAA,CAAA,E,43BChQA,aACAM,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MAEAhF,EAAAA,EAAAA,MACAqX,EAAAA,EAAAA,MACAuC,EAAAA,EAAAA,MACAiG,EAAAA,EAAAA,MACA/R,EAAAA,EAAAA,MACAsI,EAAAA,EAAAA,MACArI,EAAAA,EAAAA,MAGA+R,EAAAA,EAAAA,MACA9R,EAAAA,EAAAA,MAGIg7C,GAAAA,EAEJhpC,EAAAA,SAAAA,GAoDE,WACE9N,GADF,MAGE5P,EAAAA,KAAAA,OAAO,K,OAvCDD,EAAAA,UAAY,IAAIgV,EAAAA,aAEhBhV,EAAAA,QAAU,IAAIgV,EAAAA,aAEZhV,EAAAA,YAAc,IAAIgV,EAAAA,aAEpBhV,EAAAA,UAAY,IAAIgV,EAAAA,aAEdhV,EAAAA,UAAY,IAAIgV,EAAAA,aAEhBhV,EAAAA,eAAiB,IAAIgV,EAAAA,aAgC7BhV,EAAK+e,sBAAwB,IAAIvc,EAAAA,qBACjCxC,EAAKuiB,eAAiB,IAAI5f,EAAAA,eAAekN,GACzC7P,EAAK+e,sBAAsBI,WAAW5c,EAAAA,gBAAiBvC,EAAKuiB,gBAC5DviB,EAAK+P,eAAiB/P,EAAKqE,SAASrE,EAAK+e,sBAAsBC,eAAetc,EAAAA,gBAC9E1C,EAAK+e,sBAAsBI,WAAW5c,EAAAA,eAAgBvC,EAAK+P,gBAC3D/P,EAAKgQ,YAAchQ,EAAK+e,sBAAsBC,eAAevc,EAAAA,YAC7DzC,EAAK+e,sBAAsBI,WAAW5c,EAAAA,YAAavC,EAAKgQ,aACxDhQ,EAAKiJ,YAAcjJ,EAAKqE,SAASrE,EAAK+e,sBAAsBC,eAAerhB,EAAAA,aAAa,WAAM,SAAKyuB,gBAAAA,KACnGpsB,EAAK+e,sBAAsBI,WAAW5c,EAAAA,aAAcvC,EAAKiJ,aACzDjJ,EAAKonB,iBAAmBpnB,EAAK+e,sBAAsBC,eAAezH,EAAAA,kBAClEvX,EAAK+e,sBAAsBI,WAAW5c,EAAAA,kBAAmBvC,EAAKonB,kBAC9DpnB,EAAK4mD,iBAAmB5mD,EAAK+e,sBAAsBC,eAAexB,EAAAA,iBAClExd,EAAK+e,sBAAsBI,WAAW5c,EAAAA,iBAAkBvC,EAAK4mD,kBAC7D5mD,EAAK6mD,eAAiB7mD,EAAK+e,sBAAsBC,eAAevT,EAAAA,gBAChEzL,EAAK+e,sBAAsBI,WAAW5c,EAAAA,gBAAiBvC,EAAK6mD,gBAC5D7mD,EAAK8mD,gBAAkB9mD,EAAK+e,sBAAsBC,eAAejL,EAAAA,gBACjE/T,EAAK+e,sBAAsBI,WAAW5c,EAAAA,gBAAiBvC,EAAK8mD,iBAG5D9mD,EAAKof,cAAgB,IAAI3B,EAAAA,aAAazd,EAAK+P,eAAgB/P,EAAK8mD,gBAAiB9mD,EAAKiJ,YAAajJ,EAAK4mD,iBAAkB5mD,EAAKgQ,YAAahQ,EAAKuiB,eAAgBviB,EAAKonB,iBAAkBpnB,EAAK6mD,gBAC7L7mD,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKof,cAAcra,WAAY/E,EAAK+mD,cAC/D/mD,EAAKqE,SAASrE,EAAKof,eAGnBpf,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAK+P,eAAezL,SAAUtE,EAAKuE,YAC9DvE,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKiJ,YAAYoxB,OAAQr6B,EAAKgnD,UACzDhnD,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKiJ,YAAYmxB,SAAUp6B,EAAKinD,YAC3DjnD,EAAKqE,SAASrE,EAAKuiB,eAAewD,gBAAe,YAAO,SAAK9D,eAAe3iB,EAAAA,KAC5EU,EAAKqE,SAASrE,EAAK+P,eAAepL,UAAS,SAAA1E,GACzCD,EAAKinB,UAAUtS,KAAK,CAAE7O,SAAU9F,EAAK+P,eAAe7J,OAAOiC,MAAO6K,OAAQ,IAC1EhT,EAAK4mD,iBAAiBM,eAAelnD,EAAK+P,eAAe7J,OAAOqqB,UAAWvwB,EAAK+P,eAAe7J,OAAOihD,aAAAA,KAExGnnD,EAAKqE,SAASrE,EAAKof,cAAcza,UAAS,SAAA1E,GACxCD,EAAKinB,UAAUtS,KAAK,CAAE7O,SAAU9F,EAAK+P,eAAe7J,OAAOiC,MAAO6K,OAAQ,IAC1EhT,EAAK4mD,iBAAiBM,eAAelnD,EAAK+P,eAAe7J,OAAOqqB,UAAWvwB,EAAK+P,eAAe7J,OAAOihD,aAAAA,KAIxGnnD,EAAKonD,aAAe,IAAIz7C,EAAAA,aAAY,SAACqD,EAAMq4C,GAAkB,SAAKjoC,cAAckoC,MAAMt4C,EAAMq4C,EAAAA,IAC5FrnD,EAAKqE,UAAAA,EAAS,EAAA2b,cAAahgB,EAAKonD,aAAa9sB,cAAet6B,EAAKunD,iBAjF3D,CA8OV,QA9P2C5hD,EAAAA,EAAAA,GAiBzCnG,OAAAA,eAAWyC,EAAAA,UAAA,WAAQ,C,IAAnB,WAAwC,OAAOnE,KAAKmpD,UAAUz2C,KAAAA,E,gCAE9DhR,OAAAA,eAAWyC,EAAAA,UAAA,SAAM,C,IAAjB,WAAsC,OAAOnE,KAAKkpD,QAAQx2C,KAAAA,E,gCAE1DhR,OAAAA,eAAWyC,EAAAA,UAAA,aAAU,C,IAArB,WAAwC,OAAOnE,KAAKipD,YAAYv2C,KAAAA,E,gCAEhEhR,OAAAA,eAAWyC,EAAAA,UAAA,WAAQ,C,IAAnB,WAAgE,OAAOnE,KAAKyG,UAAUiM,KAAAA,E,gCAEtFhR,OAAAA,eAAWyC,EAAAA,UAAA,gBAAa,C,IAAxB,WAA2C,OAAOnE,KAAKypD,eAAe/2C,KAAAA,E,gCAOtEhR,OAAAA,eAAWyC,EAAAA,UAAA,WAAQ,C,IAAnB,sBAOE,OANKnE,KAAK0pD,eACR1pD,KAAK0pD,aAAe,IAAIxyC,EAAAA,aACxBlX,KAAKuG,SAASvG,KAAKmpB,UAAUzW,OAAM,Y,MAChB,QAAjBxQ,EAAAA,EAAKwnD,oBAAAA,IAAYxnD,GAAAA,EAAE2U,KAAKrL,EAAGxD,SAAAA,MAGxBhI,KAAK0pD,aAAah3C,KAAAA,E,gCAG3BhR,OAAAA,eAAWyC,EAAAA,UAAA,OAAI,C,IAAf,WAA4B,OAAOnE,KAAKiS,eAAetP,IAAAA,E,gCACvDjB,OAAAA,eAAWyC,EAAAA,UAAA,OAAI,C,IAAf,WAA4B,OAAOnE,KAAKiS,eAAevP,IAAAA,E,gCACvDhB,OAAAA,eAAWyC,EAAAA,UAAA,UAAO,C,IAAlB,WAAmC,OAAOnE,KAAKiS,eAAe+R,OAAAA,E,gCAC9DtiB,OAAAA,eAAWyC,EAAAA,UAAA,UAAO,C,IAAlB,WAAyC,OAAOnE,KAAKykB,eAAe1S,OAAAA,E,IACpE,SAAmBA,GACjB,IAAK,IAAMvQ,KAAOuQ,EAChB/R,KAAKykB,eAAe1S,QAAQvQ,GAAOuQ,EAAQvQ,EAAAA,E,gCAoDxC2C,EAAAA,UAAAA,QAAP,W,MACMnE,KAAK6jB,cAGT1hB,EAAAA,UAAM2F,QAAOjG,KAAA,MACI,QAAjBsC,EAAAA,KAAKwlD,oBAAAA,IAAYxlD,GAAAA,EAAE2D,UACnB9H,KAAK2pD,kBAAAA,EAAe58C,EAGf5I,EAAAA,UAAAA,MAAP,SAAa+M,EAA2BgN,GACtCle,KAAKspD,aAAavlC,MAAM7S,EAAMgN,EAAAA,EAYzB/Z,EAAAA,UAAAA,UAAP,SAAiB+M,EAA2B04C,GACtC5pD,KAAKkS,YAAYuZ,UAAYhnB,EAAAA,aAAaolD,OAAShB,IACrD7oD,KAAKkS,YAAYlB,KAAK,qDACtB63C,GAAAA,GAEF7oD,KAAKspD,aAAaQ,UAAU54C,EAAM04C,EAAAA,EAG7BzlD,EAAAA,UAAAA,OAAP,SAAc6R,EAAWC,GACnB0oB,MAAM3oB,IAAM2oB,MAAM1oB,KAItBD,EAAIrS,KAAKC,IAAIoS,EAAGpR,EAAAA,cAChBqR,EAAItS,KAAKC,IAAIqS,EAAGrR,EAAAA,cAEhB5E,KAAKiS,eAAenP,OAAOkT,EAAGC,GAAAA,EAOzB9R,EAAAA,UAAAA,OAAP,SAAc4lD,EAA2BvvB,QAAAA,IAAAA,IAAAA,GAAAA,GACvCx6B,KAAKiS,eAAe+3C,OAAOD,EAAWvvB,EAAAA,EAUjCr2B,EAAAA,UAAAA,YAAP,SAAmBsoB,EAAc5D,EAA+B3T,GAC9DlV,KAAKiS,eAAejJ,YAAYyjB,EAAM5D,EAAqB3T,EAAAA,EAOtD/Q,EAAAA,UAAAA,YAAP,SAAmB+5B,GACjBl+B,KAAKiS,eAAeksB,YAAYD,EAAAA,EAM3B/5B,EAAAA,UAAAA,YAAP,WACEnE,KAAKiS,eAAemsB,aAAAA,EAMfj6B,EAAAA,UAAAA,eAAP,WACEnE,KAAKiS,eAAeqc,gBAAAA,EAGfnqB,EAAAA,UAAAA,aAAP,SAAoBuR,GAClB1V,KAAKiS,eAAeosB,aAAa3oB,EAAAA,EAI5BvR,EAAAA,UAAAA,mBAAP,SAA0BgQ,EAAyB+J,GACjD,OAAOle,KAAKshB,cAAc2oC,mBAAmB91C,EAAI+J,EAAAA,EAI5C/Z,EAAAA,UAAAA,mBAAP,SAA0BgQ,EAAyB+J,GACjD,OAAOle,KAAKshB,cAAc4oC,mBAAmB/1C,EAAI+J,EAAAA,EAI5C/Z,EAAAA,UAAAA,mBAAP,SAA0BgQ,EAAyB+J,GACjD,OAAOle,KAAKshB,cAAc6oC,mBAAmBh2C,EAAI+J,EAAAA,EAI5C/Z,EAAAA,UAAAA,mBAAP,SAA0B+e,EAAehF,GACvC,OAAOle,KAAKshB,cAAc8oC,mBAAmBlnC,EAAOhF,EAAAA,EAG5C/Z,EAAAA,UAAAA,OAAV,WACMnE,KAAKykB,eAAejH,WAAW6sC,aACjCrqD,KAAKsqD,oBAAAA,EAIFnmD,EAAAA,UAAAA,MAAP,WACEnE,KAAKshB,cAAcO,QACnB7hB,KAAKiS,eAAe4P,QACpB7hB,KAAKgpD,gBAAgBnnC,QACrB7hB,KAAKmL,YAAY0W,QACjB7hB,KAAKspB,iBAAiBzH,OAAAA,EAGd1d,EAAAA,UAAAA,eAAV,SAAyB3C,G,MAEvB,OAAQA,GACN,IAAK,aACHxB,KAAKgkB,QAAQlhB,OAAO9C,KAAK2C,KAAM3C,KAAK0C,MACpC,MACF,IAAK,cACC1C,KAAKykB,eAAejH,WAAW6sC,YACjCrqD,KAAKsqD,sBAEY,QAAjBnmD,EAAAA,KAAKwlD,oBAAAA,IAAYxlD,GAAAA,EAAE2D,UACnB9H,KAAK2pD,kBAAAA,GAAe58C,EAMlB5I,EAAAA,UAAAA,mBAAV,sBACE,IAAKnE,KAAK2pD,aAAc,CACtB,IAAMxlD,EAA6B,GACnCA,EAAY4E,KAAK/I,KAAKiH,WAAW2G,EAAAA,8BAA8B1H,KAAK,KAAMlG,KAAKiS,kBAC/E9N,EAAY4E,KAAK/I,KAAKmqD,mBAAmB,CAAEI,MAAO,MAAO,WAEvD,OAAO,EADP,EAAAC,+BAA8BroD,EAAK8P,iBAAAA,CAC5B,KAETjS,KAAK2pD,aAAe,CAClB7hD,QAAS,W,YACP,IAAgB,WAAWD,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAfA,EAAAA,MACRC,S,uGAMd3D,CA9PA,CAAA0b,CAA2Crb,EAAAA,YAArBL,EAAAA,aAAAA,CAAAsmD,E,mGCxBtB,0BAAAtoD,IACU,KAAAuoD,WAAgC,GAEhC,KAAAC,WAAA,CAwCV,QAtCEjpD,OAAAA,eAAWS,EAAAA,UAAA,QAAK,C,IAAhB,sBAmBE,OAlBKnC,KAAK4qD,SACR5qD,KAAK4qD,OAAS,SAAC9rC,GAcb,OAbA3c,EAAKuoD,WAAW3hD,KAAK+V,GACF,CACjBhX,QAAS,WACP,IAAK3F,EAAKwoD,UACR,IAAK,IAAI7lD,EAAI,EAAGA,EAAI3C,EAAKuoD,WAAW5kD,OAAQhB,IAC1C,GAAI3C,EAAKuoD,WAAW5lD,KAAOga,EAEzB,YADA3c,EAAKuoD,WAAW71C,OAAO/P,EAAG,OAUjC9E,KAAK4qD,MAAAA,E,gCAGPzoD,EAAAA,UAAAA,KAAP,SAAY0oD,EAASC,GAEnB,IADA,IAAMC,EAA2B,GACxBjmD,EAAI,EAAGA,EAAI9E,KAAK0qD,WAAW5kD,OAAQhB,IAC1CimD,EAAMhiD,KAAK/I,KAAK0qD,WAAW5lD,IAE7B,IAASA,EAAI,EAAGA,EAAIimD,EAAMjlD,OAAQhB,IAChCimD,EAAMjmD,GAAGjD,UAAAA,EAAgBgpD,EAAMC,EAAAA,EAI5B3oD,EAAAA,UAAAA,QAAP,WACMnC,KAAK0qD,aACP1qD,KAAK0qD,WAAW5kD,OAAS,GAE3B9F,KAAK2qD,WAAAA,CAAY,EAErBxoD,CA3CA,IAAagC,EAAAA,aAAAA,EA6CbA,EAAAA,aAAAA,SAAgC6mD,EAAiBC,GAC/C,OAAOD,GAAK,SAAA7oD,GAAK,OAAAgC,EAAG0S,KAAK1U,EAAAA,GAAAA,CA9Cd,E,slBCdb,IAyFY+oD,EAzFZ,UACAzmD,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAhF,EAAAA,EAAAA,MACAqX,EAAAA,EAAAA,MAEAuC,EAAAA,EAAAA,KACAiG,EAAAA,EAAAA,KACA/R,EAAAA,EAAAA,MACAsI,EAAAA,EAAAA,MACArI,EAAAA,EAAAA,MACA+R,EAAAA,EAAAA,MAEA9R,EAAAA,EAAAA,MAKMs9C,EAAoC,CAAE,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GA6BnFC,EAAyB,OAQ/B,SAASC,EAAoBxjD,EAAWyjD,GACtC,GAAIzjD,EAAI,GACN,OAAOyjD,EAAKC,cAAAA,EAEd,OAAQ1jD,GACN,KAAK,EAAG,QAASyjD,EAAKE,WACtB,KAAK,EAAG,QAASF,EAAKG,YACtB,KAAK,EAAG,QAASH,EAAKI,eACtB,KAAK,EAAG,QAASJ,EAAKK,iBACtB,KAAK,EAAG,QAASL,EAAKM,SACtB,KAAK,EAAG,QAASN,EAAKO,SACtB,KAAK,EAAG,QAASP,EAAKQ,WACtB,KAAK,EAAG,QAASR,EAAKS,gBACtB,KAAK,EAAG,QAAST,EAAKU,YACtB,KAAK,GAAI,QAASV,EAAKW,cACvB,KAAK,GAAI,QAASX,EAAKY,YACvB,KAAK,GAAI,QAASZ,EAAKa,eACvB,KAAK,GAAI,QAASb,EAAKc,iBACvB,KAAK,GAAI,QAASd,EAAKe,oBACvB,KAAK,GAAI,QAASf,EAAKgB,kBACvB,KAAK,GAAI,QAAShB,EAAKiB,gBACvB,KAAK,GAAI,QAASjB,EAAKkB,mBACvB,KAAK,GAAI,QAASlB,EAAKmB,aACvB,KAAK,GAAI,QAASnB,EAAKoB,YACvB,KAAK,GAAI,QAASpB,EAAKqB,UACvB,KAAK,GAAI,QAASrB,EAAKsB,SACvB,KAAK,GAAI,QAAStB,EAAKC,YAEzB,OAAO,GAGT,SAAYL,GACV/oD,EAAAA,EAAAA,oBAAAA,GAAAA,sBACAA,EAAAA,EAAAA,qBAAAA,GAAAA,sBAFF,EAAY+oD,EAAAA,EAAAA,2BAAAA,EAAAA,yBAAwB,KAMpC,IAiCAnrC,EAAAA,WAGE,WACU9N,EACAumB,EACAtmB,EACAmK,GAHA,KAAApK,eAAA,EACA,KAAAumB,aAAA,EACA,KAAAtmB,YAAA,EACA,KAAAmK,gBAAA,EANF,KAAAwwC,MAAqB,IAAIC,YAAY,EAsD/C,QA7CS3qD,EAAAA,UAAAA,KAAP,SAAY4qD,GACV/sD,KAAK6sD,MAAQ,IAAIC,YAAY,IAGxB3qD,EAAAA,UAAAA,IAAP,SAAW+O,EAAmBvK,EAAeC,GAC3C5G,KAAK6sD,OAAAA,EAAQ,EAAAG,QAAOhtD,KAAK6sD,MAAO37C,EAAK+7C,SAAStmD,EAAOC,GAAAA,EAGhDzE,EAAAA,UAAAA,OAAP,SAAc+qD,GACZ,IAAKA,EAEH,OADAltD,KAAK6sD,MAAQ,IAAIC,YAAY,MAG/B,IAAM57C,GAAAA,EAAOrM,EAAAsoD,eAAcntD,KAAK6sD,OAEhC,OADA7sD,KAAK6sD,MAAQ,IAAIC,YAAY,GACrB57C,GAEN,IAAK,KACHlR,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,UAAU7e,EAAAA,GAAG6e,IAAG,MAC5D,MACF,IAAK,KACHrjB,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,aAAa7e,EAAAA,GAAG6e,IAAG,MAC/D,MACF,IAAK,IACH,IAAM+pB,EAAWptC,KAAKiS,eAAe7J,OAAOqqB,UAAY,EACtD,KAAOzyB,KAAKiS,eAAe7J,OAAOihD,aAAe,GAAK,IACxDrpD,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,OAAO+pB,EAAK5oC,EAAAA,GAAG6e,IAAG,MAC9D,MACF,IAAK,IAEHrjB,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,SAAS7e,EAAAA,GAAG6e,IAAG,MAC3D,MACF,IAAK,KACH,IACI5Y,EADsC,CAAEk7B,MAAS,EAAG3qB,UAAa,EAAGyqB,IAAO,GAC5DzlC,KAAKqc,gBAAgBmB,WAAWqpB,aACnDp8B,GAASzK,KAAKqc,gBAAgBmB,WAAW4oB,YAAc,EAAI,EAC3DpmC,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,OAAO5Y,EAAK,KAAKjG,EAAAA,GAAG6e,IAAG,MACnE,MACF,QAEErjB,KAAKkS,YAAY8B,MAAM,oBAAqB9C,GAC5ClR,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,OAAO7e,EAAAA,GAAG6e,IAAG,MAE7D,OAAO,GAEXlhB,CAvDA,CAAA4d,GA0FAC,EAAAA,SAAAA,GAmDE,WACmB/N,EACA+2C,EACAxwB,EACAswB,EACA52C,EACAmK,EACA+wC,EACAj7C,EACAuqB,QAAAA,IAAAA,IAAAA,EAAAA,IAAqCh4B,EAAAA,sBATxD,MAWEvC,EAAAA,KAAAA,OAAO,KAVU8T,EAAAA,eAAAA,EACAA,EAAAA,gBAAAA,EACAA,EAAAA,aAAAA,EACAA,EAAAA,iBAAAA,EACAA,EAAAA,YAAAA,EACAA,EAAAA,gBAAAA,EACAA,EAAAA,kBAAAA,EACAA,EAAAA,gBAAAA,EACAA,EAAAA,QAAAA,EA3DXA,EAAAA,aAA4B,IAAI62C,YAAY,MAC5C72C,EAAAA,eAAgC,IAAIpR,EAAAA,cACpCoR,EAAAA,aAA4B,IAAIpR,EAAAA,YAChCoR,EAAAA,UAAsB,IAAIyJ,EAAAA,SAC1BzJ,EAAAA,aAAe,GACfA,EAAAA,UAAY,GACVA,EAAAA,kBAA8B,GAC9BA,EAAAA,eAA2B,GAE7BA,EAAAA,aAA+BpW,EAAAA,kBAAkB8mD,QACjD1wC,EAAAA,uBAAyCpW,EAAAA,kBAAkB8mD,QAI3D1wC,EAAAA,eAAiB,IAAIiB,EAAAA,aAErBjB,EAAAA,sBAAwB,IAAIiB,EAAAA,aAE5BjB,EAAAA,gBAAkB,IAAIiB,EAAAA,aAEtBjB,EAAAA,oBAAsB,IAAIiB,EAAAA,aAE1BjB,EAAAA,wBAA0B,IAAIiB,EAAAA,aAE9BjB,EAAAA,+BAAiC,IAAIiB,EAAAA,aAGrCjB,EAAAA,YAAc,IAAIiB,EAAAA,aAElBjB,EAAAA,WAAa,IAAIiB,EAAAA,aAEjBjB,EAAAA,cAAgB,IAAIiB,EAAAA,aAEpBjB,EAAAA,YAAc,IAAIiB,EAAAA,aAElBjB,EAAAA,UAAY,IAAIiB,EAAAA,aAEhBjB,EAAAA,eAAiB,IAAIiB,EAAAA,aAErBjB,EAAAA,SAAW,IAAIiB,EAAAA,aAGfjB,EAAAA,YAA2B,CACjCo3C,QAAQ,EACRC,aAAc,EACdC,aAAc,EACdC,cAAe,EACfxlD,SAAU,GA2jFJiO,EAAAA,eAAiB,CAAC,IAAD,SA5iFvBA,EAAK1P,SAAS0P,EAAKymB,SAGnBzmB,EAAK0b,cAAgB1b,EAAKhE,eAAe7J,OACzC6N,EAAK1P,SAAS0P,EAAKhE,eAAe+R,QAAQ4N,kBAAiB,SAAAzvB,GAAK,SAAKwvB,cAAgBxvB,EAAE0vB,YAAAA,KAKvF5b,EAAKymB,QAAQ+wB,uBAAsB,SAACvqC,EAAO6pC,GACzC92C,EAAK/D,YAAY8B,MAAM,qBAAsB,CAAE05C,WAAYz3C,EAAKymB,QAAQixB,cAAczqC,GAAQ6pC,OAAQA,EAAOa,WAAAA,IAE/G33C,EAAKymB,QAAQmxB,uBAAsB,YACjC53C,EAAK/D,YAAY8B,MAAM,qBAAsB,CAAE05C,WAAYz3C,EAAKymB,QAAQixB,cAAczqC,IAAAA,IAExFjN,EAAKymB,QAAQoxB,2BAA0B,YACrC73C,EAAK/D,YAAY8B,MAAM,yBAA0B,CAAEwrB,KAAIr9B,GAAA,IAEzD8T,EAAKymB,QAAQqxB,uBAAsB,SAACL,EAAYxjC,EAAQhZ,GACtD+E,EAAK/D,YAAY8B,MAAM,qBAAsB,CAAE05C,WAAUvrD,EAAE+nB,OAAM/lB,EAAE+M,KAAIhP,GAAA,IAEzE+T,EAAKymB,QAAQsxB,uBAAsB,SAAC9qC,EAAOgH,EAAQ+jC,GAClC,SAAX/jC,IACF+jC,EAAUA,EAAQL,WAEpB33C,EAAK/D,YAAY8B,MAAM,qBAAsB,CAAE05C,WAAYz3C,EAAKymB,QAAQixB,cAAczqC,GAAQgH,OAAM/lB,EAAE8pD,QAAO/rD,GAAA,IAM/G+T,EAAKymB,QAAQwxB,iBAAgB,SAACh9C,EAAMvK,EAAOC,GAAQ,SAAKunD,MAAMj9C,EAAMvK,EAAOC,EAAAA,IAK3EqP,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK6D,YAAYrB,EAAAA,IAC3E92C,EAAKymB,QAAQytB,mBAAmB,CAAEkE,cAAe,IAAK9D,MAAO,MAAO,YAAU,SAAK+D,WAAWvB,EAAAA,IAC9F92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKgE,SAASxB,EAAAA,IACxE92C,EAAKymB,QAAQytB,mBAAmB,CAAEkE,cAAe,IAAK9D,MAAO,MAAO,YAAU,SAAKiE,YAAYzB,EAAAA,IAC/F92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKkE,WAAW1B,EAAAA,IAC1E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKmE,cAAc3B,EAAAA,IAC7E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKoE,eAAe5B,EAAAA,IAC9E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKqE,eAAe7B,EAAAA,IAC9E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKsE,oBAAoB9B,EAAAA,IACnF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKuE,mBAAmB/B,EAAAA,IAClF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKwE,eAAehC,EAAAA,IAC9E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKyE,iBAAiBjC,EAAAA,IAChF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK0E,eAAelC,EAAAA,IAC9E92C,EAAKymB,QAAQytB,mBAAmB,CAAE+E,OAAQ,IAAK3E,MAAO,MAAO,YAAU,SAAK0E,eAAelC,EAAAA,IAC3F92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK4E,YAAYpC,EAAAA,IAC3E92C,EAAKymB,QAAQytB,mBAAmB,CAAE+E,OAAQ,IAAK3E,MAAO,MAAO,YAAU,SAAK4E,YAAYpC,EAAAA,IACxF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK6E,YAAYrC,EAAAA,IAC3E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK8E,YAAYtC,EAAAA,IAC3E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK+E,YAAYvC,EAAAA,IAC3E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKgF,SAASxC,EAAAA,IACxE92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKiF,WAAWzC,EAAAA,IAC1E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKkF,WAAW1C,EAAAA,IAC1E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKmF,kBAAkB3C,EAAAA,IACjF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKoF,gBAAgB5C,EAAAA,IAC/E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKqF,kBAAkB7C,EAAAA,IACjF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKsF,yBAAyB9C,EAAAA,IACxF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKuF,4BAA4B/C,EAAAA,IAC3F92C,EAAKymB,QAAQytB,mBAAmB,CAAE+E,OAAQ,IAAK3E,MAAO,MAAO,YAAU,SAAKwF,8BAA8BhD,EAAAA,IAC1G92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKyF,gBAAgBjD,EAAAA,IAC/E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK0F,kBAAkBlD,EAAAA,IACjF92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK2F,WAAWnD,EAAAA,IAC1E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK4F,SAASpD,EAAAA,IACxE92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK6F,QAAQrD,EAAAA,IACvE92C,EAAKymB,QAAQytB,mBAAmB,CAAE+E,OAAQ,IAAK3E,MAAO,MAAO,YAAU,SAAK8F,eAAetD,EAAAA,IAC3F92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAK+F,UAAUvD,EAAAA,IACzE92C,EAAKymB,QAAQytB,mBAAmB,CAAE+E,OAAQ,IAAK3E,MAAO,MAAO,YAAU,SAAKgG,iBAAiBxD,EAAAA,IAC7F92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKiG,eAAezD,EAAAA,IAC9E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKkG,aAAa1D,EAAAA,IAC5E92C,EAAKymB,QAAQytB,mBAAmB,CAAE+E,OAAQ,IAAK3E,MAAO,MAAO,YAAU,SAAKmG,oBAAoB3D,EAAAA,IAChG92C,EAAKymB,QAAQytB,mBAAmB,CAAEkE,cAAe,IAAK9D,MAAO,MAAO,YAAU,SAAKoG,UAAU5D,EAAAA,IAC7F92C,EAAKymB,QAAQytB,mBAAmB,CAAEkE,cAAe,IAAK9D,MAAO,MAAO,YAAU,SAAKqG,eAAe7D,EAAAA,IAClG92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKsG,gBAAgB9D,EAAAA,IAC/E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKuG,WAAW/D,EAAAA,IAC1E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKwG,cAAchE,EAAAA,IAC7E92C,EAAKymB,QAAQytB,mBAAmB,CAAEI,MAAO,MAAO,YAAU,SAAKyG,cAAcjE,EAAAA,IAC7E92C,EAAKymB,QAAQytB,mBAAmB,CAAEkE,cAAe,IAAM9D,MAAO,MAAO,YAAU,SAAK0G,cAAclE,EAAAA,IAClG92C,EAAKymB,QAAQytB,mBAAmB,CAAEkE,cAAe,IAAM9D,MAAO,MAAO,YAAU,SAAK2G,cAAcnE,EAAAA,IAKlG92C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAG4sD,KAAK,WAAM,SAAK5vC,MAAAA,IAClDvL,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAG6sD,IAAI,WAAM,SAAKC,UAAAA,IACjDr7C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAG+sD,IAAI,WAAM,SAAKD,UAAAA,IACjDr7C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAGgtD,IAAI,WAAM,SAAKF,UAAAA,IACjDr7C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAGsqB,IAAI,WAAM,SAAK2iC,gBAAAA,IACjDx7C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAGktD,IAAI,WAAM,SAAKC,WAAAA,IACjD17C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAGotD,IAAI,WAAM,SAAKC,KAAAA,IACjD57C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAGstD,IAAI,WAAM,SAAKC,UAAAA,IACjD97C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAGwtD,IAAI,WAAM,SAAKC,SAAAA,IAGjDh8C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAG0tD,KAAK,WAAM,SAAKj4C,OAAAA,IAClDhE,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAG2tD,KAAK,WAAM,SAAKC,UAAAA,IAClDn8C,EAAKymB,QAAQy0B,kBAAkB3sD,EAAAA,GAAG6tD,KAAK,WAAM,SAAKC,QAAAA,IAMlDr8C,EAAKymB,QAAQ0tB,mBAAmB,EAAG,IAAIx8C,EAAAA,YAAW,YAAuD,OAA7CqI,EAAKs8C,SAASrhD,GAAO+E,EAAKu8C,YAAYthD,IAAAA,CAAc,KAEhH+E,EAAKymB,QAAQ0tB,mBAAmB,EAAG,IAAIx8C,EAAAA,YAAW,YAAQ,SAAK4kD,YAAYthD,EAAAA,KAE3E+E,EAAKymB,QAAQ0tB,mBAAmB,EAAG,IAAIx8C,EAAAA,YAAW,YAAQ,SAAK2kD,SAASrhD,EAAAA,KAGxE+E,EAAKymB,QAAQ0tB,mBAAmB,EAAG,IAAIx8C,EAAAA,YAAW,YAAQ,SAAK6kD,wBAAwBvhD,EAAAA,KAKvF+E,EAAKymB,QAAQ0tB,mBAAmB,GAAI,IAAIx8C,EAAAA,YAAW,YAAQ,SAAK8kD,mBAAmBxhD,EAAAA,KAEnF+E,EAAKymB,QAAQ0tB,mBAAmB,GAAI,IAAIx8C,EAAAA,YAAW,YAAQ,SAAK+kD,mBAAmBzhD,EAAAA,KAEnF+E,EAAKymB,QAAQ0tB,mBAAmB,GAAI,IAAIx8C,EAAAA,YAAW,YAAQ,SAAKglD,uBAAuB1hD,EAAAA,KAavF+E,EAAKymB,QAAQ0tB,mBAAmB,IAAK,IAAIx8C,EAAAA,YAAW,YAAQ,SAAKilD,oBAAoB3hD,EAAAA,KAIrF+E,EAAKymB,QAAQ0tB,mBAAmB,IAAK,IAAIx8C,EAAAA,YAAW,YAAQ,SAAKklD,eAAe5hD,EAAAA,KAEhF+E,EAAKymB,QAAQ0tB,mBAAmB,IAAK,IAAIx8C,EAAAA,YAAW,YAAQ,SAAKmlD,eAAe7hD,EAAAA,KAEhF+E,EAAKymB,QAAQ0tB,mBAAmB,IAAK,IAAIx8C,EAAAA,YAAW,YAAQ,SAAKolD,mBAAmB9hD,EAAAA,KAYpF+E,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAKuG,YAAAA,IAC3D76C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAKyG,eAAAA,IAC3D/6C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAKtwC,OAAAA,IAC3DhE,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK6H,UAAAA,IAC3Dn8C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK+H,QAAAA,IAC3Dr8C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK0I,cAAAA,IAC3Dh9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK2I,uBAAAA,IAC3Dj9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK4I,mBAAAA,IAC3Dl9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK6I,WAAAA,IAC3Dn9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK8I,UAAU,MACrEp9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK8I,UAAU,MACrEp9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK8I,UAAU,MACrEp9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK8I,UAAU,MACrEp9C,EAAKymB,QAAQutB,mBAAmB,CAAEM,MAAO,MAAO,WAAM,SAAK8I,UAAU,MACrEp9C,EAAKymB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAO,MAAO,WAAM,SAAK+I,sBAAAA,IAC/Er9C,EAAKymB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAO,MAAO,WAAM,SAAK+I,sBAAAA,I,eACpEC,GACT1lD,EAAK6uB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAOgJ,IAAQ,WAAM,SAAKC,cAAc,IAAMD,EAAAA,IACpG1lD,EAAK6uB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAOgJ,IAAQ,WAAM,SAAKC,cAAc,IAAMD,EAAAA,IACpG1lD,EAAK6uB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAOgJ,IAAQ,WAAM,SAAKC,cAAc,IAAMD,EAAAA,IACpG1lD,EAAK6uB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAOgJ,IAAQ,WAAM,SAAKC,cAAc,IAAMD,EAAAA,IACpG1lD,EAAK6uB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAOgJ,IAAQ,WAAM,SAAKC,cAAc,IAAMD,EAAAA,IACpG1lD,EAAK6uB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAOgJ,IAAQ,WAAM,SAAKC,cAAc,IAAMD,EAAAA,IACpG1lD,EAAK6uB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAOgJ,IAAQ,WAAM,SAAKC,cAAc,IAAMD,EAAAA,GAAAA,E,OAPtG,IAAK,IAAMA,KAAQ9uD,EAAAA,SAAnB,EAAW8uD,G,OASXt9C,EAAKymB,QAAQutB,mBAAmB,CAAEoE,cAAe,IAAK9D,MAAO,MAAO,WAAM,SAAKkJ,wBAAAA,IAK/Ex9C,EAAKymB,QAAQg3B,iBAAgB,SAAC54C,GAE5B,OADA7E,EAAK/D,YAAY/Q,MAAM,kBAAmB2Z,GACnCA,CAAAA,IAMT7E,EAAKymB,QAAQwtB,mBAAmB,CAAEmE,cAAe,IAAK9D,MAAO,KAAO,IAAIoJ,EAAQ19C,EAAKhE,eAAgBgE,EAAKuiB,aAAcviB,EAAK/D,YAAa+D,EAAKoG,kBAb/I,CAysFJ,QA57FkCxU,EAAAA,EAAAA,GAgBhCnG,OAAAA,eAAWyC,EAAAA,UAAA,gBAAa,C,IAAxB,WAA2C,OAAOnE,KAAK4zD,eAAelhD,KAAAA,E,gCAEtEhR,OAAAA,eAAWyC,EAAAA,UAAA,uBAAoB,C,IAA/B,WAA4D,OAAOnE,KAAK6zD,sBAAsBnhD,KAAAA,E,gCAE9FhR,OAAAA,eAAWyC,EAAAA,UAAA,iBAAc,C,IAAzB,WAA4C,OAAOnE,KAAK8zD,gBAAgBphD,KAAAA,E,gCAExEhR,OAAAA,eAAWyC,EAAAA,UAAA,qBAAkB,C,IAA7B,WAAgD,OAAOnE,KAAK+zD,oBAAoBrhD,KAAAA,E,gCAEhFhR,OAAAA,eAAWyC,EAAAA,UAAA,yBAAsB,C,IAAjC,WAAoD,OAAOnE,KAAKg0D,wBAAwBthD,KAAAA,E,gCAExFhR,OAAAA,eAAWyC,EAAAA,UAAA,gCAA6B,C,IAAxC,WAA+E,OAAOnE,KAAKi0D,+BAA+BvhD,KAAAA,E,gCAG1HhR,OAAAA,eAAWyC,EAAAA,UAAA,aAAU,C,IAArB,WAA0C,OAAOnE,KAAKk0D,YAAYxhD,KAAAA,E,gCAElEhR,OAAAA,eAAWyC,EAAAA,UAAA,YAAS,C,IAApB,WAAyC,OAAOnE,KAAKm0D,WAAWzhD,KAAAA,E,gCAEhEhR,OAAAA,eAAWyC,EAAAA,UAAA,eAAY,C,IAAvB,WAA0C,OAAOnE,KAAKoiB,cAAc1P,KAAAA,E,gCAEpEhR,OAAAA,eAAWyC,EAAAA,UAAA,aAAU,C,IAArB,WAAwC,OAAOnE,KAAKipD,YAAYv2C,KAAAA,E,gCAEhEhR,OAAAA,eAAWyC,EAAAA,UAAA,WAAQ,C,IAAnB,WAAwC,OAAOnE,KAAKmpB,UAAUzW,KAAAA,E,gCAE9DhR,OAAAA,eAAWyC,EAAAA,UAAA,gBAAa,C,IAAxB,WAA6C,OAAOnE,KAAKsiB,eAAe5P,KAAAA,E,gCAExEhR,OAAAA,eAAWyC,EAAAA,UAAA,UAAO,C,IAAlB,WAA4C,OAAOnE,KAAKo0D,SAAS1hD,KAAAA,E,gCA0N1DvO,EAAAA,UAAAA,QAAP,WACEhC,EAAAA,UAAM2F,QAAOjG,KAAA,OAMPsC,EAAAA,UAAAA,eAAR,SAAuBmpD,EAAsBC,EAAsBC,EAAuBxlD,GACxFhI,KAAKq0D,YAAYhH,QAAAA,EACjBrtD,KAAKq0D,YAAY/G,aAAeA,EAChCttD,KAAKq0D,YAAY9G,aAAeA,EAChCvtD,KAAKq0D,YAAY7G,cAAgBA,EACjCxtD,KAAKq0D,YAAYrsD,SAAWA,CAAAA,EAGtB7D,EAAAA,UAAAA,uBAAR,SAA+Bub,GAEzB1f,KAAKkS,YAAYuZ,UAAYxV,EAAAA,aAAa4zC,MAC5CyK,QAAQC,KAAK,CAAC70C,EAAG,IAAI40C,SAAQ,SAACE,EAAKC,GAAQ,OAAA3qD,YAAW,WAAM,SAAI,mBAhZ7C,UAiZhB4qD,OAAM,SAAAvyD,GACL,GAAY,kBAARwyD,EACF,MAAMA,EAER5jD,QAAQC,KAAK,uDAkBd7M,EAAAA,UAAAA,MAAP,SAAa+M,EAA2Bq4C,GACtC,IAAItpD,EACAqtD,EAAettD,KAAK2xB,cAAc3b,EAClCu3C,EAAevtD,KAAK2xB,cAAc1b,EAClCtP,EAAQ,EACNiuD,EAAY50D,KAAKq0D,YAAYhH,OAEnC,GAAIuH,EAAW,CAEb,GAAI30D,EAASD,KAAK08B,QAAQ8sB,MAAMxpD,KAAK60D,aAAc70D,KAAKq0D,YAAY7G,cAAejE,GAEjF,OADAvpD,KAAK80D,uBAAuB70D,GACrBA,EAETqtD,EAAettD,KAAKq0D,YAAY/G,aAChCC,EAAevtD,KAAKq0D,YAAY9G,aAChCvtD,KAAKq0D,YAAYhH,QAAAA,EACbn8C,EAAKpL,OAASslD,IAChBzkD,EAAQ3G,KAAKq0D,YAAYrsD,SAAWojD,EA0BxC,IArBIprD,KAAKkS,YAAYuZ,UAAYxV,EAAAA,aAAa8+C,OAC5C/0D,KAAKkS,YAAY8B,MAAM,gBAA+B,iBAAT9C,EAAoB,KAAKA,EAAI,IAAM,KAAK80C,MAAMhlD,UAAUsQ,IAAIzP,KAAKqP,GAAM,SAAA/O,GAAK,OAAAqtB,OAAOC,aAAattB,EAAAA,IAAI8gC,KAAK,IAAG,KAAuB,iBAAT/xB,EACnKA,EAAKG,MAAM,IAAIC,KAAI,SAAAnP,GAAK,OAAAA,EAAEysB,WAAW,MACrC1d,GAKFlR,KAAK60D,aAAa/uD,OAASoL,EAAKpL,QAC9B9F,KAAK60D,aAAa/uD,OAASslD,IAC7BprD,KAAK60D,aAAe,IAAI/H,YAAYnpD,KAAKmP,IAAI5B,EAAKpL,OAAQslD,KAMzDwJ,GACH50D,KAAK8oD,iBAAiBkM,aAIpB9jD,EAAKpL,OAASslD,EAChB,IAAK,IAAItmD,EAAI6B,EAAO7B,EAAIoM,EAAKpL,OAAQhB,GAAKsmD,EAAwB,CAChE,IAAMxkD,EAAM9B,EAAIsmD,EAAyBl6C,EAAKpL,OAAShB,EAAIsmD,EAAyBl6C,EAAKpL,OACnFy/C,EAAuB,iBAATr0C,EAChBlR,KAAKi1D,eAAeC,OAAOhkD,EAAKE,UAAUtM,EAAG8B,GAAM5G,KAAK60D,cACxD70D,KAAKm1D,aAAaD,OAAOhkD,EAAK+7C,SAASnoD,EAAG8B,GAAM5G,KAAK60D,cACzD,GAAI50D,EAASD,KAAK08B,QAAQ8sB,MAAMxpD,KAAK60D,aAActP,GAGjD,OAFAvlD,KAAKo1D,eAAe9H,EAAcC,EAAchI,EAAKzgD,GACrD9E,KAAK80D,uBAAuB70D,GACrBA,CAAAA,MAIX,IAAK20D,IACGrP,EAAuB,iBAATr0C,EAChBlR,KAAKi1D,eAAeC,OAAOhkD,EAAMlR,KAAK60D,cACtC70D,KAAKm1D,aAAaD,OAAOhkD,EAAMlR,KAAK60D,cACpC50D,EAASD,KAAK08B,QAAQ8sB,MAAMxpD,KAAK60D,aAActP,IAGjD,OAFAvlD,KAAKo1D,eAAe9H,EAAcC,EAAchI,EAAK,GACrDvlD,KAAK80D,uBAAuB70D,GACrBA,EAKTD,KAAK2xB,cAAc3b,IAAMs3C,GAAgBttD,KAAK2xB,cAAc1b,IAAMs3C,GACpEvtD,KAAKoiB,cAAcvL,OAIrB7W,KAAK6zD,sBAAsBh9C,KAAK7W,KAAK8oD,iBAAiBniD,MAAO3G,KAAK8oD,iBAAiBliD,IAAAA,EAG9EzC,EAAAA,UAAAA,MAAP,SAAa+M,EAAmBvK,EAAeC,GAC7C,IAAI44B,EACA61B,EACEC,EAAUt1D,KAAKgpD,gBAAgBsM,QAC/B5wC,EAAmB1kB,KAAKqc,gBAAgBmB,WAAWkH,iBACnD/hB,EAAO3C,KAAKiS,eAAetP,KAC3B46B,EAAiBv9B,KAAKw4B,aAAaptB,gBAAgBoyB,WACnDR,EAAah9B,KAAKw4B,aAAayE,MAAMD,WACrCu4B,EAAUv1D,KAAKw1D,aACjBC,EAAYz1D,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,GAE3FjW,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,GAG/CjW,KAAK2xB,cAAc3b,GAAKpP,EAAMD,EAAQ,GAAsD,IAAjD8uD,EAAU/vC,SAAS1lB,KAAK2xB,cAAc3b,EAAI,IACvFy/C,EAAUE,qBAAqB31D,KAAK2xB,cAAc3b,EAAI,EAAG,EAAG,EAAGu/C,EAAQzoD,GAAIyoD,EAAQ1oD,GAAI0oD,EAAQK,UAGjG,IAAK,IAAIlqD,EAAM/E,EAAO+E,EAAM9E,IAAO8E,EAAK,CAUtC,GATA8zB,EAAOtuB,EAAKxF,GAIZ2pD,EAAUr1D,KAAKmS,gBAAgB0jD,QAAQr2B,GAKnCA,EAAO,KAAO81B,EAAS,CACzB,IAAMQ,EAAKR,EAAQ9lC,OAAOC,aAAa+P,IACnCs2B,IACFt2B,EAAOs2B,EAAGlnC,WAAW,GAYzB,IARIlK,GACF1kB,KAAKk0D,YAAYr9C,MAAAA,EAAK,EAAAk/C,qBAAoBv2B,IAOvC61B,IAAWr1D,KAAK2xB,cAAc3b,EAAnC,CAeA,GAAIhW,KAAK2xB,cAAc3b,EAAIq/C,EAAU,GAAK1yD,EAGxC,GAAI46B,EAAgB,CAElB,KAAOv9B,KAAK2xB,cAAc3b,EAAIrT,GAC5B8yD,EAAUE,qBAAqB31D,KAAK2xB,cAAc3b,IAAK,EAAG,EAAGu/C,EAAQzoD,GAAIyoD,EAAQ1oD,GAAI0oD,EAAQK,UAE/F51D,KAAK2xB,cAAc3b,EAAI,EACvBhW,KAAK2xB,cAAc1b,IACfjW,KAAK2xB,cAAc1b,IAAMjW,KAAK2xB,cAAc03B,aAAe,GAC7DrpD,KAAK2xB,cAAc1b,IACnBjW,KAAKiS,eAAe+3C,OAAOhqD,KAAKg2D,kBAAAA,KAE5Bh2D,KAAK2xB,cAAc1b,GAAKjW,KAAKiS,eAAevP,OAC9C1C,KAAK2xB,cAAc1b,EAAIjW,KAAKiS,eAAevP,KAAO,GAIpD1C,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,GAAIukB,WAAAA,GAGjFi7B,EAAYz1D,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,EAAAA,MAGvF,GADAjW,KAAK2xB,cAAc3b,EAAIrT,EAAO,EACd,IAAZ0yD,EAGF,SAuBN,GAjBIr4B,IAEFy4B,EAAUQ,YAAYj2D,KAAK2xB,cAAc3b,EAAGq/C,EAASr1D,KAAK2xB,cAAcukC,YAAYX,GAAUA,GAIzD,IAAjCE,EAAU/vC,SAAS/iB,EAAO,IAC5B8yD,EAAUE,qBAAqBhzD,EAAO,EAAG8W,EAAAA,eAAgBA,EAAAA,gBAAiB87C,EAAQzoD,GAAIyoD,EAAQ1oD,GAAI0oD,EAAQK,WAK9GH,EAAUE,qBAAqB31D,KAAK2xB,cAAc3b,IAAKwpB,EAAM61B,EAASE,EAAQzoD,GAAIyoD,EAAQ1oD,GAAI0oD,EAAQK,UAKlGP,EAAU,EACZ,OAASA,GAEPI,EAAUE,qBAAqB31D,KAAK2xB,cAAc3b,IAAK,EAAG,EAAGu/C,EAAQzoD,GAAIyoD,EAAQ1oD,GAAI0oD,EAAQK,SAAAA,MApE1FH,EAAU/vC,SAAS1lB,KAAK2xB,cAAc3b,EAAI,GAM7Cy/C,EAAUU,mBAAmBn2D,KAAK2xB,cAAc3b,EAAI,EAAGwpB,GAFvDi2B,EAAUU,mBAAmBn2D,KAAK2xB,cAAc3b,EAAI,EAAGwpB,EAwEzD54B,CAAAA,EAAMD,EAAQ,IAChB8uD,EAAU9uB,SAAS3mC,KAAK2xB,cAAc3b,EAAI,EAAGhW,KAAK2yC,WAChB,IAA9B3yC,KAAK2yC,UAAUjtB,YAAoB1lB,KAAK2yC,UAAUrQ,UAAY,MAChEtiC,KAAK08B,QAAQ05B,mBAAqB,EACzBp2D,KAAK2yC,UAAU0jB,aACxBr2D,KAAK08B,QAAQ05B,mBAAqBp2D,KAAK2yC,UAAUnR,WAAW5S,WAAW,GAEvE5uB,KAAK08B,QAAQ05B,mBAAqBp2D,KAAK2yC,UAAU5+B,SAKjD/T,KAAK2xB,cAAc3b,EAAIrT,GAAQiE,EAAMD,EAAQ,GAAkD,IAA7C8uD,EAAU/vC,SAAS1lB,KAAK2xB,cAAc3b,KAAay/C,EAAUa,WAAWt2D,KAAK2xB,cAAc3b,IAC/Iy/C,EAAUE,qBAAqB31D,KAAK2xB,cAAc3b,EAAG,EAAG,EAAGu/C,EAAQzoD,GAAIyoD,EAAQ1oD,GAAI0oD,EAAQK,UAG7F51D,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,EAAAA,EAM9C9R,EAAAA,UAAAA,mBAAP,SAA0BgQ,EAAyB+J,GAAnD,WACE,MAAiB,MAAb/J,EAAGo2C,OAAkBp2C,EAAG+6C,QAAW/6C,EAAGk6C,cASnCruD,KAAK08B,QAAQytB,mBAAmBh2C,EAAI+J,GAPlCle,KAAK08B,QAAQytB,mBAAmBh2C,GAAI,YACzC,OAAKk3C,EAAoB0B,EAAOA,OAAO,GAAI7qD,EAAKma,gBAAgBmB,WAAWuzC,gBAGpE7yC,EAAS6uC,EAAAA,GAAAA,EASf5oD,EAAAA,UAAAA,mBAAP,SAA0BgQ,EAAyB+J,GACjD,OAAOle,KAAK08B,QAAQwtB,mBAAmB/1C,EAAI,IAAIwL,EAAAA,WAAWzB,GAAAA,EAMrD/Z,EAAAA,UAAAA,mBAAP,SAA0BgQ,EAAyB+J,GACjD,OAAOle,KAAK08B,QAAQutB,mBAAmB91C,EAAI+J,EAAAA,EAMtC/Z,EAAAA,UAAAA,mBAAP,SAA0B+e,EAAehF,GACvC,OAAOle,KAAK08B,QAAQ0tB,mBAAmBlnC,EAAO,IAAItV,EAAAA,WAAWsQ,GAAAA,EAWxD/Z,EAAAA,UAAAA,KAAP,WAEE,OADAnE,KAAK4zD,eAAe/8C,QAAAA,CACb,EAaF1S,EAAAA,UAAAA,SAAP,WAmBE,OAlBAnE,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,GAC/CjW,KAAKqc,gBAAgBmB,WAAW+4C,aAClCv2D,KAAK2xB,cAAc3b,EAAI,GAEzBhW,KAAK2xB,cAAc1b,IACfjW,KAAK2xB,cAAc1b,IAAMjW,KAAK2xB,cAAc03B,aAAe,GAC7DrpD,KAAK2xB,cAAc1b,IACnBjW,KAAKiS,eAAe+3C,OAAOhqD,KAAKg2D,mBACvBh2D,KAAK2xB,cAAc1b,GAAKjW,KAAKiS,eAAevP,OACrD1C,KAAK2xB,cAAc1b,EAAIjW,KAAKiS,eAAevP,KAAO,GAGhD1C,KAAK2xB,cAAc3b,GAAKhW,KAAKiS,eAAetP,MAC9C3C,KAAK2xB,cAAc3b,IAErBhW,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,GAEnDjW,KAAKipD,YAAYpyC,QAAAA,CACV,EASF1S,EAAAA,UAAAA,eAAP,WAEE,OADAnE,KAAK2xB,cAAc3b,EAAI,IAChB,EAcF7R,EAAAA,UAAAA,UAAP,W,MAEE,IAAKnE,KAAKw4B,aAAaptB,gBAAgBiyB,kBAKrC,OAJAr9B,KAAKw2D,kBACDx2D,KAAK2xB,cAAc3b,EAAI,GACzBhW,KAAK2xB,cAAc3b,KAAAA,EAUvB,GAFAhW,KAAKw2D,gBAAgBx2D,KAAKiS,eAAetP,MAErC3C,KAAK2xB,cAAc3b,EAAI,EACzBhW,KAAK2xB,cAAc3b,SAUnB,GAA6B,IAAzBhW,KAAK2xB,cAAc3b,GAClBhW,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,WAC1CzyB,KAAK2xB,cAAc1b,GAAKjW,KAAK2xB,cAAc03B,eACkC,QAA7ElnD,EAAAA,KAAKwvB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,UAAAA,IAAE9T,OAAAA,EAAAA,EAAEq4B,WAAW,CAC7Fx6B,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,GAAIukB,WAAAA,EAC/Ex6B,KAAK2xB,cAAc1b,IACnBjW,KAAK2xB,cAAc3b,EAAIhW,KAAKiS,eAAetP,KAAO,EAKlD,IAAM+S,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,GACpFP,EAAKqsC,SAAS/hD,KAAK2xB,cAAc3b,KAAON,EAAK4gD,WAAWt2D,KAAK2xB,cAAc3b,IAC7EhW,KAAK2xB,cAAc3b,GAQzB,QADAhW,KAAKw2D,mBAAAA,CACE,EASFryD,EAAAA,UAAAA,IAAP,WACE,GAAInE,KAAK2xB,cAAc3b,GAAKhW,KAAKiS,eAAetP,KAC9C,OAAO,EAET,IAAM8zD,EAAYz2D,KAAK2xB,cAAc3b,EAKrC,OAJAhW,KAAK2xB,cAAc3b,EAAIhW,KAAK2xB,cAAc+kC,WACtC12D,KAAKqc,gBAAgBmB,WAAWkH,kBAClC1kB,KAAKm0D,WAAWt9C,KAAK7W,KAAK2xB,cAAc3b,EAAIygD,IAAAA,CAEvC,EAUFtyD,EAAAA,UAAAA,SAAP,WAEE,OADAnE,KAAKgpD,gBAAgBqK,UAAU,KACxB,EAUFlvD,EAAAA,UAAAA,QAAP,WAEE,OADAnE,KAAKgpD,gBAAgBqK,UAAU,KACxB,EAMDlvD,EAAAA,UAAAA,gBAAR,SAAwBwyD,QAAAA,IAAAA,IAAAA,EAAiB32D,KAAKiS,eAAetP,KAAO,GAClE3C,KAAK2xB,cAAc3b,EAAIrS,KAAKmP,IAAI6jD,EAAQhzD,KAAKC,IAAI,EAAG5D,KAAK2xB,cAAc3b,IACvEhW,KAAK2xB,cAAc1b,EAAIjW,KAAKw4B,aAAaptB,gBAAgB+xB,OACrDx5B,KAAKmP,IAAI9S,KAAK2xB,cAAc03B,aAAc1lD,KAAKC,IAAI5D,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc1b,IACpGtS,KAAKmP,IAAI9S,KAAKiS,eAAevP,KAAO,EAAGiB,KAAKC,IAAI,EAAG5D,KAAK2xB,cAAc1b,IAC1EjW,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,EAAAA,EAM7C9R,EAAAA,UAAAA,WAAR,SAAmB6R,EAAWC,GAC5BjW,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,GAC/CjW,KAAKw4B,aAAaptB,gBAAgB+xB,QACpCn9B,KAAK2xB,cAAc3b,EAAIA,EACvBhW,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UAAYxc,IAEtDjW,KAAK2xB,cAAc3b,EAAIA,EACvBhW,KAAK2xB,cAAc1b,EAAIA,GAEzBjW,KAAKw2D,kBACLx2D,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,EAAAA,EAM7C9R,EAAAA,UAAAA,YAAR,SAAoB6R,EAAWC,GAG7BjW,KAAKw2D,kBACLx2D,KAAK42D,WAAW52D,KAAK2xB,cAAc3b,EAAIA,EAAGhW,KAAK2xB,cAAc1b,EAAIA,EAAAA,EAU5D9R,EAAAA,UAAAA,SAAP,SAAgB4oD,GAEd,IAAM8J,EAAY72D,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UAM5D,OALIokC,GAAa,EACf72D,KAAK82D,YAAY,GAAInzD,KAAKmP,IAAI+jD,EAAW9J,EAAOA,OAAO,IAAM,IAE7D/sD,KAAK82D,YAAY,IAAK/J,EAAOA,OAAO,IAAM,MAErC,EAUF5oD,EAAAA,UAAAA,WAAP,SAAkB4oD,GAEhB,IAAMgK,EAAe/2D,KAAK2xB,cAAc03B,aAAerpD,KAAK2xB,cAAc1b,EAM1E,OALI8gD,GAAgB,EAClB/2D,KAAK82D,YAAY,EAAGnzD,KAAKmP,IAAIikD,EAAchK,EAAOA,OAAO,IAAM,IAE/D/sD,KAAK82D,YAAY,EAAG/J,EAAOA,OAAO,IAAM,KAEnC,EASF5oD,EAAAA,UAAAA,cAAP,SAAqB4oD,GAEnB,OADA/sD,KAAK82D,YAAY/J,EAAOA,OAAO,IAAM,EAAG,KACjC,EASF5oD,EAAAA,UAAAA,eAAP,SAAsB4oD,GAEpB,OADA/sD,KAAK82D,cAAc/J,EAAOA,OAAO,IAAM,GAAI,KACpC,EAWF5oD,EAAAA,UAAAA,eAAP,SAAsB4oD,GAGpB,OAFA/sD,KAAKyuD,WAAW1B,GAChB/sD,KAAK2xB,cAAc3b,EAAI,IAChB,EAWF7R,EAAAA,UAAAA,oBAAP,SAA2B4oD,GAGzB,OAFA/sD,KAAKuuD,SAASxB,GACd/sD,KAAK2xB,cAAc3b,EAAI,IAChB,EASF7R,EAAAA,UAAAA,mBAAP,SAA0B4oD,GAExB,OADA/sD,KAAK42D,YAAY7J,EAAOA,OAAO,IAAM,GAAK,EAAG/sD,KAAK2xB,cAAc1b,IAAAA,CACzD,EAYF9R,EAAAA,UAAAA,eAAP,SAAsB4oD,GAOpB,OANA/sD,KAAK42D,WAEF7J,EAAOjnD,QAAU,GAAMinD,EAAOA,OAAO,IAAM,GAAK,EAAI,GAEpDA,EAAOA,OAAO,IAAM,GAAK,KAErB,EAUF5oD,EAAAA,UAAAA,gBAAP,SAAuB4oD,GAErB,OADA/sD,KAAK42D,YAAY7J,EAAOA,OAAO,IAAM,GAAK,EAAG/sD,KAAK2xB,cAAc1b,IAAAA,CACzD,EASF9R,EAAAA,UAAAA,kBAAP,SAAyB4oD,GAEvB,OADA/sD,KAAK82D,YAAY/J,EAAOA,OAAO,IAAM,EAAG,KACjC,EASF5oD,EAAAA,UAAAA,gBAAP,SAAuB4oD,GAErB,OADA/sD,KAAK42D,WAAW52D,KAAK2xB,cAAc3b,GAAI+2C,EAAOA,OAAO,IAAM,GAAK,KACzD,EAUF5oD,EAAAA,UAAAA,kBAAP,SAAyB4oD,GAEvB,OADA/sD,KAAK82D,YAAY,EAAG/J,EAAOA,OAAO,IAAM,KACjC,EAWF5oD,EAAAA,UAAAA,WAAP,SAAkB4oD,GAEhB,OADA/sD,KAAK+uD,eAAehC,IAAAA,CACb,EAcF5oD,EAAAA,UAAAA,SAAP,SAAgB4oD,GACd,IAAMiK,EAAQjK,EAAOA,OAAO,GAM5B,OALc,IAAViK,SACKh3D,KAAK2xB,cAAcslC,KAAKj3D,KAAK2xB,cAAc3b,GAC/B,IAAVghD,IACTh3D,KAAK2xB,cAAcslC,KAAO,CAAC,IAAD,CAErB,EASF9yD,EAAAA,UAAAA,iBAAP,SAAwB4oD,GACtB,GAAI/sD,KAAK2xB,cAAc3b,GAAKhW,KAAKiS,eAAetP,KAC9C,OAAO,EAGT,IADA,IAAIq0D,EAAQjK,EAAOA,OAAO,IAAM,EACzBiK,KACLh3D,KAAK2xB,cAAc3b,EAAIhW,KAAK2xB,cAAc+kC,WAE5C,OAAO,GAQFvyD,EAAAA,UAAAA,kBAAP,SAAyB4oD,GACvB,GAAI/sD,KAAK2xB,cAAc3b,GAAKhW,KAAKiS,eAAetP,KAC9C,OAAO,EAIT,IAFA,IAAIq0D,EAAQjK,EAAOA,OAAO,IAAM,EAEzBiK,KACLh3D,KAAK2xB,cAAc3b,EAAIhW,KAAK2xB,cAAculC,WAE5C,OAAO,GAYD/yD,EAAAA,UAAAA,mBAAR,SAA2B8R,EAAWtP,EAAeC,EAAauwD,QAAAA,IAAAA,IAAAA,GAAAA,GAChE,IAAMzhD,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQrP,GACrEP,EAAK0hD,aACHzwD,EACAC,EACA5G,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBACpCh2D,KAAKg2D,kBAEHmB,IACFzhD,EAAK8kB,WAAAA,EAAY,EASbr2B,EAAAA,UAAAA,iBAAR,SAAyB8R,GACvB,IAAMP,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQrP,GACrEP,EAAKm6B,KAAK7vC,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,mBAC9Ch2D,KAAKiS,eAAe7J,OAAOivD,aAAar3D,KAAK2xB,cAAcrM,MAAQrP,GACnEP,EAAK8kB,WAAAA,CAAY,EA2BZr2B,EAAAA,UAAAA,eAAP,SAAsB4oD,GAEpB,IAAI5yC,EACJ,OAFAna,KAAKw2D,gBAAgBx2D,KAAKiS,eAAetP,MAEjCoqD,EAAOA,OAAO,IACpB,KAAK,EAIH,IAHA5yC,EAAIna,KAAK2xB,cAAc1b,EACvBjW,KAAK8oD,iBAAiB4M,UAAUv7C,GAChCna,KAAKs3D,mBAAmBn9C,IAAKna,KAAK2xB,cAAc3b,EAAGhW,KAAKiS,eAAetP,KAA+B,IAAzB3C,KAAK2xB,cAAc3b,GACzFmE,EAAIna,KAAKiS,eAAevP,KAAMyX,IACnCna,KAAKu3D,iBAAiBp9C,GAExBna,KAAK8oD,iBAAiB4M,UAAUv7C,GAChC,MACF,KAAK,EASH,IARAA,EAAIna,KAAK2xB,cAAc1b,EACvBjW,KAAK8oD,iBAAiB4M,UAAUv7C,GAEhCna,KAAKs3D,mBAAmBn9C,EAAG,EAAGna,KAAK2xB,cAAc3b,EAAI,MACjDhW,KAAK2xB,cAAc3b,EAAI,GAAKhW,KAAKiS,eAAetP,OAElD3C,KAAK2xB,cAActpB,MAAM5I,IAAI0a,EAAI,GAAIqgB,WAAAA,GAEhCrgB,KACLna,KAAKu3D,iBAAiBp9C,GAExBna,KAAK8oD,iBAAiB4M,UAAU,GAChC,MACF,KAAK,EAGH,IAFAv7C,EAAIna,KAAKiS,eAAevP,KACxB1C,KAAK8oD,iBAAiB4M,UAAUv7C,EAAI,GAC7BA,KACLna,KAAKu3D,iBAAiBp9C,GAExBna,KAAK8oD,iBAAiB4M,UAAU,GAChC,MACF,KAAK,EAEH,IAAM8B,EAAiBx3D,KAAK2xB,cAActpB,MAAMvC,OAAS9F,KAAKiS,eAAevP,KACzE80D,EAAiB,IACnBx3D,KAAK2xB,cAActpB,MAAMovD,UAAUD,GACnCx3D,KAAK2xB,cAAcrM,MAAQ3hB,KAAKC,IAAI5D,KAAK2xB,cAAcrM,MAAQkyC,EAAgB,GAC/Ex3D,KAAK2xB,cAActnB,MAAQ1G,KAAKC,IAAI5D,KAAK2xB,cAActnB,MAAQmtD,EAAgB,GAE/Ex3D,KAAKmpB,UAAUtS,KAAK,IAI1B,OAAO,GAyBF1S,EAAAA,UAAAA,YAAP,SAAmB4oD,GAEjB,OADA/sD,KAAKw2D,gBAAgBx2D,KAAKiS,eAAetP,MACjCoqD,EAAOA,OAAO,IACpB,KAAK,EACH/sD,KAAKs3D,mBAAmBt3D,KAAK2xB,cAAc1b,EAAGjW,KAAK2xB,cAAc3b,EAAGhW,KAAKiS,eAAetP,KAA+B,IAAzB3C,KAAK2xB,cAAc3b,GACjH,MACF,KAAK,EACHhW,KAAKs3D,mBAAmBt3D,KAAK2xB,cAAc1b,EAAG,EAAGjW,KAAK2xB,cAAc3b,EAAI,MACxE,MACF,KAAK,EACHhW,KAAKs3D,mBAAmBt3D,KAAK2xB,cAAc1b,EAAG,EAAGjW,KAAKiS,eAAetP,MAAAA,GAIzE,OADA3C,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,IAAAA,CAC5C,EAYF9R,EAAAA,UAAAA,YAAP,SAAmB4oD,GACjB/sD,KAAKw2D,kBACL,IAAIQ,EAAQjK,EAAOA,OAAO,IAAM,EAEhC,GAAI/sD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAc03B,cAAgBrpD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UACtG,OAAO,EAOT,IAJA,IAAM/H,EAAc1qB,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,EAE5DyhD,EAAyB13D,KAAKiS,eAAevP,KAAO,EAAI1C,KAAK2xB,cAAc03B,aAC3EsO,EAAuB33D,KAAKiS,eAAevP,KAAO,EAAI1C,KAAK2xB,cAAcrM,MAAQoyC,EAAyB,EACzGV,KAGLh3D,KAAK2xB,cAActpB,MAAMwM,OAAO8iD,EAAuB,EAAG,GAC1D33D,KAAK2xB,cAActpB,MAAMwM,OAAO6V,EAAK,EAAG1qB,KAAK2xB,cAAc3B,aAAahwB,KAAKg2D,mBAK/E,OAFAh2D,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAc1b,EAAGjW,KAAK2xB,cAAc03B,cAC9ErpD,KAAK2xB,cAAc3b,EAAI,IAChB,EAYF7R,EAAAA,UAAAA,YAAP,SAAmB4oD,GACjB/sD,KAAKw2D,kBACL,IAAIQ,EAAQjK,EAAOA,OAAO,IAAM,EAEhC,GAAI/sD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAc03B,cAAgBrpD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UACtG,OAAO,EAGT,IAEItY,EAFEuQ,EAAc1qB,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,EAKlE,IAFAkE,EAAIna,KAAKiS,eAAevP,KAAO,EAAI1C,KAAK2xB,cAAc03B,aACtDlvC,EAAIna,KAAKiS,eAAevP,KAAO,EAAI1C,KAAK2xB,cAAcrM,MAAQnL,EACvD68C,KAGLh3D,KAAK2xB,cAActpB,MAAMwM,OAAO6V,EAAK,GACrC1qB,KAAK2xB,cAActpB,MAAMwM,OAAOsF,EAAG,EAAGna,KAAK2xB,cAAc3B,aAAahwB,KAAKg2D,mBAK7E,OAFAh2D,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAc1b,EAAGjW,KAAK2xB,cAAc03B,cAC9ErpD,KAAK2xB,cAAc3b,EAAI,IAChB,EAcF7R,EAAAA,UAAAA,YAAP,SAAmB4oD,GACjB/sD,KAAKw2D,kBACL,IAAM9gD,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,GAUxF,OATIP,IACFA,EAAKugD,YACHj2D,KAAK2xB,cAAc3b,EACnB+2C,EAAOA,OAAO,IAAM,EACpB/sD,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBACpCh2D,KAAKg2D,kBAEPh2D,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,KAAAA,CAE9C,EAcF9R,EAAAA,UAAAA,YAAP,SAAmB4oD,GACjB/sD,KAAKw2D,kBACL,IAAM9gD,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,GAUxF,OATIP,IACFA,EAAKkiD,YACH53D,KAAK2xB,cAAc3b,EACnB+2C,EAAOA,OAAO,IAAM,EACpB/sD,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBACpCh2D,KAAKg2D,kBAEPh2D,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,KAAAA,CAE9C,EAWF9R,EAAAA,UAAAA,SAAP,SAAgB4oD,GAGd,IAFA,IAAIiK,EAAQjK,EAAOA,OAAO,IAAM,EAEzBiK,KACLh3D,KAAK2xB,cAActpB,MAAMwM,OAAO7U,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAcc,UAAW,GACzFzyB,KAAK2xB,cAActpB,MAAMwM,OAAO7U,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc03B,aAAc,EAAGrpD,KAAK2xB,cAAc3B,aAAahwB,KAAKg2D,mBAGtI,OADAh2D,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc03B,eAAAA,CAC/E,EAQFllD,EAAAA,UAAAA,WAAP,SAAkB4oD,GAGhB,IAFA,IAAIiK,EAAQjK,EAAOA,OAAO,IAAM,EAEzBiK,KACLh3D,KAAK2xB,cAActpB,MAAMwM,OAAO7U,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc03B,aAAc,GAC5FrpD,KAAK2xB,cAActpB,MAAMwM,OAAO7U,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAcc,UAAW,EAAGzyB,KAAK2xB,cAAc3B,aAAanwB,EAAAA,oBAG9H,OADAG,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc03B,eAAAA,CAC/E,EAqBFllD,EAAAA,UAAAA,WAAP,SAAkB4oD,GAChB,GAAI/sD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAc03B,cAAgBrpD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UACtG,OAAO,EAGT,IADA,IAAMukC,EAAQjK,EAAOA,OAAO,IAAM,EACzB92C,EAAIjW,KAAK2xB,cAAcc,UAAWxc,GAAKjW,KAAK2xB,cAAc03B,eAAgBpzC,EAAG,CACpF,IAAMP,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQrP,GACrEP,EAAKkiD,YAAY,EAAGZ,EAAOh3D,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBAAmBh2D,KAAKg2D,kBACvFtgD,EAAK8kB,WAAAA,CAGP,QADAx6B,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc03B,eAAAA,CAC/E,EAsBFllD,EAAAA,UAAAA,YAAP,SAAmB4oD,GACjB,GAAI/sD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAc03B,cAAgBrpD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UACtG,OAAO,EAGT,IADA,IAAMukC,EAAQjK,EAAOA,OAAO,IAAM,EACzB92C,EAAIjW,KAAK2xB,cAAcc,UAAWxc,GAAKjW,KAAK2xB,cAAc03B,eAAgBpzC,EAAG,CACpF,IAAMP,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQrP,GACrEP,EAAKugD,YAAY,EAAGe,EAAOh3D,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBAAmBh2D,KAAKg2D,kBACvFtgD,EAAK8kB,WAAAA,CAGP,QADAx6B,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc03B,eAAAA,CAC/E,EAYFllD,EAAAA,UAAAA,cAAP,SAAqB4oD,GACnB,GAAI/sD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAc03B,cAAgBrpD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UACtG,OAAO,EAGT,IADA,IAAMukC,EAAQjK,EAAOA,OAAO,IAAM,EACzB92C,EAAIjW,KAAK2xB,cAAcc,UAAWxc,GAAKjW,KAAK2xB,cAAc03B,eAAgBpzC,EAAG,CACpF,IAAMP,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQrP,GACrEP,EAAKugD,YAAYj2D,KAAK2xB,cAAc3b,EAAGghD,EAAOh3D,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBAAmBh2D,KAAKg2D,kBAC1GtgD,EAAK8kB,WAAAA,CAGP,QADAx6B,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc03B,eAAAA,CAC/E,EAYFllD,EAAAA,UAAAA,cAAP,SAAqB4oD,GACnB,GAAI/sD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAc03B,cAAgBrpD,KAAK2xB,cAAc1b,EAAIjW,KAAK2xB,cAAcc,UACtG,OAAO,EAGT,IADA,IAAMukC,EAAQjK,EAAOA,OAAO,IAAM,EACzB92C,EAAIjW,KAAK2xB,cAAcc,UAAWxc,GAAKjW,KAAK2xB,cAAc03B,eAAgBpzC,EAAG,CACpF,IAAMP,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQrP,GACrEP,EAAKkiD,YAAY53D,KAAK2xB,cAAc3b,EAAGghD,EAAOh3D,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBAAmBh2D,KAAKg2D,kBAC1GtgD,EAAK8kB,WAAAA,CAGP,QADAx6B,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc03B,eAAAA,CAC/E,EAWFllD,EAAAA,UAAAA,WAAP,SAAkB4oD,GAChB/sD,KAAKw2D,kBACL,IAAM9gD,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIO,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,GAUxF,OATIP,IACFA,EAAK0hD,aACHp3D,KAAK2xB,cAAc3b,EACnBhW,KAAK2xB,cAAc3b,GAAK+2C,EAAOA,OAAO,IAAM,GAC5C/sD,KAAK2xB,cAAcukC,YAAYl2D,KAAKg2D,kBACpCh2D,KAAKg2D,kBAEPh2D,KAAK8oD,iBAAiB4M,UAAU11D,KAAK2xB,cAAc1b,KAAAA,CAE9C,EA8BF9R,EAAAA,UAAAA,yBAAP,SAAgC4oD,GAC9B,IAAK/sD,KAAK08B,QAAQ05B,mBAChB,OAAO,EAKT,IAFA,IAAMtwD,EAASinD,EAAOA,OAAO,IAAM,EAC7B77C,EAAO,IAAI47C,YAAYhnD,GACpBhB,EAAI,EAAGA,EAAIgB,IAAUhB,EAC5BoM,EAAKpM,GAAK9E,KAAK08B,QAAQ05B,mBAGzB,OADAp2D,KAAKmuD,MAAMj9C,EAAM,EAAGA,EAAKpL,SAAAA,CAClB,EA4BF3B,EAAAA,UAAAA,4BAAP,SAAmC4oD,GACjC,OAAIA,EAAOA,OAAO,GAAK,IAGnB/sD,KAAK63D,IAAI,UAAY73D,KAAK63D,IAAI,iBAAmB73D,KAAK63D,IAAI,UAC5D73D,KAAKw4B,aAAantB,iBAAiB7G,EAAAA,GAAG6e,IAAM,UACnCrjB,KAAK63D,IAAI,UAClB73D,KAAKw4B,aAAantB,iBAAiB7G,EAAAA,GAAG6e,IAAM,WALrC,EAkCJlf,EAAAA,UAAAA,8BAAP,SAAqC4oD,GACnC,OAAIA,EAAOA,OAAO,GAAK,IAMnB/sD,KAAK63D,IAAI,SACX73D,KAAKw4B,aAAantB,iBAAiB7G,EAAAA,GAAG6e,IAAM,cACnCrjB,KAAK63D,IAAI,gBAClB73D,KAAKw4B,aAAantB,iBAAiB7G,EAAAA,GAAG6e,IAAM,cACnCrjB,KAAK63D,IAAI,SAGlB73D,KAAKw4B,aAAantB,iBAAiB0hD,EAAOA,OAAO,GAAK,KAC7C/sD,KAAK63D,IAAI,WAClB73D,KAAKw4B,aAAantB,iBAAiB7G,EAAAA,GAAG6e,IAAM,oBAdrC,EAuBHlf,EAAAA,UAAAA,IAAR,SAAY2zD,GACV,OAAyE,KAAjE93D,KAAKqc,gBAAgBmB,WAAWu6C,SAAW,IAAIziD,QAAQwiD,EAAAA,EAoB1D3zD,EAAAA,UAAAA,QAAP,SAAe4oD,GACb,IAAK,IAAIjoD,EAAI,EAAGA,EAAIioD,EAAOjnD,OAAQhB,IAE1B,IADCioD,EAAOA,OAAOjoD,KAElB9E,KAAKw4B,aAAayE,MAAMD,YAAAA,GAO9B,OAAO,GAoHF74B,EAAAA,UAAAA,eAAP,SAAsB4oD,GACpB,IAAK,IAAIjoD,EAAI,EAAGA,EAAIioD,EAAOjnD,OAAQhB,IACjC,OAAQioD,EAAOA,OAAOjoD,IACpB,KAAK,EACH9E,KAAKw4B,aAAaptB,gBAAgB4gB,uBAAAA,EAClC,MACF,KAAK,EACHhsB,KAAKgpD,gBAAgBgP,YAAY,EAAGvzD,EAAAA,iBACpCzE,KAAKgpD,gBAAgBgP,YAAY,EAAGvzD,EAAAA,iBACpCzE,KAAKgpD,gBAAgBgP,YAAY,EAAGvzD,EAAAA,iBACpCzE,KAAKgpD,gBAAgBgP,YAAY,EAAGvzD,EAAAA,iBAEpC,MACF,KAAK,EAMCzE,KAAKqc,gBAAgBmB,WAAWuzC,cAAcxF,cAChDvrD,KAAKiS,eAAenP,OAAO,IAAK9C,KAAKiS,eAAevP,MACpD1C,KAAK8zD,gBAAgBj9C,QAEvB,MACF,KAAK,EACH7W,KAAKw4B,aAAaptB,gBAAgB+xB,QAAAA,EAClCn9B,KAAK42D,WAAW,EAAG,GACnB,MACF,KAAK,EACH52D,KAAKw4B,aAAaptB,gBAAgBoyB,YAAAA,EAClC,MACF,KAAK,GAEH,MACF,KAAK,GACHx9B,KAAKw4B,aAAaptB,gBAAgBiyB,mBAAAA,EAClC,MACF,KAAK,GACHr9B,KAAKkS,YAAY8B,MAAM,6CACvBhU,KAAKw4B,aAAaptB,gBAAgB2xB,mBAAAA,EAClC/8B,KAAKg0D,wBAAwBn9C,OAC7B,MACF,KAAK,EAEH7W,KAAKotD,kBAAkBxhC,eAAiB,MACxC,MACF,KAAK,IAEH5rB,KAAKotD,kBAAkBxhC,eAAiB,QACxC,MACF,KAAK,KACH5rB,KAAKotD,kBAAkBxhC,eAAiB,OACxC,MACF,KAAK,KAGH5rB,KAAKotD,kBAAkBxhC,eAAiB,MACxC,MACF,KAAK,KAGH5rB,KAAKw4B,aAAaptB,gBAAgB0Z,WAAAA,EAClC9kB,KAAK+zD,oBAAoBl9C,OACzB,MACF,KAAK,KACH7W,KAAKkS,YAAY8B,MAAM,yCACvB,MACF,KAAK,KACHhU,KAAKotD,kBAAkB6K,eAAiB,MACxC,MACF,KAAK,KACHj4D,KAAKkS,YAAY8B,MAAM,yCACvB,MACF,KAAK,GACHhU,KAAKw4B,aAAaiO,gBAAAA,EAClB,MACF,KAAK,KACHzmC,KAAK8wD,aACL,MACF,KAAK,KACH9wD,KAAK8wD,aAEP,KAAK,GACL,KAAK,KACH9wD,KAAKiS,eAAe+R,QAAQk0C,kBAAkBl4D,KAAKg2D,kBACnDh2D,KAAKw4B,aAAahM,qBAAAA,EAClBxsB,KAAK6zD,sBAAsBh9C,KAAK,EAAG7W,KAAKiS,eAAevP,KAAO,GAC9D1C,KAAKg0D,wBAAwBn9C,OAC7B,MACF,KAAK,KACH7W,KAAKw4B,aAAaptB,gBAAgBJ,oBAAAA,EAIxC,OAAO,GAwBF7G,EAAAA,UAAAA,UAAP,SAAiB4oD,GACf,IAAK,IAAIjoD,EAAI,EAAGA,EAAIioD,EAAOjnD,OAAQhB,IAE1B,IADCioD,EAAOA,OAAOjoD,KAElB9E,KAAKw4B,aAAayE,MAAMD,YAAAA,GAO9B,OAAO,GAgHF74B,EAAAA,UAAAA,iBAAP,SAAwB4oD,GACtB,IAAK,IAAIjoD,EAAI,EAAGA,EAAIioD,EAAOjnD,OAAQhB,IACjC,OAAQioD,EAAOA,OAAOjoD,IACpB,KAAK,EACH9E,KAAKw4B,aAAaptB,gBAAgB4gB,uBAAAA,EAClC,MACF,KAAK,EAMChsB,KAAKqc,gBAAgBmB,WAAWuzC,cAAcxF,cAChDvrD,KAAKiS,eAAenP,OAAO,GAAI9C,KAAKiS,eAAevP,MACnD1C,KAAK8zD,gBAAgBj9C,QAEvB,MACF,KAAK,EACH7W,KAAKw4B,aAAaptB,gBAAgB+xB,QAAAA,EAClCn9B,KAAK42D,WAAW,EAAG,GACnB,MACF,KAAK,EACH52D,KAAKw4B,aAAaptB,gBAAgBoyB,YAAAA,EAClC,MACF,KAAK,GAEH,MACF,KAAK,GACHx9B,KAAKw4B,aAAaptB,gBAAgBiyB,mBAAAA,EAClC,MACF,KAAK,GACHr9B,KAAKkS,YAAY8B,MAAM,oCACvBhU,KAAKw4B,aAAaptB,gBAAgB2xB,mBAAAA,EAClC/8B,KAAKg0D,wBAAwBn9C,OAC7B,MACF,KAAK,EACL,KAAK,IACL,KAAK,KACL,KAAK,KACH7W,KAAKotD,kBAAkBxhC,eAAiB,OACxC,MACF,KAAK,KACH5rB,KAAKw4B,aAAaptB,gBAAgB0Z,WAAAA,EAClC,MACF,KAAK,KACH9kB,KAAKkS,YAAY8B,MAAM,yCACvB,MACF,KAAK,KACHhU,KAAKotD,kBAAkB6K,eAAiB,UACxC,MACF,KAAK,KACHj4D,KAAKkS,YAAY8B,MAAM,yCACvB,MACF,KAAK,GACHhU,KAAKw4B,aAAaiO,gBAAAA,EAClB,MACF,KAAK,KACHzmC,KAAKgxD,gBACL,MACF,KAAK,KAEL,KAAK,GACL,KAAK,KAEHhxD,KAAKiS,eAAe+R,QAAQm0C,uBACH,OAArBpL,EAAOA,OAAOjoD,IAChB9E,KAAKgxD,gBAEPhxD,KAAKw4B,aAAahM,qBAAAA,EAClBxsB,KAAK6zD,sBAAsBh9C,KAAK,EAAG7W,KAAKiS,eAAevP,KAAO,GAC9D1C,KAAKg0D,wBAAwBn9C,OAC7B,MACF,KAAK,KACH7W,KAAKw4B,aAAaptB,gBAAgBJ,oBAAAA,EAIxC,OAAO,GAMD7G,EAAAA,UAAAA,iBAAR,SAAyBsf,EAAe20C,EAAcC,EAAYC,EAAYC,GAS5E,OARa,IAATH,GACF30C,GAAS,SACTA,IAAS,SACTA,GAAS9V,EAAAA,cAAc6qD,aAAa,CAACH,EAAIC,EAAIC,KAC3B,IAATH,IACT30C,IAAS,SACTA,GAAS,SAA2B,IAAL40C,GAE1B50C,CAAAA,EAODtf,EAAAA,UAAAA,cAAR,SAAsB4oD,EAAiBrhD,EAAaiK,GAKlD,IAAM8iD,EAAO,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAG1BC,EAAS,EAGTC,EAAU,EAEd,EAAG,CAED,GADAF,EAAKE,EAAUD,GAAU3L,EAAOA,OAAOrhD,EAAMitD,GACzC5L,EAAO6L,aAAaltD,EAAMitD,GAAU,CACtC,IAAME,EAAY9L,EAAO+L,aAAaptD,EAAMitD,GACxC7zD,EAAI,EACR,GACkB,IAAZ2zD,EAAK,KACPC,EAAS,GAEXD,EAAKE,EAAU7zD,EAAI,EAAI4zD,GAAUG,EAAU/zD,WAClCA,EAAI+zD,EAAU/yD,QAAUhB,EAAI6zD,EAAU,EAAID,EAASD,EAAK3yD,QACnE,KAGF,IAAiB,IAAZ2yD,EAAK,IAAYE,EAAUD,GAAU,GACxB,IAAZD,EAAK,IAAYE,EAAUD,GAAU,EACzC,MAGED,EAAK,KACPC,EAAS,WAEFC,EAAUjtD,EAAMqhD,EAAOjnD,QAAU6yD,EAAUD,EAASD,EAAK3yD,QAGpE,IAAShB,EAAI,EAAGA,EAAI2zD,EAAK3yD,SAAUhB,GAChB,IAAb2zD,EAAK3zD,KACP2zD,EAAK3zD,GAAK,GAKd,OAAQ2zD,EAAK,IACX,KAAK,GACH9iD,EAAK7I,GAAK9M,KAAK+4D,iBAAiBpjD,EAAK7I,GAAI2rD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACH9iD,EAAK9I,GAAK7M,KAAK+4D,iBAAiBpjD,EAAK9I,GAAI4rD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACzE,MACF,KAAK,GACH9iD,EAAKigD,SAAWjgD,EAAKigD,SAASjP,QAC9BhxC,EAAKigD,SAASoD,eAAiBh5D,KAAK+4D,iBAAiBpjD,EAAKigD,SAASoD,eAAgBP,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAGvH,OAAOE,CAAAA,EAYDx0D,EAAAA,UAAAA,kBAAR,SAA0BsG,EAAekL,GAGvCA,EAAKigD,SAAWjgD,EAAKigD,SAASjP,WAGxBl8C,GAASA,EAAQ,KACrBA,EAAQ,GAEVkL,EAAKigD,SAASqD,eAAiBxuD,EAC/BkL,EAAK7I,IAAM,UAGG,IAAVrC,IACFkL,EAAK7I,KAAM,WAIb6I,EAAKujD,gBAAAA,EAoFA/0D,EAAAA,UAAAA,eAAP,SAAsB4oD,GAEpB,GAAsB,IAAlBA,EAAOjnD,QAAqC,IAArBinD,EAAOA,OAAO,GAGvC,OAFA/sD,KAAKw1D,aAAa1oD,GAAKjN,EAAAA,kBAAkBiN,GACzC9M,KAAKw1D,aAAa3oD,GAAKhN,EAAAA,kBAAkBgN,IAAAA,EAQ3C,IAJA,IACI6S,EADE/a,EAAIooD,EAAOjnD,OAEX6P,EAAO3V,KAAKw1D,aAET1wD,EAAI,EAAGA,EAAIH,EAAGG,KACrB4a,EAAIqtC,EAAOA,OAAOjoD,KACT,IAAM4a,GAAK,IAElB/J,EAAK7I,KAAM,SACX6I,EAAK7I,IAAM,SAAqB4S,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzB/J,EAAK9I,KAAM,SACX8I,EAAK9I,IAAM,SAAqB6S,EAAI,IAC3BA,GAAK,IAAMA,GAAK,IAEzB/J,EAAK7I,KAAM,SACX6I,EAAK7I,IAAM,SAAqB4S,EAAI,IAC3BA,GAAK,KAAOA,GAAK,KAE1B/J,EAAK9I,KAAM,SACX8I,EAAK9I,IAAM,SAAqB6S,EAAI,KACrB,IAANA,GAET/J,EAAK7I,GAAKjN,EAAAA,kBAAkBiN,GAC5B6I,EAAK9I,GAAKhN,EAAAA,kBAAkBgN,IACb,IAAN6S,EAET/J,EAAK7I,IAAM,UACI,IAAN4S,EAET/J,EAAK9I,IAAM,SACI,IAAN6S,GAET/J,EAAK7I,IAAM,UACX9M,KAAKm5D,kBAAkBpM,EAAO6L,aAAa9zD,GAAKioD,EAAO+L,aAAah0D,GAAI,GAAK,EAAuB6Q,IACrF,IAAN+J,EAET/J,EAAK7I,IAAM,UACI,IAAN4S,EAGT/J,EAAK7I,IAAM,SACI,IAAN4S,EAET/J,EAAK7I,IAAM,WACI,IAAN4S,EAET/J,EAAK7I,IAAM,WACI,IAAN4S,EAET/J,EAAK9I,IAAM,UACI,KAAN6S,EAET1f,KAAKm5D,kBAAkB,EAAuBxjD,GAC/B,KAAN+J,GAET/J,EAAK7I,KAAM,UACX6I,EAAK9I,KAAM,WACI,KAAN6S,EAET/J,EAAK9I,KAAM,SACI,KAAN6S,EAET/J,EAAK7I,KAAM,UACI,KAAN4S,EAET/J,EAAK7I,KAAM,UACI,KAAN4S,EAET/J,EAAK7I,KAAM,SACI,KAAN4S,EAET/J,EAAK7I,KAAM,WACI,KAAN4S,EAET/J,EAAK7I,IAAM,WACI,KAAN4S,GAET/J,EAAK7I,KAAM,SACX6I,EAAK7I,IAA6B,SAAvBjN,EAAAA,kBAAkBiN,IACd,KAAN4S,GAET/J,EAAK9I,KAAM,SACX8I,EAAK9I,IAA6B,SAAvBhN,EAAAA,kBAAkBgN,IACd,KAAN6S,GAAkB,KAANA,GAAkB,KAANA,EAEjC5a,GAAK9E,KAAKo5D,cAAcrM,EAAQjoD,EAAG6Q,GACpB,KAAN+J,GACT/J,EAAKigD,SAAWjgD,EAAKigD,SAASjP,QAC9BhxC,EAAKigD,SAASoD,gBAAkB,EAChCrjD,EAAKujD,kBACU,MAANx5C,GAET/J,EAAK7I,KAAM,SACX6I,EAAK7I,IAA6B,SAAvBjN,EAAAA,kBAAkBiN,GAC7B6I,EAAK9I,KAAM,SACX8I,EAAK9I,IAA6B,SAAvBhN,EAAAA,kBAAkBgN,IAE7B7M,KAAKkS,YAAY8B,MAAM,6BAA8B0L,GAGzD,OAAO,GA4BFvb,EAAAA,UAAAA,aAAP,SAAoB4oD,GAClB,OAAQA,EAAOA,OAAO,IACpB,KAAK,EAEH/sD,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,OAC5C,MACF,KAAK,EAEH,IAAMpN,EAAIjW,KAAK2xB,cAAc1b,EAAI,EAC3BD,EAAIhW,KAAK2xB,cAAc3b,EAAI,EACjChW,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,IAAIpN,EAAC,IAAID,EAAC,KAG1D,OAAO,GAIF7R,EAAAA,UAAAA,oBAAP,SAA2B4oD,GAGzB,GACO,IADCA,EAAOA,OAAO,GACpB,CAEE,IAAM92C,EAAIjW,KAAK2xB,cAAc1b,EAAI,EAC3BD,EAAIhW,KAAK2xB,cAAc3b,EAAI,EACjChW,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,KAAKpN,EAAC,IAAID,EAAC,IAmB3D,QAAO,GAsBF7R,EAAAA,UAAAA,UAAP,SAAiB4oD,GAkBf,OAjBA/sD,KAAKw4B,aAAaiO,gBAAAA,EAClBzmC,KAAKg0D,wBAAwBn9C,OAC7B7W,KAAK2xB,cAAcc,UAAY,EAC/BzyB,KAAK2xB,cAAc03B,aAAerpD,KAAKiS,eAAevP,KAAO,EAC7D1C,KAAKw1D,aAAe31D,EAAAA,kBAAkB8mD,QACtC3mD,KAAKw4B,aAAa3W,QAClB7hB,KAAKgpD,gBAAgBnnC,QAGrB7hB,KAAK2xB,cAAc0nC,OAAS,EAC5Br5D,KAAK2xB,cAAc2nC,OAASt5D,KAAK2xB,cAAcrM,MAC/CtlB,KAAK2xB,cAAc4nC,iBAAiBzsD,GAAK9M,KAAKw1D,aAAa1oD,GAC3D9M,KAAK2xB,cAAc4nC,iBAAiB1sD,GAAK7M,KAAKw1D,aAAa3oD,GAC3D7M,KAAK2xB,cAAc6nC,aAAex5D,KAAKgpD,gBAAgBsM,QAGvDt1D,KAAKw4B,aAAaptB,gBAAgB+xB,QAAAA,GAAS,CACpC,EAsBFh5B,EAAAA,UAAAA,eAAP,SAAsB4oD,GACpB,IAAMiK,EAAQjK,EAAOA,OAAO,IAAM,EAClC,OAAQiK,GACN,KAAK,EACL,KAAK,EACHh3D,KAAKqc,gBAAgBtK,QAAQ80B,YAAc,QAC3C,MACF,KAAK,EACL,KAAK,EACH7mC,KAAKqc,gBAAgBtK,QAAQ80B,YAAc,YAC3C,MACF,KAAK,EACL,KAAK,EACH7mC,KAAKqc,gBAAgBtK,QAAQ80B,YAAc,MAG/C,IAAM4yB,EAAazC,EAAQ,GAAM,EAEjC,OADAh3D,KAAKqc,gBAAgBtK,QAAQq0B,YAAcqzB,GAAAA,CACpC,EAUFt1D,EAAAA,UAAAA,gBAAP,SAAuB4oD,GACrB,IACI2M,EADE5tD,EAAMihD,EAAOA,OAAO,IAAM,EAYhC,OATIA,EAAOjnD,OAAS,IAAM4zD,EAAS3M,EAAOA,OAAO,IAAM/sD,KAAKiS,eAAevP,MAAmB,IAAXg3D,KACjFA,EAAS15D,KAAKiS,eAAevP,MAG3Bg3D,EAAS5tD,IACX9L,KAAK2xB,cAAcc,UAAY3mB,EAAM,EACrC9L,KAAK2xB,cAAc03B,aAAeqQ,EAAS,EAC3C15D,KAAK42D,WAAW,EAAG,MAEd,EAiCFzyD,EAAAA,UAAAA,cAAP,SAAqB4oD,GACnB,IAAK1B,EAAoB0B,EAAOA,OAAO,GAAI/sD,KAAKqc,gBAAgBmB,WAAWuzC,eACzE,OAAO,EAET,IAAM4I,EAAU5M,EAAOjnD,OAAS,EAAKinD,EAAOA,OAAO,GAAK,EACxD,OAAQA,EAAOA,OAAO,IACpB,KAAK,GACY,IAAX4M,GACF35D,KAAKi0D,+BAA+Bp9C,KAAKq0C,EAAyBh7B,qBAEpE,MACF,KAAK,GACHlwB,KAAKi0D,+BAA+Bp9C,KAAKq0C,EAAyB16B,sBAClE,MACF,KAAK,GACCxwB,KAAKiS,gBACPjS,KAAKw4B,aAAantB,iBAAoB7G,EAAAA,GAAG6e,IAAG,MAAMrjB,KAAKiS,eAAevP,KAAI,IAAI1C,KAAKiS,eAAetP,KAAI,KAExG,MACF,KAAK,GACY,IAAXg3D,GAA2B,IAAXA,IAClB35D,KAAK45D,kBAAkB7wD,KAAK/I,KAAK65D,cAC7B75D,KAAK45D,kBAAkB9zD,OA9oFjB,IA+oFR9F,KAAK45D,kBAAkBjxD,SAGZ,IAAXgxD,GAA2B,IAAXA,IAClB35D,KAAK85D,eAAe/wD,KAAK/I,KAAK+5D,WAC1B/5D,KAAK85D,eAAeh0D,OAppFd,IAqpFR9F,KAAK85D,eAAenxD,SAGxB,MACF,KAAK,GACY,IAAXgxD,GAA2B,IAAXA,GACd35D,KAAK45D,kBAAkB9zD,QACzB9F,KAAKuyD,SAASvyD,KAAK45D,kBAAkBnxD,OAG1B,IAAXkxD,GAA2B,IAAXA,GACd35D,KAAK85D,eAAeh0D,QACtB9F,KAAKwyD,YAAYxyD,KAAK85D,eAAerxD,OAK7C,OAAO,GAYFtE,EAAAA,UAAAA,WAAP,SAAkB4oD,GAMhB,OALA/sD,KAAK2xB,cAAc0nC,OAASr5D,KAAK2xB,cAAc3b,EAC/ChW,KAAK2xB,cAAc2nC,OAASt5D,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,EAC1EjW,KAAK2xB,cAAc4nC,iBAAiBzsD,GAAK9M,KAAKw1D,aAAa1oD,GAC3D9M,KAAK2xB,cAAc4nC,iBAAiB1sD,GAAK7M,KAAKw1D,aAAa3oD,GAC3D7M,KAAK2xB,cAAc6nC,aAAex5D,KAAKgpD,gBAAgBsM,SAAAA,CAChD,EAYFnxD,EAAAA,UAAAA,cAAP,SAAqB4oD,GAUnB,OATA/sD,KAAK2xB,cAAc3b,EAAIhW,KAAK2xB,cAAc0nC,QAAU,EACpDr5D,KAAK2xB,cAAc1b,EAAItS,KAAKC,IAAI5D,KAAK2xB,cAAc2nC,OAASt5D,KAAK2xB,cAAcrM,MAAO,GACtFtlB,KAAKw1D,aAAa1oD,GAAK9M,KAAK2xB,cAAc4nC,iBAAiBzsD,GAC3D9M,KAAKw1D,aAAa3oD,GAAK7M,KAAK2xB,cAAc4nC,iBAAiB1sD,GAC3D7M,KAAKgpD,gBAAgBsM,QAAWt1D,KAAag6D,cACzCh6D,KAAK2xB,cAAc6nC,eACrBx5D,KAAKgpD,gBAAgBsM,QAAUt1D,KAAK2xB,cAAc6nC,cAEpDx5D,KAAKw2D,mBAAAA,CACE,EAcFryD,EAAAA,UAAAA,SAAP,SAAgB+M,GAGd,OAFAlR,KAAK65D,aAAe3oD,EACpBlR,KAAKsiB,eAAezL,KAAK3F,IAAAA,CAClB,EAOF/M,EAAAA,UAAAA,YAAP,SAAmB+M,GAEjB,OADAlR,KAAK+5D,UAAY7oD,GAAAA,CACV,EAWF/M,EAAAA,UAAAA,wBAAP,SAA+B+M,GAG7B,IAFA,IAAMwB,EAAqB,GACrBunD,EAAQ/oD,EAAKG,MAAM,KAClB4oD,EAAMn0D,OAAS,GAAG,CACvB,IAAMgxC,EAAMmjB,EAAMtxD,QACZuxD,EAAOD,EAAMtxD,QACnB,GAAI,QAAQoN,KAAK+gC,GAAM,CACrB,IAAM78B,EAAQzW,SAASszC,GACvB,GAAI,GAAK78B,GAASA,EAAQ,IACxB,GAAa,MAATigD,EACFxnD,EAAM3J,KAAK,CAAE8I,KAAM,EAAyBoI,MAAKjN,QAC5C,CACL,IAAMyW,GAAAA,EAAQ,EAAA02C,YAAWD,GACrBz2C,GACF/Q,EAAM3J,KAAK,CAAE8I,KAAM,EAAsBoI,MAAKjN,EAAEyW,MAAKjf,GAAA,EAS/D,QAHIkO,EAAM5M,QACR9F,KAAKo0D,SAASv9C,KAAKnE,IAAAA,CAEd,EAWDvO,EAAAA,UAAAA,yBAAR,SAAiC+M,EAAckmC,GAE7C,IADA,IAAM6iB,EAAQ/oD,EAAKG,MAAM,KAChBvM,EAAI,EAAGA,EAAIm1D,EAAMn0D,UACpBsxC,GAAUp3C,KAAKo6D,eAAet0D,UADAhB,IAAKsyC,EAEvC,GAAiB,MAAb6iB,EAAMn1D,GACR9E,KAAKo0D,SAASv9C,KAAK,CAAC,CAAEhF,KAAM,EAAyBoI,MAAOja,KAAKo6D,eAAehjB,UAC3E,CACL,IAAM3zB,GAAAA,EAAQ,EAAA02C,YAAWF,EAAMn1D,IAC3B2e,GACFzjB,KAAKo0D,SAASv9C,KAAK,CAAC,CAAEhF,KAAM,EAAsBoI,MAAOja,KAAKo6D,eAAehjB,GAAS3zB,MAAK5b,IAIjG,QAAO,GAyBF1D,EAAAA,UAAAA,mBAAP,SAA0B+M,GACxB,OAAOlR,KAAKq6D,yBAAyBnpD,EAAM,IAQtC/M,EAAAA,UAAAA,mBAAP,SAA0B+M,GACxB,OAAOlR,KAAKq6D,yBAAyBnpD,EAAM,IAQtC/M,EAAAA,UAAAA,uBAAP,SAA8B+M,GAC5B,OAAOlR,KAAKq6D,yBAAyBnpD,EAAM,IAWtC/M,EAAAA,UAAAA,oBAAP,SAA2B+M,GACzB,IAAKA,EAEH,OADAlR,KAAKo0D,SAASv9C,KAAK,CAAC,CAAEhF,KAAM,QAK9B,IAFA,IAAMa,EAAqB,GACrBunD,EAAQ/oD,EAAKG,MAAM,KAChBvM,EAAI,EAAGA,EAAIm1D,EAAMn0D,SAAUhB,EAClC,GAAI,QAAQiR,KAAKkkD,EAAMn1D,IAAK,CAC1B,IAAMmV,EAAQzW,SAASy2D,EAAMn1D,IACzB,GAAKmV,GAASA,EAAQ,KACxBvH,EAAM3J,KAAK,CAAE8I,KAAM,EAA0BoI,MAAKpS,GAOxD,QAHI6K,EAAM5M,QACR9F,KAAKo0D,SAASv9C,KAAKnE,IAAAA,CAEd,EAQFvO,EAAAA,UAAAA,eAAP,SAAsB+M,GAEpB,OADAlR,KAAKo0D,SAASv9C,KAAK,CAAC,CAAEhF,KAAM,EAA0BoI,MAAO,SACtD,EAQF9V,EAAAA,UAAAA,eAAP,SAAsB+M,GAEpB,OADAlR,KAAKo0D,SAASv9C,KAAK,CAAC,CAAEhF,KAAM,EAA0BoI,MAAO,SACtD,EAQF9V,EAAAA,UAAAA,mBAAP,SAA0B+M,GAExB,OADAlR,KAAKo0D,SAASv9C,KAAK,CAAC,CAAEhF,KAAM,EAA0BoI,MAAO,SACtD,EAYF9V,EAAAA,UAAAA,SAAP,WAGE,OAFAnE,KAAK2xB,cAAc3b,EAAI,EACvBhW,KAAKia,SAAAA,CACE,EAQF9V,EAAAA,UAAAA,sBAAP,WAIE,OAHAnE,KAAKkS,YAAY8B,MAAM,6CACvBhU,KAAKw4B,aAAaptB,gBAAgB2xB,mBAAAA,EAClC/8B,KAAKg0D,wBAAwBn9C,QAAAA,CACtB,EAQF1S,EAAAA,UAAAA,kBAAP,WAIE,OAHAnE,KAAKkS,YAAY8B,MAAM,oCACvBhU,KAAKw4B,aAAaptB,gBAAgB2xB,mBAAAA,EAClC/8B,KAAKg0D,wBAAwBn9C,QAAAA,CACtB,EASF1S,EAAAA,UAAAA,qBAAP,WAGE,OAFAnE,KAAKgpD,gBAAgBqK,UAAU,GAC/BrzD,KAAKgpD,gBAAgBgP,YAAY,EAAGvzD,EAAAA,kBAAA61D,CAC7B,EAmBFn2D,EAAAA,UAAAA,cAAP,SAAqBo2D,GACnB,OAA8B,IAA1BA,EAAez0D,QACjB9F,KAAKszD,wBAAAA,IAGmB,MAAtBiH,EAAe,IAGnBv6D,KAAKgpD,gBAAgBgP,YAAY7M,EAAOoP,EAAe,IAAK91D,EAAAA,SAAS81D,EAAe,KAAO91D,EAAAA,kBAAA61D,EAFlF,EAeJn2D,EAAAA,UAAAA,MAAP,WAUE,OATAnE,KAAKw2D,kBACLx2D,KAAK2xB,cAAc1b,IACfjW,KAAK2xB,cAAc1b,IAAMjW,KAAK2xB,cAAc03B,aAAe,GAC7DrpD,KAAK2xB,cAAc1b,IACnBjW,KAAKiS,eAAe+3C,OAAOhqD,KAAKg2D,mBACvBh2D,KAAK2xB,cAAc1b,GAAKjW,KAAKiS,eAAevP,OACrD1C,KAAK2xB,cAAc1b,EAAIjW,KAAKiS,eAAevP,KAAO,GAEpD1C,KAAKw2D,mBAAAA,CACE,EAaFryD,EAAAA,UAAAA,OAAP,WAEE,OADAnE,KAAK2xB,cAAcslC,KAAKj3D,KAAK2xB,cAAc3b,IAAAA,GAAK,CACzC,EAYF7R,EAAAA,UAAAA,aAAP,WAEE,GADAnE,KAAKw2D,kBACDx2D,KAAK2xB,cAAc1b,IAAMjW,KAAK2xB,cAAcc,UAAW,CAIzD,IAAM+nC,EAAqBx6D,KAAK2xB,cAAc03B,aAAerpD,KAAK2xB,cAAcc,UAChFzyB,KAAK2xB,cAActpB,MAAMoyD,cAAcz6D,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,EAAGukD,EAAoB,GAC5Gx6D,KAAK2xB,cAActpB,MAAM1I,IAAIK,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,EAAGjW,KAAK2xB,cAAc3B,aAAahwB,KAAKg2D,mBACnHh2D,KAAK8oD,iBAAiBM,eAAeppD,KAAK2xB,cAAcc,UAAWzyB,KAAK2xB,cAAc03B,aAAAA,MAEtFrpD,KAAK2xB,cAAc1b,IACnBjW,KAAKw2D,kBAEP,OAAO,GAQFryD,EAAAA,UAAAA,UAAP,WAGE,OAFAnE,KAAK08B,QAAQ7a,QACb7hB,KAAK8zD,gBAAgBj9C,QAAAA,CACd,EAGF1S,EAAAA,UAAAA,MAAP,WACEnE,KAAKw1D,aAAe31D,EAAAA,kBAAkB8mD,QACtC3mD,KAAK06D,uBAAyB76D,EAAAA,kBAAkB8mD,OAAAA,EAM1CxiD,EAAAA,UAAAA,eAAR,WAGE,OAFAnE,KAAK06D,uBAAuB7tD,KAAM,SAClC7M,KAAK06D,uBAAuB7tD,IAA6B,SAAvB7M,KAAKw1D,aAAa3oD,GAC7C7M,KAAK06D,sBAAAA,EAaPv2D,EAAAA,UAAAA,UAAP,SAAiBw2D,GAEf,OADA36D,KAAKgpD,gBAAgBqK,UAAUsH,IAAAA,CACxB,EAWFx2D,EAAAA,UAAAA,uBAAP,WAEE,IAAM68B,EAAO,IAAIthB,EAAAA,SACjBshB,EAAKjtB,QAAU,GAAK,GAAsB,IAAI6a,WAAW,GACzDoS,EAAKl0B,GAAK9M,KAAKw1D,aAAa1oD,GAC5Bk0B,EAAKn0B,GAAK7M,KAAKw1D,aAAa3oD,GAG5B7M,KAAK42D,WAAW,EAAG,GACnB,IAAK,IAAI9oB,EAAU,EAAGA,EAAU9tC,KAAKiS,eAAevP,OAAQorC,EAAS,CACnE,IAAMpjB,EAAM1qB,KAAK2xB,cAAcrM,MAAQtlB,KAAK2xB,cAAc1b,EAAI63B,EACxDp4B,EAAO1V,KAAK2xB,cAActpB,MAAM5I,IAAIirB,GACtChV,IACFA,EAAKm6B,KAAK7O,GACVtrB,EAAK8kB,WAAAA,EAKT,QAFAx6B,KAAK8oD,iBAAiB8R,eACtB56D,KAAK42D,WAAW,EAAG,KACZ,EAEXzyD,CA57FA,CAAA6b,CAAkCrb,EAAAA,YAArBR,EAAAA,aAAAA,CAAA02D,E,ucCtNb,iBAIE,aAHU,KAAAC,aAA8B,GAC9B,KAAAj3C,aAAA,CAqCZ,QA7BS1hB,EAAAA,UAAAA,QAAP,W,QACEnC,KAAK6jB,aAAAA,E,IACL,IAAgB,QAAA7jB,KAAK86D,cAAYjzD,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAArBA,EAAAA,MACRC,SAEJ9H,C,gGAAAA,CAAAA,KAAK86D,aAAah1D,OAAS,GAQtB3D,EAAAA,UAAAA,SAAP,SAAuCsX,GAErC,OADAzZ,KAAK86D,aAAa/xD,KAAK0Q,GAChBA,CAAAA,EAQFtX,EAAAA,UAAAA,WAAP,SAAyCsX,GACvC,IAAMQ,EAAQja,KAAK86D,aAAaxlD,QAAQmE,IACzB,IAAXQ,GACFja,KAAK86D,aAAajmD,OAAOoF,EAAO,IAGtC9X,CAvCA,IA4CA,SAAgB0Y,EAAakgD,G,YAC3B,IAAgB,WAAW/tD,EAAAA,EAAAA,QAAA,OAAAA,EAAAA,EAAAA,OAAfA,EAAAA,MACRlF,SAEJizD,C,gGAAAA,CAAAA,EAAYj1D,OAAS,CAhDD,CAAA3B,EAAAA,WAAAA,EA4CtBA,EAAAA,aAAAA,EAUAA,EAAAA,0BAAAA,SAA0C62D,GACxC,MAAO,CAAElzD,QAAS,WAAM,SAAakzD,EAAAA,EAAAA,CAAAA,E,6JCnDvC,IAAMC,EAA+B,oBAAdC,UACjBC,EAAYj5D,EAAW,OAASg5D,UAAUC,UAC1CC,EAAWl5D,EAAW,OAASg5D,UAAUE,SAElCj3D,EAAAA,UAAYg3D,EAAUh/B,SAAS,WAC/Bh4B,EAAAA,aAAeg3D,EAAUh/B,SAAS,QAClCh4B,EAAAA,SAAW,iCAAiCk3D,KAAKF,GAKjDh3D,EAAAA,MAAQ,CAAC,YAAa,WAAY,SAAU,UAAUg4B,SAASi/B,GAC/Dj3D,EAAAA,OAAsB,SAAbi3D,EACTj3D,EAAAA,SAAwB,WAAbi3D,EACXj3D,EAAAA,UAAY,CAAC,UAAW,QAAS,QAAS,SAASg4B,SAASi/B,GAC5Dj3D,EAAAA,QAAUi3D,EAAS9lD,QAAQ,UAAY,CAXvC,E,2pCCTb,iBAGE,WACmBgmD,GAAA,KAAAA,QAAA,EAHF,KAAAvV,OAAc,EA4EjC,QArES5jD,EAAAA,UAAAA,MAAP,WACEnC,KAAK+lD,OAAOjgD,OAAS,GAGhB3D,EAAAA,UAAAA,OAAP,SAAcmJ,GACZ,GAA2B,IAAvBtL,KAAK+lD,OAAOjgD,OAAhB,CAIA,IAAMhB,EAAI9E,KAAKu7D,QAAQv7D,KAAKs7D,QAAQhwD,GAAQ,EAAGtL,KAAK+lD,OAAOjgD,OAAS,GACpE9F,KAAK+lD,OAAOlxC,OAAO/P,EAAG,EAAGwG,EAAAA,MAJvBtL,KAAK+lD,OAAOh9C,KAAKuC,EAAAA,EAOdnJ,EAAAA,UAAAA,OAAP,SAAcmJ,GACZ,GAA2B,IAAvBtL,KAAK+lD,OAAOjgD,OACd,OAAO,EAET,IAAMtE,EAAMxB,KAAKs7D,QAAQhwD,GACrBxG,EAAI9E,KAAKu7D,QAAQ/5D,EAAK,EAAGxB,KAAK+lD,OAAOjgD,OAAS,GAClD,GAAI9F,KAAKs7D,QAAQt7D,KAAK+lD,OAAOjhD,MAAQtD,EACnC,OAAO,EAET,GACE,GAAIxB,KAAK+lD,OAAOjhD,KAAOwG,EAErB,OADAtL,KAAK+lD,OAAOlxC,OAAO/P,EAAG,cAGfA,EAAI9E,KAAK+lD,OAAOjgD,QAAU9F,KAAKs7D,QAAQt7D,KAAK+lD,OAAOjhD,MAAQtD,GACtE,OAAO,GAGDW,EAAAA,UAAAA,eAAR,SAAuBX,G,wDACrB,GAA2B,IAAvBxB,KAAK+lD,OAAOjgD,OACd,UAGF,IADIhB,EAAI9E,KAAKu7D,QAAQ/5D,EAAK,EAAGxB,KAAK+lD,OAAOjgD,OAAS,IAC1C,GAAKhB,GAAK9E,KAAK+lD,OAAOjgD,OAC5B,UAEF,GAAI9F,KAAKs7D,QAAQt7D,KAAK+lD,OAAOjhD,MAAQtD,EACnC,U,iBAGA,SAAMxB,KAAK+lD,OAAOjhD,I,OAAlB5C,EAAAA,OAAAA,EAAAA,MAAAA,E,YACS4C,EAAI9E,KAAK+lD,OAAOjgD,QAAU9F,KAAKs7D,QAAQt7D,KAAK+lD,OAAOjhD,MAAQtD,EAAG,Y,gCAGpEW,EAAAA,UAAAA,OAAP,WACE,OAAOnC,KAAK+lD,OAAOyV,QAAAA,EAGbr5D,EAAAA,UAAAA,QAAR,SAAgBX,EAAasR,EAAalP,GACxC,GAAIA,EAAMkP,EACR,OAAOA,EAET,IAAI2oD,EAAM93D,KAAKO,OAAO4O,EAAMlP,GAAO,GACnC,GAAI5D,KAAKs7D,QAAQt7D,KAAK+lD,OAAO0V,IAAQj6D,EACnC,OAAOxB,KAAKu7D,QAAQ/5D,EAAKsR,EAAK2oD,EAAM,GAEtC,GAAIz7D,KAAKs7D,QAAQt7D,KAAK+lD,OAAO0V,IAAQj6D,EACnC,OAAOxB,KAAKu7D,QAAQ/5D,EAAKi6D,EAAM,EAAG73D,GAIpC,KAAO63D,EAAM,GAAKz7D,KAAKs7D,QAAQt7D,KAAK+lD,OAAO0V,EAAM,MAAQj6D,GACvDi6D,IAEF,OAAOA,CAAAA,EAEXt5D,CA7EA,IAAagC,EAAAA,WAAAA,CAAAu3D,E,aCUb,SAAgBC,EAAmCX,EAAU1vD,EAAe3E,EAAmBC,GAK7F,QAAI,IALsED,IAAAA,EAAAA,QAAA,IAAmBC,IAAAA,EAAco0D,EAAMl1D,QAK7Ga,GAASq0D,EAAMl1D,OACjB,OAAOk1D,EAETr0D,GAASq0D,EAAMl1D,OAASa,GAASq0D,EAAMl1D,OAErCc,EADEA,GAAOo0D,EAAMl1D,OACTk1D,EAAMl1D,QAELk1D,EAAMl1D,OAASc,GAAOo0D,EAAMl1D,OAErC,IAAK,IAAIhB,EAAI6B,EAAO7B,EAAI8B,IAAO9B,EAC7Bk2D,EAAMl2D,GAAKwG,EAEb,OAAO0vD,C,wFAzBT72D,EAAAA,KAAAA,SAA2C62D,EAAU1vD,EAAe3E,EAAgBC,GAElF,OAAIo0D,EAAMnrB,KACDmrB,EAAMnrB,KAAKvkC,EAAO3E,EAAOC,GAE3B+0D,EAAaX,EAAO1vD,EAAO3E,EAAOC,EAAAA,EAG3CzC,EAAAA,aAAAA,EAwBAA,EAAAA,OAAAA,SAA6CM,EAAMoJ,GACjD,IAAM5N,EAAS,IAAKwE,EAAEm3D,YAAoBn3D,EAAEqB,OAAS+H,EAAE/H,QAGvD,OAFA7F,EAAON,IAAI8E,GACXxE,EAAON,IAAIkO,EAAGpJ,EAAEqB,QACT7F,CAAAA,CAAAA,E,uGC3CT,IAAA6E,EAAA,OAGAX,EAAAA,8BAAAA,SAA8C81B,GAW5C,IAAMvkB,EAAOukB,EAAc7xB,OAAOC,MAAM5I,IAAIw6B,EAAc7xB,OAAOkd,MAAQ2U,EAAc7xB,OAAO6N,EAAI,GAC5F4lD,EAAWnmD,MAAAA,OAAAA,EAAAA,EAAMjW,IAAIw6B,EAAct3B,KAAO,GAE1CyvD,EAAWn4B,EAAc7xB,OAAOC,MAAM5I,IAAIw6B,EAAc7xB,OAAOkd,MAAQ2U,EAAc7xB,OAAO6N,GAC9Fm8C,GAAYyJ,IACdzJ,EAAS53B,UAAaqhC,EAAS/2D,EAAAA,wBAA0BA,EAAAA,gBAAkB+2D,EAAS/2D,EAAAA,wBAA0BA,EAAAA,qBAAAg3D,CAhBlH,E,qGCAA,0BAAA35D,IAsBS,KAAA2K,GAAK,EACL,KAAAD,GAAK,EACL,KAAA+oD,SAAW,IAAImG,CAyFxB,QAhHgB55D,EAAAA,WAAd,SAAyBmJ,GACvB,MAAO,CACLA,IAAU,GAAuB,IACjCA,IAAU,EAAyB,IAC3B,IAARA,EAAAA,EAIUnJ,EAAAA,aAAd,SAA2BmJ,GACzB,OAAmB,IAAXA,EAAM,KAAa,IAAmC,IAAXA,EAAM,KAAa,EAAoC,IAAXA,EAAM,IAGhGnJ,EAAAA,UAAAA,MAAP,WACE,IAAM65D,EAAS,IAAIC,EAInB,OAHAD,EAAOlvD,GAAK9M,KAAK8M,GACjBkvD,EAAOnvD,GAAK7M,KAAK6M,GACjBmvD,EAAOpG,SAAW51D,KAAK41D,SAASjP,QACzBqV,CAAAA,EASF75D,EAAAA,UAAAA,UAAP,WAAmC,OAAiB,SAAVnC,KAAK8M,EAAAA,EACxC3K,EAAAA,UAAAA,OAAP,WAAmC,OAAiB,UAAVnC,KAAK8M,EAAAA,EACxC3K,EAAAA,UAAAA,YAAP,WAAmC,OAAiB,UAAVnC,KAAK8M,EAAAA,EACxC3K,EAAAA,UAAAA,QAAP,WAAmC,OAAiB,UAAVnC,KAAK8M,EAAAA,EACxC3K,EAAAA,UAAAA,YAAP,WAAmC,OAAiB,WAAVnC,KAAK8M,EAAAA,EACxC3K,EAAAA,UAAAA,SAAP,WAAmC,OAAiB,SAAVnC,KAAK6M,EAAAA,EACxC1K,EAAAA,UAAAA,MAAP,WAAmC,OAAiB,UAAVnC,KAAK6M,EAAAA,EACxC1K,EAAAA,UAAAA,gBAAP,WAAmC,OAAiB,WAAVnC,KAAK8M,EAAAA,EAGxC3K,EAAAA,UAAAA,eAAP,WAAkC,OAAiB,SAAVnC,KAAK8M,EAAAA,EACvC3K,EAAAA,UAAAA,eAAP,WAAkC,OAAiB,SAAVnC,KAAK6M,EAAAA,EACvC1K,EAAAA,UAAAA,QAAP,WAAkC,OAA0C,WAAxB,SAAVnC,KAAK8M,GAAAA,EACxC3K,EAAAA,UAAAA,QAAP,WAAkC,OAA0C,WAAxB,SAAVnC,KAAK6M,GAAAA,EACxC1K,EAAAA,UAAAA,YAAP,WAAkC,OAA0C,WAAxB,SAAVnC,KAAK8M,KAAqF,WAAxB,SAAV9M,KAAK8M,GAAAA,EAChG3K,EAAAA,UAAAA,YAAP,WAAkC,OAA0C,WAAxB,SAAVnC,KAAK6M,KAAqF,WAAxB,SAAV7M,KAAK6M,GAAAA,EAChG1K,EAAAA,UAAAA,YAAP,WAAkC,OAA0C,IAAxB,SAAVnC,KAAK8M,GAAAA,EACxC3K,EAAAA,UAAAA,YAAP,WAAkC,OAA0C,IAAxB,SAAVnC,KAAK6M,GAAAA,EACxC1K,EAAAA,UAAAA,mBAAP,WAAuC,OAAmB,IAAZnC,KAAK8M,IAAwB,IAAZ9M,KAAK6M,EAAAA,EAG7D1K,EAAAA,UAAAA,WAAP,WACE,OAAkB,SAAVnC,KAAK8M,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAV9M,KAAK8M,GACtC,KAAK,SAAqB,OAAiB,SAAV9M,KAAK8M,GACtC,QAA0B,OAAQ,IAG/B3K,EAAAA,UAAAA,WAAP,WACE,OAAkB,SAAVnC,KAAK6M,IACX,KAAK,SACL,KAAK,SAAqB,OAAiB,IAAV7M,KAAK6M,GACtC,KAAK,SAAqB,OAAiB,SAAV7M,KAAK6M,GACtC,QAA0B,OAAQ,IAK/B1K,EAAAA,UAAAA,iBAAP,WACE,OAAiB,UAAVnC,KAAK6M,EAAAA,EAEP1K,EAAAA,UAAAA,eAAP,WACMnC,KAAK41D,SAAStf,UAChBt2C,KAAK6M,KAAM,UAEX7M,KAAK6M,IAAM,WAGR1K,EAAAA,UAAAA,kBAAP,WACE,GAAe,UAAVnC,KAAK6M,KAA+B7M,KAAK41D,SAASoD,eACrD,OAAuC,SAA/Bh5D,KAAK41D,SAASoD,gBACpB,KAAK,SACL,KAAK,SAAqB,OAAsC,IAA/Bh5D,KAAK41D,SAASoD,eAC/C,KAAK,SAAqB,OAAsC,SAA/Bh5D,KAAK41D,SAASoD,eAC/C,QAA0B,OAAOh5D,KAAKmiC,aAG1C,OAAOniC,KAAKmiC,YAAAA,EAEPhgC,EAAAA,UAAAA,sBAAP,WACE,OAAkB,UAAVnC,KAAK6M,KAA+B7M,KAAK41D,SAASoD,eACvB,SAA/Bh5D,KAAK41D,SAASoD,eACdh5D,KAAKkkC,gBAAAA,EAEJ/hC,EAAAA,UAAAA,oBAAP,WACE,OAAkB,UAAVnC,KAAK6M,KAA+B7M,KAAK41D,SAASoD,eACE,WAAxB,SAA/Bh5D,KAAK41D,SAASoD,gBACfh5D,KAAK4hC,SAAAA,EAEJz/B,EAAAA,UAAAA,wBAAP,WACE,OAAkB,UAAVnC,KAAK6M,KAA+B7M,KAAK41D,SAASoD,eACE,WAAxB,SAA/Bh5D,KAAK41D,SAASoD,iBAC8C,WAAxB,SAA/Bh5D,KAAK41D,SAASoD,gBACpBh5D,KAAKk8D,aAAAA,EAEJ/5D,EAAAA,UAAAA,wBAAP,WACE,OAAkB,UAAVnC,KAAK6M,KAA+B7M,KAAK41D,SAASoD,eACE,IAAxB,SAA/Bh5D,KAAK41D,SAASoD,gBACfh5D,KAAKkiC,aAAAA,EAEJ//B,EAAAA,UAAAA,kBAAP,WACE,OAAiB,UAAVnC,KAAK8M,GACG,UAAV9M,KAAK6M,GAA4B7M,KAAK41D,SAASqD,eAAiB,EACjE,GAER92D,CAjHA,IAAagC,EAAAA,cAAAA,EAwHb,iBACE,WAES80D,EAEAD,QAAAA,IAFAC,IAAAA,EAAAA,QAAA,IAEAD,IAAAA,GAA0B,GAF1B,KAAAC,eAAA,EAEAD,KAAAA,eAAAA,CAcX,QAXS72D,EAAAA,UAAAA,MAAP,WACE,OAAO,IAAI45D,EAAc/7D,KAAKi5D,eAAgBj5D,KAAKg5D,eAAAA,EAO9C72D,EAAAA,UAAAA,QAAP,WACE,OAA+B,IAAxBnC,KAAKi5D,cAAAA,EAEhB92D,CAnBA,IAAagC,EAAAA,cAAAA,CAAAA,E,4oBC3Hb,cAGAK,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,MAEAC,EAAAA,EAAAA,MACAhF,EAAAA,EAAAA,MAEasE,EAAAA,gBAAkB,WAS/B,iBAqBE,WACUg4D,EACA9/C,EACApK,GAFA,KAAAkqD,eAAA,EACA,KAAA9/C,gBAAA,EACA,KAAApK,eAAA,EAtBH,KAAA5H,MAAgB,EAChB,KAAAib,MAAgB,EAChB,KAAArP,EAAY,EACZ,KAAAD,EAAY,EAKZ,KAAAsjD,OAAiB,EACjB,KAAAD,OAAiB,EACjB,KAAAE,iBAAmB/0D,EAAAA,kBAAkBmiD,QACrC,KAAA6S,aAAqC30D,EAAAA,gBACrC,KAAAmoB,QAAoB,GACnB,KAAAovC,UAAuB33D,EAAAA,SAAS43D,aAAa,CAAC,EAAG33D,EAAAA,eAAgBA,EAAAA,gBAAiBA,EAAAA,iBAClF,KAAA43D,gBAA6B73D,EAAAA,SAAS43D,aAAa,CAAC,EAAG33D,EAAAA,qBAAsBA,EAAAA,sBAAuBA,EAAAA,uBAGpG,KAAA63D,aAAA,EAONv8D,KAAKw8D,MAAQx8D,KAAKiS,eAAetP,KACjC3C,KAAKy8D,MAAQz8D,KAAKiS,eAAevP,KACjC1C,KAAKqI,MAAQ,IAAI2E,EAAAA,aAA0BhN,KAAK08D,wBAAwB18D,KAAKy8D,QAC7Ez8D,KAAKyyB,UAAY,EACjBzyB,KAAKqpD,aAAerpD,KAAKy8D,MAAQ,EACjCz8D,KAAK4kB,eAolBT,QAjlBSziB,EAAAA,UAAAA,YAAP,SAAmBwT,GAUjB,OATIA,GACF3V,KAAKo8D,UAAUtvD,GAAK6I,EAAK7I,GACzB9M,KAAKo8D,UAAUvvD,GAAK8I,EAAK9I,GACzB7M,KAAKo8D,UAAUxG,SAAWjgD,EAAKigD,WAE/B51D,KAAKo8D,UAAUtvD,GAAK,EACpB9M,KAAKo8D,UAAUvvD,GAAK,EACpB7M,KAAKo8D,UAAUxG,SAAW,IAAI/1D,EAAAA,eAEzBG,KAAKo8D,SAAAA,EAGPj6D,EAAAA,UAAAA,kBAAP,SAAyBwT,GAUvB,OATIA,GACF3V,KAAKs8D,gBAAgBxvD,GAAK6I,EAAK7I,GAC/B9M,KAAKs8D,gBAAgBzvD,GAAK8I,EAAK9I,GAC/B7M,KAAKs8D,gBAAgB1G,SAAWjgD,EAAKigD,WAErC51D,KAAKs8D,gBAAgBxvD,GAAK,EAC1B9M,KAAKs8D,gBAAgBzvD,GAAK,EAC1B7M,KAAKs8D,gBAAgB1G,SAAW,IAAI/1D,EAAAA,eAE/BG,KAAKs8D,eAAAA,EAGPn6D,EAAAA,UAAAA,aAAP,SAAoBwT,EAAsB6kB,GACxC,OAAO,IAAIh2B,EAAAA,WAAWxE,KAAKiS,eAAetP,KAAM3C,KAAKk2D,YAAYvgD,GAAO6kB,EAAAA,EAG1E94B,OAAAA,eAAWS,EAAAA,UAAA,gBAAa,C,IAAxB,WACE,OAAOnC,KAAKm8D,gBAAkBn8D,KAAKqI,MAAMs0D,UAAY38D,KAAKy8D,KAAAA,E,gCAG5D/6D,OAAAA,eAAWS,EAAAA,UAAA,qBAAkB,C,IAA7B,WACE,IACMy6D,EADY58D,KAAKslB,MAAQtlB,KAAKiW,EACNjW,KAAKqK,MACnC,OAAQuyD,GAAa,GAAKA,EAAY58D,KAAKy8D,KAAAA,E,gCAQrCt6D,EAAAA,UAAAA,wBAAR,SAAgCO,GAC9B,IAAK1C,KAAKm8D,eACR,OAAOz5D,EAGT,IAAMm6D,EAAsBn6D,EAAO1C,KAAKqc,gBAAgBmB,WAAWs/C,WAEnE,OAAOD,EAAsB14D,EAAAA,gBAAkBA,EAAAA,gBAAkB04D,CAAAA,EAM5D16D,EAAAA,UAAAA,iBAAP,SAAwB46D,GACtB,GAA0B,IAAtB/8D,KAAKqI,MAAMvC,OAAc,UACvBi3D,IACFA,EAAWv4D,EAAAA,mBAGb,IADA,IAAIM,EAAI9E,KAAKy8D,MACN33D,KACL9E,KAAKqI,MAAMU,KAAK/I,KAAKgwB,aAAa+sC,GAAAA,CAAAA,EAQjC56D,EAAAA,UAAAA,MAAP,WACEnC,KAAKqK,MAAQ,EACbrK,KAAKslB,MAAQ,EACbtlB,KAAKiW,EAAI,EACTjW,KAAKgW,EAAI,EACThW,KAAKqI,MAAQ,IAAI2E,EAAAA,aAA0BhN,KAAK08D,wBAAwB18D,KAAKy8D,QAC7Ez8D,KAAKyyB,UAAY,EACjBzyB,KAAKqpD,aAAerpD,KAAKy8D,MAAQ,EACjCz8D,KAAK4kB,eAAAA,EAQAziB,EAAAA,UAAAA,OAAP,SAAc66D,EAAiBC,GAE7B,IAAMC,EAAWl9D,KAAKk2D,YAAY1xD,EAAAA,mBAI5B2hD,EAAenmD,KAAK08D,wBAAwBO,GAOlD,GANI9W,EAAenmD,KAAKqI,MAAMs0D,YAC5B38D,KAAKqI,MAAMs0D,UAAYxW,GAKrBnmD,KAAKqI,MAAMvC,OAAS,EAAG,CAEzB,GAAI9F,KAAKw8D,MAAQQ,EACf,IAAK,IAAIl4D,EAAI,EAAGA,EAAI9E,KAAKqI,MAAMvC,OAAQhB,IACrC9E,KAAKqI,MAAM5I,IAAIqF,GAAIhC,OAAOk6D,EAASE,GAKvC,IAAIC,EAAS,EACb,GAAIn9D,KAAKy8D,MAAQQ,EACf,IAAK,IAAIhnD,EAAIjW,KAAKy8D,MAAOxmD,EAAIgnD,EAAShnD,IAChCjW,KAAKqI,MAAMvC,OAASm3D,EAAUj9D,KAAKslB,QACjCtlB,KAAKqc,gBAAgBmB,WAAW6sC,YAGlCrqD,KAAKqI,MAAMU,KAAK,IAAIvE,EAAAA,WAAWw4D,EAASE,IAEpCl9D,KAAKslB,MAAQ,GAAKtlB,KAAKqI,MAAMvC,QAAU9F,KAAKslB,MAAQtlB,KAAKiW,EAAIknD,EAAS,GAGxEn9D,KAAKslB,QACL63C,IACIn9D,KAAKqK,MAAQ,GAEfrK,KAAKqK,SAKPrK,KAAKqI,MAAMU,KAAK,IAAIvE,EAAAA,WAAWw4D,EAASE,UAMhD,IAASjnD,EAAIjW,KAAKy8D,MAAOxmD,EAAIgnD,EAAShnD,IAChCjW,KAAKqI,MAAMvC,OAASm3D,EAAUj9D,KAAKslB,QACjCtlB,KAAKqI,MAAMvC,OAAS9F,KAAKslB,MAAQtlB,KAAKiW,EAAI,EAE5CjW,KAAKqI,MAAMI,OAGXzI,KAAKslB,QACLtlB,KAAKqK,UAQb,GAAI87C,EAAenmD,KAAKqI,MAAMs0D,UAAW,CAEvC,IAAMS,EAAep9D,KAAKqI,MAAMvC,OAASqgD,EACrCiX,EAAe,IACjBp9D,KAAKqI,MAAMovD,UAAU2F,GACrBp9D,KAAKslB,MAAQ3hB,KAAKC,IAAI5D,KAAKslB,MAAQ83C,EAAc,GACjDp9D,KAAKqK,MAAQ1G,KAAKC,IAAI5D,KAAKqK,MAAQ+yD,EAAc,GACjDp9D,KAAKs5D,OAAS31D,KAAKC,IAAI5D,KAAKs5D,OAAS8D,EAAc,IAErDp9D,KAAKqI,MAAMs0D,UAAYxW,CAIzBnmD,CAAAA,KAAKgW,EAAIrS,KAAKmP,IAAI9S,KAAKgW,EAAGgnD,EAAU,GACpCh9D,KAAKiW,EAAItS,KAAKmP,IAAI9S,KAAKiW,EAAGgnD,EAAU,GAChCE,IACFn9D,KAAKiW,GAAKknD,GAEZn9D,KAAKq5D,OAAS11D,KAAKmP,IAAI9S,KAAKq5D,OAAQ2D,EAAU,GAE9Ch9D,KAAKyyB,UAAY,CAKnB,IAFAzyB,KAAKqpD,aAAe4T,EAAU,EAE1Bj9D,KAAKq9D,mBACPr9D,KAAKs9D,QAAQN,EAASC,GAGlBj9D,KAAKw8D,MAAQQ,GACf,IAASl4D,EAAI,EAAGA,EAAI9E,KAAKqI,MAAMvC,OAAQhB,IACrC9E,KAAKqI,MAAM5I,IAAIqF,GAAIhC,OAAOk6D,EAASE,GAKzCl9D,KAAKw8D,MAAQQ,EACbh9D,KAAKy8D,MAAQQ,CAAAA,EAGfv7D,OAAAA,eAAYS,EAAAA,UAAA,mBAAgB,C,IAA5B,WACE,OAAOnC,KAAKm8D,iBAAmBn8D,KAAKqc,gBAAgBmB,WAAW6sC,WAAAA,E,gCAGzDloD,EAAAA,UAAAA,QAAR,SAAgB66D,EAAiBC,GAC3Bj9D,KAAKw8D,QAAUQ,IAKfA,EAAUh9D,KAAKw8D,MACjBx8D,KAAKu9D,cAAcP,EAASC,GAE5Bj9D,KAAKw9D,eAAeR,EAASC,GAAAA,EAIzB96D,EAAAA,UAAAA,cAAR,SAAsB66D,EAAiBC,GACrC,IAAMQ,GAAAA,EAAqB,EAAAC,8BAA6B19D,KAAKqI,MAAOrI,KAAKw8D,MAAOQ,EAASh9D,KAAKslB,MAAQtlB,KAAKiW,EAAGjW,KAAKk2D,YAAY1xD,EAAAA,oBAC/H,GAAIi5D,EAAS33D,OAAS,EAAG,CACvB,IAAM63D,GAAAA,EAAkB,EAAAC,6BAA4B59D,KAAKqI,MAAOo1D,IAAAA,EAChE,EAAAI,4BAA2B79D,KAAKqI,MAAOs1D,EAAgBG,QACvD99D,KAAK+9D,4BAA4Bf,EAASC,EAASU,EAAgBK,aAAAA,CAAAA,EAI/D77D,EAAAA,UAAAA,4BAAR,SAAoC66D,EAAiBC,EAAiBe,GAIpE,IAHA,IAAMd,EAAWl9D,KAAKk2D,YAAY1xD,EAAAA,mBAE9By5D,EAAsBD,EACnBC,KAAwB,GACV,IAAfj+D,KAAKslB,OACHtlB,KAAKiW,EAAI,GACXjW,KAAKiW,IAEHjW,KAAKqI,MAAMvC,OAASm3D,GAEtBj9D,KAAKqI,MAAMU,KAAK,IAAIvE,EAAAA,WAAWw4D,EAASE,MAGtCl9D,KAAKqK,QAAUrK,KAAKslB,OACtBtlB,KAAKqK,QAEPrK,KAAKslB,SAGTtlB,KAAKs5D,OAAS31D,KAAKC,IAAI5D,KAAKs5D,OAAS0E,EAAc,IAG7C77D,EAAAA,UAAAA,eAAR,SAAuB66D,EAAiBC,GAOtC,IANA,IAAMC,EAAWl9D,KAAKk2D,YAAY1xD,EAAAA,mBAG5B05D,EAAW,GACbC,EAAgB,EAEXloD,EAAIjW,KAAKqI,MAAMvC,OAAS,EAAGmQ,GAAK,EAAGA,IAAK,CAE/C,IAAIm8C,EAAWpyD,KAAKqI,MAAM5I,IAAIwW,GAC9B,MAAKm8C,IAAaA,EAAS53B,WAAa43B,EAASzV,oBAAsBqgB,GAAvE,CAMA,IADA,IAAMoB,EAA6B,CAAChM,GAC7BA,EAAS53B,WAAavkB,EAAI,GAC/Bm8C,EAAWpyD,KAAKqI,MAAM5I,MAAMwW,GAC5BmoD,EAAat1D,QAAQspD,GAKvB,IAAMiM,EAAYr+D,KAAKslB,MAAQtlB,KAAKiW,EACpC,KAAIooD,GAAapoD,GAAKooD,EAAYpoD,EAAImoD,EAAat4D,QAAnD,CAIA,IAGIw4D,EAHEC,EAAiBH,EAAaA,EAAat4D,OAAS,GAAG62C,mBACvD6hB,GAAAA,EAAkB,EAAAC,gCAA+BL,EAAcp+D,KAAKw8D,MAAOQ,GAC3E0B,EAAaF,EAAgB14D,OAASs4D,EAAat4D,OAIvDw4D,EAFiB,IAAft+D,KAAKslB,OAAetlB,KAAKiW,IAAMjW,KAAKqI,MAAMvC,OAAS,EAEtCnC,KAAKC,IAAI,EAAG5D,KAAKiW,EAAIjW,KAAKqI,MAAMs0D,UAAY+B,GAE5C/6D,KAAKC,IAAI,EAAG5D,KAAKqI,MAAMvC,OAAS9F,KAAKqI,MAAMs0D,UAAY+B,GAKxE,IADA,IAAMC,EAAyB,GACtB75D,EAAI,EAAGA,EAAI45D,EAAY55D,IAAK,CACnC,IAAM85D,EAAU5+D,KAAKgwB,aAAaxrB,EAAAA,mBAAAq6D,GAClCF,EAAS51D,KAAK61D,EAEZD,CAAAA,EAAS74D,OAAS,IACpBo4D,EAASn1D,KAAK,CAGZpC,MAAOsP,EAAImoD,EAAat4D,OAASq4D,EACjCQ,SAAQ1oD,IAEVkoD,GAAiBQ,EAAS74D,QAE5Bs4D,EAAar1D,KAAIya,MAAjB46C,EAAYv2D,EAAAA,GAAAA,EAAS82D,IAAAA,IAGrB,IAAIG,EAAgBN,EAAgB14D,OAAS,EACzCi5D,EAAUP,EAAgBM,GACd,IAAZC,IAEFA,EAAUP,IADVM,IAKF,IAFA,IAAIE,EAAeZ,EAAat4D,OAAS44D,EAAa,EAClDO,EAASV,EACNS,GAAgB,GAAG,CACxB,IAAME,EAAcv7D,KAAKmP,IAAImsD,EAAQF,GACrC,QAAI,IAAAX,EAAaU,GAGf,MASF,GAPAV,EAAaU,GAAeK,cAAcf,EAAaY,GAAeC,EAASC,EAAaH,EAAUG,EAAaA,GAAAA,GAEnG,IADhBH,GAAWG,KAGTH,EAAUP,IADVM,IAIa,IADfG,GAAUC,GACQ,CAChBF,IACA,IAAMI,EAAoBz7D,KAAKC,IAAIo7D,EAAc,GACjDC,GAAAA,EAAS,EAAAI,6BAA4BjB,EAAcgB,EAAmBp/D,KAAKw8D,MAAAA,CAK/E,KAAS13D,EAAI,EAAGA,EAAIs5D,EAAat4D,OAAQhB,IACnC05D,EAAgB15D,GAAKk4D,GACvBoB,EAAat5D,GAAGw6D,QAAQd,EAAgB15D,GAAIo4D,GAMhD,IADA,IAAIe,EAAsBS,EAAaJ,EAChCL,KAAwB,GACV,IAAfj+D,KAAKslB,MACHtlB,KAAKiW,EAAIgnD,EAAU,GACrBj9D,KAAKiW,IACLjW,KAAKqI,MAAMI,QAEXzI,KAAKslB,QACLtlB,KAAKqK,SAIHrK,KAAKslB,MAAQ3hB,KAAKmP,IAAI9S,KAAKqI,MAAMs0D,UAAW38D,KAAKqI,MAAMvC,OAASq4D,GAAiBlB,IAC/Ej9D,KAAKslB,QAAUtlB,KAAKqK,OACtBrK,KAAKqK,QAEPrK,KAAKslB,SAIXtlB,KAAKs5D,OAAS31D,KAAKmP,IAAI9S,KAAKs5D,OAASoF,EAAY1+D,KAAKslB,MAAQ23C,EAAU,IAM1E,IAAIiB,EAASp4D,OAAS,EAAG,CAGvB,IAAMy5D,EAA+B,GAG/BC,EAA8B,GACpC,IAAS16D,EAAI,EAAGA,EAAI9E,KAAKqI,MAAMvC,OAAQhB,IACrC06D,EAAcz2D,KAAK/I,KAAKqI,MAAM5I,IAAIqF,IAEpC,IAAM26D,EAAsBz/D,KAAKqI,MAAMvC,OAEnC45D,EAAoBD,EAAsB,EAC1CE,EAAoB,EACpBC,EAAe1B,EAASyB,GAC5B3/D,KAAKqI,MAAMvC,OAASnC,KAAKmP,IAAI9S,KAAKqI,MAAMs0D,UAAW38D,KAAKqI,MAAMvC,OAASq4D,GACvE,IAAI0B,EAAqB,EACzB,IAAS/6D,EAAInB,KAAKmP,IAAI9S,KAAKqI,MAAMs0D,UAAY,EAAG8C,EAAsBtB,EAAgB,GAAIr5D,GAAK,EAAGA,IAChG,GAAI86D,GAAgBA,EAAaj5D,MAAQ+4D,EAAoBG,EAAoB,CAE/E,IAAK,IAAIC,EAAQF,EAAajB,SAAS74D,OAAS,EAAGg6D,GAAS,EAAGA,IAC7D9/D,KAAKqI,MAAM1I,IAAImF,IAAK86D,EAAajB,SAASmB,IAE5Ch7D,IAGAy6D,EAAax2D,KAAK,CAChBkR,MAAOylD,EAAoB,EAC3Bl3C,OAAQo3C,EAAajB,SAAS74D,SAGhC+5D,GAAsBD,EAAajB,SAAS74D,OAC5C85D,EAAe1B,IAAWyB,EAAAA,MAE1B3/D,KAAKqI,MAAM1I,IAAImF,EAAG06D,EAAcE,MAKpC,IAAIK,EAAqB,EACzB,IAASj7D,EAAIy6D,EAAaz5D,OAAS,EAAGhB,GAAK,EAAGA,IAC5Cy6D,EAAaz6D,GAAGmV,OAAS8lD,EACzB//D,KAAKqI,MAAMw9C,gBAAgBhvC,KAAK0oD,EAAaz6D,IAC7Ci7D,GAAsBR,EAAaz6D,GAAG0jB,OAExC,IAAM40C,EAAez5D,KAAKC,IAAI,EAAG67D,EAAsBtB,EAAgBn+D,KAAKqI,MAAMs0D,WAC9ES,EAAe,GACjBp9D,KAAKqI,MAAMy9C,cAAcjvC,KAAKumD,EAAAA,CAAAA,EAoB7Bj7D,EAAAA,UAAAA,yBAAP,SAAgC69D,EAAmB5qD,EAAqB6qD,GACtE,aADsEA,IAAAA,GAAAA,GAC/D7qD,GAAa,CAClB,IAAMM,EAAO1V,KAAKqI,MAAM5I,IAAIugE,GAC5B,IAAKtqD,EACH,MAAO,EAAE,GAAI,GAGf,IADA,IAAM7N,EAAS3F,EAAcwT,EAAKinC,mBAAqBjnC,EAAK5P,OACnDhB,EAAI,EAAGA,EAAI+C,IAAU/C,EAM5B,GALI4Q,EAAKjW,IAAIqF,GAAGJ,EAAAA,yBAGd0Q,GAAeM,EAAKjW,IAAIqF,GAAGJ,EAAAA,sBAAsBoB,QAAU,GAEzDsP,EAAc,EAChB,MAAO,CAAC4qD,EAAWl7D,GAGvBk7D,GAEF,OAAO,CAACA,EAAW,IAad79D,EAAAA,UAAAA,4BAAP,SAAmC69D,EAAmBC,EAAoBplC,EAAsBC,QAAAA,IAAtBD,IAAAA,EAAAA,GACxE,IAAMnlB,EAAO1V,KAAKqI,MAAM5I,IAAIugE,GAC5B,OAAKtqD,EAGEA,EAAKo9B,kBAAkBmtB,EAAWplC,EAAUC,GAF1C,IAKJ34B,EAAAA,UAAAA,uBAAP,SAA8B8T,GAI5B,IAHA,IAAInC,EAAQmC,EACRkuC,EAAOluC,EAEJnC,EAAQ,GAAK9T,KAAKqI,MAAM5I,IAAIqU,GAAQ0mB,WACzC1mB,IAGF,KAAOqwC,EAAO,EAAInkD,KAAKqI,MAAMvC,QAAU9F,KAAKqI,MAAM5I,IAAI0kD,EAAO,GAAI3pB,WAC/D2pB,IAEF,MAAO,CAAErwC,MAAK3P,EAAEggD,KAAIjiD,EAAA,EAOfC,EAAAA,UAAAA,cAAP,SAAqB2C,GAUnB,IATIA,MAAAA,EACG9E,KAAKi3D,KAAKnyD,KACbA,EAAI9E,KAAKk3D,SAASpyD,KAGpB9E,KAAKi3D,KAAO,CAAC,EACbnyD,EAAI,GAGCA,EAAI9E,KAAKw8D,MAAO13D,GAAK9E,KAAKqc,gBAAgBmB,WAAW0iD,aAC1DlgE,KAAKi3D,KAAKnyD,IAAAA,CAAK,EAQZ3C,EAAAA,UAAAA,SAAP,SAAgB6T,GAId,IAHIA,MAAAA,IACFA,EAAIhW,KAAKgW,IAEHhW,KAAKi3D,OAAOjhD,IAAMA,EAAI,IAC9B,OAAOA,GAAKhW,KAAKw8D,MAAQx8D,KAAKw8D,MAAQ,EAAIxmD,EAAI,EAAI,EAAIA,CAAAA,EAOjD7T,EAAAA,UAAAA,SAAP,SAAgB6T,GAId,IAHIA,MAAAA,IACFA,EAAIhW,KAAKgW,IAEHhW,KAAKi3D,OAAOjhD,IAAMA,EAAIhW,KAAKw8D,QACnC,OAAOxmD,GAAKhW,KAAKw8D,MAAQx8D,KAAKw8D,MAAQ,EAAIxmD,EAAI,EAAI,EAAIA,CAAAA,EAOjD7T,EAAAA,UAAAA,aAAP,SAAoB8T,GAClBjW,KAAKu8D,aAAAA,EACL,IAAK,IAAIz3D,EAAI,EAAGA,EAAI9E,KAAKgtB,QAAQlnB,OAAQhB,IACnC9E,KAAKgtB,QAAQloB,GAAG4Q,OAASO,IAC3BjW,KAAKgtB,QAAQloB,GAAGgD,UAChB9H,KAAKgtB,QAAQnY,OAAO/P,IAAK,IAG7B9E,KAAKu8D,aAAAA,CAAc,EAMdp6D,EAAAA,UAAAA,gBAAP,WACEnC,KAAKu8D,aAAAA,EACL,IAAK,IAAIz3D,EAAI,EAAGA,EAAI9E,KAAKgtB,QAAQlnB,OAAQhB,IACvC9E,KAAKgtB,QAAQloB,GAAGgD,UAChB9H,KAAKgtB,QAAQnY,OAAO/P,IAAK,GAE3B9E,KAAKu8D,aAAAA,CAAc,EAGdp6D,EAAAA,UAAAA,UAAP,SAAiB8T,GAAjB,WACQ8e,EAAS,IAAInwB,EAAAA,OAAOqR,GA0B1B,OAzBAjW,KAAKgtB,QAAQjkB,KAAKgsB,GAClBA,EAAOxuB,SAASvG,KAAKqI,MAAM03C,QAAO,YAChChrB,EAAOrf,MAAQ8S,EAEXuM,EAAOrf,KAAO,GAChBqf,EAAOjtB,SAAAA,KAGXitB,EAAOxuB,SAASvG,KAAKqI,MAAM83D,UAAS,SAAAh+D,GAC9B4yB,EAAOrf,MAAQhD,EAAMuH,QACvB8a,EAAOrf,MAAQhD,EAAM8V,OAAAA,KAGzBuM,EAAOxuB,SAASvG,KAAKqI,MAAM+3D,UAAS,SAAAj+D,GAE9B4yB,EAAOrf,MAAQhD,EAAMuH,OAAS8a,EAAOrf,KAAOhD,EAAMuH,MAAQvH,EAAM8V,QAClEuM,EAAOjtB,UAILitB,EAAOrf,KAAOhD,EAAMuH,QACtB8a,EAAOrf,MAAQhD,EAAM8V,OAAAA,KAGzBuM,EAAOxuB,SAASwuB,EAAOG,WAAU,WAAM,OAAA/wB,EAAKk8D,cAActrC,EAAAA,KACnDA,CAAAA,EAGD5yB,EAAAA,UAAAA,cAAR,SAAsB4yB,GACf/0B,KAAKu8D,aACRv8D,KAAKgtB,QAAQnY,OAAO7U,KAAKgtB,QAAQ1X,QAAQyf,GAAS,IAI/C5yB,EAAAA,UAAAA,SAAP,SAAgB89D,EAAoBpjB,EAAqBC,EAAmBwjB,EAAwBC,GAClG,OAAO,IAAIC,EAAqBxgE,KAAMigE,EAAWpjB,EAAYC,EAAUwjB,EAAeC,EAAAA,EAE1Fp+D,CAnnBA,IAAagC,EAAAA,OAAAA,EAioBb,iBAGE,WACUw4B,EACA8jC,EACAxa,EACAya,EACAC,EACAC,QAAAA,IAHA3a,IAAAA,EAAAA,QAAA,IACAya,IAAAA,EAAoB/jC,EAAQt0B,MAAMvC,aAAAA,IAClC66D,IAAAA,EAAAA,QAAA,IACAC,IAAAA,EAAAA,GALA,KAAAjkC,QAAA,EACA,KAAA8jC,WAAA,EACA,KAAAxa,YAAA,EACA,KAAAya,UAAA,EACA,KAAAC,eAAA,EACAC,KAAAA,aAAAA,EAEJ5gE,KAAKimD,YAAc,IACrBjmD,KAAKimD,YAAc,GAEjBjmD,KAAK0gE,UAAY1gE,KAAK28B,QAAQt0B,MAAMvC,SACtC9F,KAAK0gE,UAAY1gE,KAAK28B,QAAQt0B,MAAMvC,QAEtC9F,KAAK6gE,SAAW7gE,KAAKimD,WA0BzB,QAvBS9jD,EAAAA,UAAAA,QAAP,WACE,OAAOnC,KAAK6gE,SAAW7gE,KAAK0gE,SAAAA,EAGvBv+D,EAAAA,UAAAA,KAAP,WACE,IAAM0R,EAAQ7T,KAAK28B,QAAQunB,uBAAuBlkD,KAAK6gE,UAEnDhtD,EAAMC,MAAQ9T,KAAKimD,YAAcjmD,KAAK2gE,iBACxC9sD,EAAMC,MAAQ9T,KAAKimD,YAAcjmD,KAAK2gE,gBAEpC9sD,EAAMswC,KAAOnkD,KAAK0gE,UAAY1gE,KAAK4gE,eACrC/sD,EAAMswC,KAAOnkD,KAAK0gE,UAAY1gE,KAAK4gE,cAGrC/sD,EAAMC,MAAQnQ,KAAKC,IAAIiQ,EAAMC,MAAO,GACpCD,EAAMswC,KAAOxgD,KAAKmP,IAAIe,EAAMswC,KAAMnkD,KAAK28B,QAAQt0B,MAAMvC,QAErD,IADA,IAAIiO,EAAU,GACLjP,EAAI+O,EAAMC,MAAOhP,GAAK+O,EAAMswC,OAAQr/C,EAC3CiP,GAAW/T,KAAK28B,QAAQvyB,4BAA4BtF,EAAG9E,KAAKygE,YAG9D,OADAzgE,KAAK6gE,SAAWhtD,EAAMswC,KAAO,EACtB,CAAEtwC,MAAK1R,EAAE4R,QAAO5P,EAAA,EAE3BhC,CA3CA,IAAagC,EAAAA,qBAAAA,CAAAq8D,E,wGCrpBb,IAAA17D,EAAA,OACA+C,EAAAA,EAAAA,KACAmF,EAAAA,EAAAA,KACAxI,EAAAA,EAAAA,MA4BaL,EAAAA,kBAAoBzC,OAAO+L,OAAO,IAAIjJ,EAAAA,eAiBnD,iBAME,WAAY7B,EAAcm+D,EAAiCtmC,QAAAA,IAAAA,IAAAA,GAAAA,GAAAA,KAAAA,UAAAA,EAJjD,KAAAumC,UAAuC,CAAC,EACxC,KAAAC,eAAmD,CAAC,EAI5DhhE,KAAK6sD,MAAQ,IAAIC,YAxCH,EAwCenqD,GAE7B,IADA,IAAMq+B,EAAO8/B,GAAgB9zD,EAAAA,SAASqvD,aAAa,CAAC,EAAGx0D,EAAAA,eAAgBA,EAAAA,gBAAiBA,EAAAA,iBAC/E/C,EAAI,EAAGA,EAAInC,IAAQmC,EAC1B9E,KAAKs/D,QAAQx6D,EAAGk8B,GAElBhhC,KAAK8F,OAASnD,CAsXlB,QA/WSR,EAAAA,UAAAA,IAAP,SAAW8X,GACT,IAAMlG,EAAU/T,KAAK6sD,MArDP,EAqDa5yC,EAAoB,GACzCgnD,EAAe,QAAVltD,EACX,MAAO,CACL/T,KAAK6sD,MAxDO,EAwDD5yC,EAAoB,GACpB,QAAVlG,EACG/T,KAAK+gE,UAAU9mD,GACf/X,GAAAA,EAAO,EAAA6zD,qBAAoBkL,GAAM,GACrCltD,GAAW,GACA,QAAVA,EACG/T,KAAK+gE,UAAU9mD,GAAO2U,WAAW5uB,KAAK+gE,UAAU9mD,GAAOnU,OAAS,GAChEm7D,EAAAA,EAQD9+D,EAAAA,UAAAA,IAAP,SAAW8X,EAAe3O,GACxBtL,KAAK6sD,MAxES,EAwEH5yC,EAAoB,GAAW3O,EAAMzD,EAAAA,sBAC5CyD,EAAMzD,EAAAA,sBAAsB/B,OAAS,GACvC9F,KAAK+gE,UAAU9mD,GAAS3O,EAAM,GAC9BtL,KAAK6sD,MA3EO,EA2ED5yC,EAAoB,GAAwB,QAARA,EAAoC3O,EAAMzD,EAAAA,wBAA0B,IAEnH7H,KAAK6sD,MA7EO,EA6ED5yC,EAAoB,GAAgB3O,EAAMzD,EAAAA,sBAAsB+mB,WAAW,GAAMtjB,EAAMzD,EAAAA,wBAA0B,IAQzH1F,EAAAA,UAAAA,SAAP,SAAgB8X,GACd,OAAOja,KAAK6sD,MAtFE,EAsFI5yC,EAAoB,IAAiB,IAIlD9X,EAAAA,UAAAA,SAAP,SAAgB8X,GACd,OAAsD,SAA/Cja,KAAK6sD,MA3FE,EA2FI5yC,EAAoB,IAIjC9X,EAAAA,UAAAA,MAAP,SAAa8X,GACX,OAAOja,KAAK6sD,MAhGE,EAgGI5yC,EAAoB,IAIjC9X,EAAAA,UAAAA,MAAP,SAAa8X,GACX,OAAOja,KAAK6sD,MArGE,EAqGI5yC,EAAoB,IAQjC9X,EAAAA,UAAAA,WAAP,SAAkB8X,GAChB,OAAsD,QAA/Cja,KAAK6sD,MA9GE,EA8GI5yC,EAAoB,IAQjC9X,EAAAA,UAAAA,aAAP,SAAoB8X,GAClB,IAAMlG,EAAU/T,KAAK6sD,MAvHP,EAuHa5yC,EAAoB,GAC/C,OAAc,QAAVlG,EACK/T,KAAK+gE,UAAU9mD,GAAO2U,WAAW5uB,KAAK+gE,UAAU9mD,GAAOnU,OAAS,GAExD,QAAViO,CAAAA,EAIF5R,EAAAA,UAAAA,WAAP,SAAkB8X,GAChB,OAAsD,QAA/Cja,KAAK6sD,MAhIE,EAgII5yC,EAAoB,IAIjC9X,EAAAA,UAAAA,UAAP,SAAiB8X,GACf,IAAMlG,EAAU/T,KAAK6sD,MArIP,EAqIa5yC,EAAoB,GAC/C,OAAc,QAAVlG,EACK/T,KAAK+gE,UAAU9mD,GAEV,QAAVlG,GAAAA,EACK,EAAAgiD,qBAA8B,QAAVhiD,GAGtB,IAOF5R,EAAAA,UAAAA,SAAP,SAAgB8X,EAAe+mB,GAC7B,IAAM6b,EArJQ,EAqJK5iC,EAUnB,OATA+mB,EAAKjtB,QAAU/T,KAAK6sD,MAAMhQ,EAAa,GACvC7b,EAAKl0B,GAAK9M,KAAK6sD,MAAMhQ,EAAa,GAClC7b,EAAKn0B,GAAK7M,KAAK6sD,MAAMhQ,EAAa,GACf,QAAf7b,EAAKjtB,UACPitB,EAAK+a,aAAe/7C,KAAK+gE,UAAU9mD,IAEvB,UAAV+mB,EAAKn0B,KACPm0B,EAAK40B,SAAW51D,KAAKghE,eAAe/mD,IAE/B+mB,CAAAA,EAMF7+B,EAAAA,UAAAA,QAAP,SAAe8X,EAAe+mB,GACT,QAAfA,EAAKjtB,UACP/T,KAAK+gE,UAAU9mD,GAAS+mB,EAAK+a,cAEjB,UAAV/a,EAAKn0B,KACP7M,KAAKghE,eAAe/mD,GAAS+mB,EAAK40B,UAEpC51D,KAAK6sD,MA5KS,EA4KH5yC,EAAoB,GAAgB+mB,EAAKjtB,QACpD/T,KAAK6sD,MA7KS,EA6KH5yC,EAAoB,GAAW+mB,EAAKl0B,GAC/C9M,KAAK6sD,MA9KS,EA8KH5yC,EAAoB,GAAW+mB,EAAKn0B,EAAAA,EAQ1C1K,EAAAA,UAAAA,qBAAP,SAA4B8X,EAAeinD,EAAmBl1D,EAAec,EAAYD,EAAYs0D,GAC1F,UAALt0D,IACF7M,KAAKghE,eAAe/mD,GAASknD,GAE/BnhE,KAAK6sD,MA1LS,EA0LH5yC,EAAoB,GAAgBinD,EAAal1D,GAAS,GACrEhM,KAAK6sD,MA3LS,EA2LH5yC,EAAoB,GAAWnN,EAC1C9M,KAAK6sD,MA5LS,EA4LH5yC,EAAoB,GAAWpN,CAAAA,EASrC1K,EAAAA,UAAAA,mBAAP,SAA0B8X,EAAeinD,GACvC,IAAIntD,EAAU/T,KAAK6sD,MAtML,EAsMW5yC,EAAoB,GAC/B,QAAVlG,EAEF/T,KAAK+gE,UAAU9mD,KAAAA,EAAU,EAAA87C,qBAAoBmL,IAE/B,QAAVntD,GAIF/T,KAAK+gE,UAAU9mD,IAAAA,EAAS,EAAA87C,qBAA8B,QAAVhiD,IAAAA,EAAoC,EAAAgiD,qBAAoBmL,GACpGntD,IAAW,QACXA,GAAW,SAIXA,EAAUmtD,EAAa,GAAK,GAE9BlhE,KAAK6sD,MAvNO,EAuND5yC,EAAoB,GAAgBlG,EAAAA,EAI5C5R,EAAAA,UAAAA,YAAP,SAAmBuJ,EAAa7D,EAAWi5D,EAAyB/W,GAQlE,IAPAr+C,GAAO1L,KAAK8F,SAG0B,IAA3B9F,KAAK0lB,SAASha,EAAM,IAC7B1L,KAAK21D,qBAAqBjqD,EAAM,EAAG,EAAG,GAAGq+C,MAAAA,OAAAA,EAAAA,EAAWj9C,KAAM,GAAGi9C,MAAAA,OAAAA,EAAAA,EAAWl9C,KAAM,GAAGk9C,MAAAA,OAAAA,EAAAA,EAAW6L,WAAY,IAAIpxD,EAAAA,eAG1GqD,EAAI7H,KAAK8F,OAAS4F,EAAK,CAEzB,IADA,IAAMs1B,EAAO,IAAIh0B,EAAAA,SACRlI,EAAI9E,KAAK8F,OAAS4F,EAAM7D,EAAI,EAAG/C,GAAK,IAAKA,EAChD9E,KAAKs/D,QAAQ5zD,EAAM7D,EAAI/C,EAAG9E,KAAK2mC,SAASj7B,EAAM5G,EAAGk8B,IAEnD,IAASl8B,EAAI,EAAGA,EAAI+C,IAAK/C,EACvB9E,KAAKs/D,QAAQ5zD,EAAM5G,EAAGg8D,EAAAA,MAGxB,IAASh8D,EAAI4G,EAAK5G,EAAI9E,KAAK8F,SAAUhB,EACnC9E,KAAKs/D,QAAQx6D,EAAGg8D,GAKmB,IAAnC9gE,KAAK0lB,SAAS1lB,KAAK8F,OAAS,IAC9B9F,KAAK21D,qBAAqB31D,KAAK8F,OAAS,EAAG,EAAG,GAAGikD,MAAAA,OAAAA,EAAAA,EAAWj9C,KAAM,GAAGi9C,MAAAA,OAAAA,EAAAA,EAAWl9C,KAAM,GAAGk9C,MAAAA,OAAAA,EAAAA,EAAW6L,WAAY,IAAIpxD,EAAAA,cAAAu3D,EAIjH55D,EAAAA,UAAAA,YAAP,SAAmBuJ,EAAa7D,EAAWi5D,EAAyB/W,GAElE,GADAr+C,GAAO1L,KAAK8F,OACR+B,EAAI7H,KAAK8F,OAAS4F,EAAK,CAEzB,IADA,IAAMs1B,EAAO,IAAIh0B,EAAAA,SACRlI,EAAI,EAAGA,EAAI9E,KAAK8F,OAAS4F,EAAM7D,IAAK/C,EAC3C9E,KAAKs/D,QAAQ5zD,EAAM5G,EAAG9E,KAAK2mC,SAASj7B,EAAM7D,EAAI/C,EAAGk8B,IAEnD,IAASl8B,EAAI9E,KAAK8F,OAAS+B,EAAG/C,EAAI9E,KAAK8F,SAAUhB,EAC/C9E,KAAKs/D,QAAQx6D,EAAGg8D,EAAAA,MAGlB,IAASh8D,EAAI4G,EAAK5G,EAAI9E,KAAK8F,SAAUhB,EACnC9E,KAAKs/D,QAAQx6D,EAAGg8D,GAOhBp1D,GAAkC,IAA3B1L,KAAK0lB,SAASha,EAAM,IAC7B1L,KAAK21D,qBAAqBjqD,EAAM,EAAG,EAAG,GAAGq+C,MAAAA,OAAAA,EAAAA,EAAWj9C,KAAM,GAAGi9C,MAAAA,OAAAA,EAAAA,EAAWl9C,KAAM,GAAGk9C,MAAAA,OAAAA,EAAAA,EAAW6L,WAAY,IAAIpxD,EAAAA,eAEnF,IAAvBxE,KAAK0lB,SAASha,IAAe1L,KAAKs2D,WAAW5qD,IAC/C1L,KAAK21D,qBAAqBjqD,EAAK,EAAG,GAAGq+C,MAAAA,OAAAA,EAAAA,EAAWj9C,KAAM,GAAGi9C,MAAAA,OAAAA,EAAAA,EAAWl9C,KAAM,GAAGk9C,MAAAA,OAAAA,EAAAA,EAAW6L,WAAY,IAAIpxD,EAAAA,cAAAu3D,EAIrG55D,EAAAA,UAAAA,aAAP,SAAoBwE,EAAeC,EAAak6D,EAAyB/W,GAUvE,IARIpjD,GAAsC,IAA7B3G,KAAK0lB,SAAS/e,EAAQ,IACjC3G,KAAK21D,qBAAqBhvD,EAAQ,EAAG,EAAG,GAAGojD,MAAAA,OAAAA,EAAAA,EAAWj9C,KAAM,GAAGi9C,MAAAA,OAAAA,EAAAA,EAAWl9C,KAAM,GAAGk9C,MAAAA,OAAAA,EAAAA,EAAW6L,WAAY,IAAIpxD,EAAAA,eAG5GoC,EAAM5G,KAAK8F,QAAqC,IAA3B9F,KAAK0lB,SAAS9e,EAAM,IAC3C5G,KAAK21D,qBAAqB/uD,EAAK,EAAG,GAAGmjD,MAAAA,OAAAA,EAAAA,EAAWj9C,KAAM,GAAGi9C,MAAAA,OAAAA,EAAAA,EAAWl9C,KAAM,GAAGk9C,MAAAA,OAAAA,EAAAA,EAAW6L,WAAY,IAAIpxD,EAAAA,eAGnGmC,EAAQC,GAAQD,EAAQ3G,KAAK8F,QAClC9F,KAAKs/D,QAAQ34D,IAASm6D,EAAAA,EAInB3+D,EAAAA,UAAAA,OAAP,SAAcQ,EAAcm+D,GAC1B,GAAIn+D,IAAS3C,KAAK8F,OAAlB,CAGA,GAAInD,EAAO3C,KAAK8F,OAAQ,CACtB,IAAMoL,EAAO,IAAI47C,YAtSL,EAsSiBnqD,GACzB3C,KAAK8F,SAvSG,EAwSNnD,EAAmB3C,KAAK6sD,MAAM/mD,OAChCoL,EAAKvR,IAAIK,KAAK6sD,MAAMI,SAAS,EAzSrB,EAySwBtqD,IAEhCuO,EAAKvR,IAAIK,KAAK6sD,QAGlB7sD,KAAK6sD,MAAQ37C,EACb,IAAK,IAAIpM,EAAI9E,KAAK8F,OAAQhB,EAAInC,IAAQmC,EACpC9E,KAAKs/D,QAAQx6D,EAAGg8D,EAAAA,MAGlB,GAAIn+D,EAAM,EACFuO,EAAO,IAAI47C,YApTP,EAoTmBnqD,IACxBhD,IAAIK,KAAK6sD,MAAMI,SAAS,EArTnB,EAqTsBtqD,IAChC3C,KAAK6sD,MAAQ37C,EAEb,IAAMkwD,EAAO1/D,OAAO0/D,KAAKphE,KAAK+gE,WAC9B,IAASj8D,EAAI,EAAGA,EAAIs8D,EAAKt7D,OAAQhB,IAAK,CACpC,IAAMtD,EAAMgC,SAAS49D,EAAKt8D,GAAI,IAC1BtD,GAAOmB,UACF3C,KAAK+gE,UAAUv/D,EAAAA,CAAAA,MAI1BxB,KAAK6sD,MAAQ,IAAIC,YAAY,GAC7B9sD,KAAK+gE,UAAY,CAAC,EAGtB/gE,KAAK8F,OAASnD,CAAAA,CAAAA,EAITR,EAAAA,UAAAA,KAAP,SAAY2+D,GACV9gE,KAAK+gE,UAAY,CAAC,EAClB/gE,KAAKghE,eAAiB,CAAC,EACvB,IAAK,IAAIl8D,EAAI,EAAGA,EAAI9E,KAAK8F,SAAUhB,EACjC9E,KAAKs/D,QAAQx6D,EAAGg8D,EAAAA,EAKb3+D,EAAAA,UAAAA,SAAP,SAAgBuT,GASd,IAAK,IAAMqU,KARP/pB,KAAK8F,SAAW4P,EAAK5P,OACvB9F,KAAK6sD,MAAQ,IAAIC,YAAYp3C,EAAKm3C,OAGlC7sD,KAAK6sD,MAAMltD,IAAI+V,EAAKm3C,OAEtB7sD,KAAK8F,OAAS4P,EAAK5P,OACnB9F,KAAK+gE,UAAY,CAAC,EACDrrD,EAAKqrD,UACpB/gE,KAAK+gE,UAAUh3C,GAAMrU,EAAKqrD,UAAUh3C,GAGtC,IAAK,IAAMA,KADX/pB,KAAKghE,eAAiB,CAAC,EACNtrD,EAAKsrD,eACpBhhE,KAAKghE,eAAej3C,GAAMrU,EAAKsrD,eAAej3C,GAEhD/pB,KAAKw6B,UAAY9kB,EAAK8kB,SAAAA,EAIjBr4B,EAAAA,UAAAA,MAAP,WACE,IAAMy8D,EAAU,IAAIyC,EAAW,GAG/B,IAAK,IAAMt3C,KAFX60C,EAAQ/R,MAAQ,IAAIC,YAAY9sD,KAAK6sD,OACrC+R,EAAQ94D,OAAS9F,KAAK8F,OACL9F,KAAK+gE,UACpBnC,EAAQmC,UAAUh3C,GAAM/pB,KAAK+gE,UAAUh3C,GAEzC,IAAK,IAAMA,KAAM/pB,KAAKghE,eACpBpC,EAAQoC,eAAej3C,GAAM/pB,KAAKghE,eAAej3C,GAGnD,OADA60C,EAAQpkC,UAAYx6B,KAAKw6B,UAClBokC,CAAAA,EAGFz8D,EAAAA,UAAAA,iBAAP,WACE,IAAK,IAAI2C,EAAI9E,KAAK8F,OAAS,EAAGhB,GAAK,IAAKA,EACtC,GAAgD,QAA3C9E,KAAK6sD,MArXE,EAqXI/nD,EAAgB,GAC9B,OAAOA,GAAK9E,KAAK6sD,MAtXP,EAsXa/nD,EAAgB,IAAiB,IAG5D,OAAO,GAGF3C,EAAAA,UAAAA,cAAP,SAAqBm/D,EAAiBrC,EAAgBF,EAAiBj5D,EAAgBy7D,GACrF,IAAMC,EAAUF,EAAIzU,MACpB,GAAI0U,EACF,IAAK,IAAIvgC,EAAOl7B,EAAS,EAAGk7B,GAAQ,EAAGA,IACrC,IAAK,IAAIl8B,EAAI,EAAGA,EAhYN,EAgYqBA,IAC7B9E,KAAK6sD,MAjYG,GAiYIkS,EAAU/9B,GAAoBl8B,GAAK08D,EAjYvC,GAiYgDvC,EAASj+B,GAAoBl8B,QAIzF,IAASk8B,EAAO,EAAGA,EAAOl7B,EAAQk7B,IAChC,IAASl8B,EAAI,EAAGA,EAtYN,EAsYqBA,IAC7B9E,KAAK6sD,MAvYG,GAuYIkS,EAAU/9B,GAAoBl8B,GAAK08D,EAvYvC,GAuYgDvC,EAASj+B,GAAoBl8B,GAM3F,IAAM28D,EAAkB//D,OAAO0/D,KAAKE,EAAIP,WACxC,IAASj8D,EAAI,EAAGA,EAAI28D,EAAgB37D,OAAQhB,IAAK,CAC/C,IAAMtD,EAAMgC,SAASi+D,EAAgB38D,GAAI,IACrCtD,GAAOy9D,IACTj/D,KAAK+gE,UAAUv/D,EAAMy9D,EAASF,GAAWuC,EAAIP,UAAUv/D,GAAAA,CAAAA,EAKtDW,EAAAA,UAAAA,kBAAP,SAAyB89D,EAA4BplC,EAAsBC,QAAAA,IAAlDmlC,IAAAA,GAAAA,QAAA,IAA4BplC,IAAAA,EAAAA,QAAA,IAAsBC,IAAAA,EAAiB96B,KAAK8F,QAC3Fm6D,IACFnlC,EAASn3B,KAAKmP,IAAIgoB,EAAQ96B,KAAK28C,qBAGjC,IADA,IAAI18C,EAAS,GACN46B,EAAWC,GAAQ,CACxB,IAAM/mB,EAAU/T,KAAK6sD,MA5ZT,EA4ZehyB,EAAuB,GAC5ComC,EAAe,QAAVltD,EACX9T,GAAqB,QAAV8T,EAAsC/T,KAAK+gE,UAAUlmC,GAAYp2B,GAAAA,EAAO,EAAAsxD,qBAAoBkL,GAAMp5D,EAAAA,qBAC7GgzB,GAAa9mB,GAAW,IAAwB,CAElD,QAAO9T,CAAAA,EAEXkC,CAlYA,IAAagC,EAAAA,WAAAA,CAAAA,E,sFC/CbA,EAAAA,eAAAA,SAA+B0P,EAAqB6tD,GAClD,GAAI7tD,EAAMlN,MAAMsP,EAAIpC,EAAMjN,IAAIqP,EAC5B,MAAM,IAAI5P,MAAM,qBAAqBwN,EAAMjN,IAAIoP,EAAC,KAAKnC,EAAMjN,IAAIqP,EAAC,6BAA6BpC,EAAMlN,MAAMqP,EAAC,KAAKnC,EAAMlN,MAAMsP,EAAC,KAE9H,OAAOyrD,GAAc7tD,EAAMjN,IAAIqP,EAAIpC,EAAMlN,MAAMsP,IAAMpC,EAAMjN,IAAIoP,EAAInC,EAAMlN,MAAMqP,EAAI,K,aCkMrF,SAAgBqpD,EAA4Bh3D,EAAqBvD,EAAWnC,GAE1E,GAAImC,IAAMuD,EAAMvC,OAAS,EACvB,OAAOuC,EAAMvD,GAAG63C,mBAKlB,IAAMglB,GAAet5D,EAAMvD,GAAGwxD,WAAW3zD,EAAO,IAAuC,IAAhC0F,EAAMvD,GAAG4gB,SAAS/iB,EAAO,GAC1Ei/D,EAA2D,IAA7Bv5D,EAAMvD,EAAI,GAAG4gB,SAAS,GAC1D,OAAIi8C,GAAcC,EACTj/D,EAAO,EAETA,C,kNAtMTwB,EAAAA,6BAAAA,SAA6CkE,EAAkCw5D,EAAiB7E,EAAiB8E,EAAyB5E,GAKxI,IAFA,IAAMO,EAAqB,GAElBxnD,EAAI,EAAGA,EAAI5N,EAAMvC,OAAS,EAAGmQ,IAAK,CAEzC,IAAInR,EAAImR,EACJm8C,EAAW/pD,EAAM5I,MAAMqF,GAC3B,GAAKstD,EAAS53B,UAAd,CAMA,IADA,IAAM4jC,EAA6B,CAAC/1D,EAAM5I,IAAIwW,IACvCnR,EAAIuD,EAAMvC,QAAUssD,EAAS53B,WAClC4jC,EAAar1D,KAAKqpD,GAClBA,EAAW/pD,EAAM5I,MAAMqF,GAKzB,GAAIg9D,GAAmB7rD,GAAK6rD,EAAkBh9D,EAC5CmR,GAAKmoD,EAAat4D,OAAS,MAD7B,CAUA,IAJA,IAAIg5D,EAAgB,EAChBC,EAAUM,EAA4BjB,EAAcU,EAAe+C,GACnE7C,EAAe,EACfC,EAAS,EACND,EAAeZ,EAAat4D,QAAQ,CACzC,IAAMi8D,EAAuB1C,EAA4BjB,EAAcY,EAAc6C,GAC/EG,EAAoBD,EAAuB9C,EAC3CgD,EAAqBjF,EAAU+B,EAC/BG,EAAcv7D,KAAKmP,IAAIkvD,EAAmBC,GAEhD7D,EAAaU,GAAeK,cAAcf,EAAaY,GAAeC,EAAQF,EAASG,GAAAA,IAEvFH,GAAWG,KACKlC,IACd8B,IACAC,EAAU,IAEZE,GAAUC,KACK6C,IACb/C,IACAC,EAAS,GAIK,IAAZF,GAAmC,IAAlBD,GAC2C,IAA1DV,EAAaU,EAAgB,GAAGp5C,SAASs3C,EAAU,KACrDoB,EAAaU,GAAeK,cAAcf,EAAaU,EAAgB,GAAI9B,EAAU,EAAG+B,IAAW,MAEnGX,EAAaU,EAAgB,GAAGQ,QAAQtC,EAAU,EAAGE,GAM3DkB,CAAAA,EAAaU,GAAe1H,aAAa2H,EAAS/B,EAASE,GAI3D,IADA,IAAIgF,EAAgB,EACXr0D,EAAIuwD,EAAat4D,OAAS,EAAG+H,EAAI,IACpCA,EAAIixD,GAAwD,IAAvCV,EAAavwD,GAAG8uC,oBADE9uC,IAEzCq0D,IAMAA,EAAgB,IAClBzE,EAAS10D,KAAKkN,EAAImoD,EAAat4D,OAASo8D,GACxCzE,EAAS10D,KAAKm5D,IAGhBjsD,GAAKmoD,EAAat4D,OAAS,GAE7B,QAAO23D,CAAAA,EAQTt5D,EAAAA,4BAAAA,SAA4CkE,EAAkCo1D,GAM5E,IALA,IAAMK,EAAmB,GAErBqE,EAAoB,EACpBC,EAAoB3E,EAAS0E,GAC7BE,EAAoB,EACfv9D,EAAI,EAAGA,EAAIuD,EAAMvC,OAAQhB,IAChC,GAAIs9D,IAAsBt9D,EAAG,CAC3B,IAAMo9D,EAAgBzE,IAAW0E,GAGjC95D,EAAMu9C,gBAAgB/uC,KAAK,CACzBoD,MAAOnV,EAAIu9D,EACX75C,OAAQ05C,IAGVp9D,GAAKo9D,EAAgB,EACrBG,GAAqBH,EACrBE,EAAoB3E,IAAW0E,EAAAA,MAE/BrE,EAAO/0D,KAAKjE,GAGhB,MAAO,CACLg5D,OAAM57D,EACN87D,aAAcqE,EAAAA,EAUlBl+D,EAAAA,2BAAAA,SAA2CkE,EAAkCi6D,GAG3E,IADA,IAAMC,EAA+B,GAC5Bz9D,EAAI,EAAGA,EAAIw9D,EAAUx8D,OAAQhB,IACpCy9D,EAAex5D,KAAKV,EAAM5I,IAAI6iE,EAAUx9D,KAI1C,IAASA,EAAI,EAAGA,EAAIy9D,EAAez8D,OAAQhB,IACzCuD,EAAM1I,IAAImF,EAAGy9D,EAAez9D,IAE9BuD,EAAMvC,OAASw8D,EAAUx8D,MAAAA,EAiB3B3B,EAAAA,+BAAAA,SAA+Ci6D,EAA4ByD,EAAiB7E,GAS1F,IARA,IAAMwF,EAA2B,GAC3BC,EAAcrE,EAAa9sD,KAAI,SAAC3M,EAAGG,GAAM,SAA4Bs5D,EAAct5D,EAAG+8D,EAAAA,IAAUa,QAAO,SAAChjD,EAAGhb,GAAM,SAAIA,CAAAA,IAIvHu6D,EAAS,EACT0D,EAAU,EACVC,EAAiB,EACdA,EAAiBH,GAAa,CACnC,GAAIA,EAAcG,EAAiB5F,EAAS,CAE1CwF,EAAez5D,KAAK05D,EAAcG,GAClC,KAEF3D,CAAAA,GAAUjC,EACV,IAAM6F,EAAmBxD,EAA4BjB,EAAcuE,EAASd,GACxE5C,EAAS4D,IACX5D,GAAU4D,EACVF,KAEF,IAAMG,EAA8D,IAA/C1E,EAAauE,GAASj9C,SAASu5C,EAAS,GACzD6D,GACF7D,IAEF,IAAMxkB,EAAaqoB,EAAe9F,EAAU,EAAIA,EAChDwF,EAAez5D,KAAK0xC,GACpBmoB,GAAkBnoB,CAGpB,QAAO+nB,CAAAA,EAGTr+D,EAAAA,4BAAAA,CAAAA,E,wjBCtMA,cACAK,EAAAA,EAAAA,MAQAC,EAAAA,SAAAA,GAYE,WACmB4X,EACApK,GAFnB,MAIE9P,EAAAA,KAAAA,OAAO,K,OAHU2C,EAAAA,gBAAAA,EACAA,EAAAA,eAAAA,EATXA,EAAAA,kBAAoBA,EAAKyB,SAAS,IAAI/B,EAAAA,cAY5CM,EAAK+c,QAJY,CAqGrB,QAlH+Bha,EAAAA,EAAAA,GAM7BnG,OAAAA,eAAWyC,EAAAA,UAAA,mBAAgB,C,IAA3B,WAA0F,OAAOnE,KAAKigD,kBAAkBvtC,KAAAA,E,gCAcjHvO,EAAAA,UAAAA,MAAP,WACEnE,KAAK+iE,QAAU,IAAI/1D,EAAAA,QAAAg2D,EAAahjE,KAAKqc,gBAAiBrc,KAAKiS,gBAC3DjS,KAAK+iE,QAAQE,mBAIbjjE,KAAKkjE,KAAO,IAAIl2D,EAAAA,QAAAg2D,EAAchjE,KAAKqc,gBAAiBrc,KAAKiS,gBACzDjS,KAAK2xB,cAAgB3xB,KAAK+iE,QAC1B/iE,KAAKigD,kBAAkBppC,KAAK,CAC1Bgb,aAAc7xB,KAAK+iE,QACnBI,eAAgBnjE,KAAKkjE,OAGvBljE,KAAK4kB,eAAAA,EAMPljB,OAAAA,eAAWyC,EAAAA,UAAA,MAAG,C,IAAd,WACE,OAAOnE,KAAKkjE,IAAAA,E,gCAMdxhE,OAAAA,eAAWyC,EAAAA,UAAA,SAAM,C,IAAjB,WACE,OAAOnE,KAAK2xB,aAAAA,E,gCAMdjwB,OAAAA,eAAWyC,EAAAA,UAAA,SAAM,C,IAAjB,WACE,OAAOnE,KAAK+iE,OAAAA,E,gCAMP5+D,EAAAA,UAAAA,qBAAP,WACMnE,KAAK2xB,gBAAkB3xB,KAAK+iE,UAGhC/iE,KAAK+iE,QAAQ/sD,EAAIhW,KAAKkjE,KAAKltD,EAC3BhW,KAAK+iE,QAAQ9sD,EAAIjW,KAAKkjE,KAAKjtD,EAI3BjW,KAAKkjE,KAAKrgE,QACV7C,KAAK2xB,cAAgB3xB,KAAK+iE,QAC1B/iE,KAAKigD,kBAAkBppC,KAAK,CAC1Bgb,aAAc7xB,KAAK+iE,QACnBI,eAAgBnjE,KAAKkjE,OAAAA,EAOlB/+D,EAAAA,UAAAA,kBAAP,SAAyB44D,GACnB/8D,KAAK2xB,gBAAkB3xB,KAAKkjE,OAKhCljE,KAAKkjE,KAAKD,iBAAiBlG,GAC3B/8D,KAAKkjE,KAAKltD,EAAIhW,KAAK+iE,QAAQ/sD,EAC3BhW,KAAKkjE,KAAKjtD,EAAIjW,KAAK+iE,QAAQ9sD,EAC3BjW,KAAK2xB,cAAgB3xB,KAAKkjE,KAC1BljE,KAAKigD,kBAAkBppC,KAAK,CAC1Bgb,aAAc7xB,KAAKkjE,KACnBC,eAAgBnjE,KAAK+iE,UAAAA,EASlB5+D,EAAAA,UAAAA,OAAP,SAAc64D,EAAiBC,GAC7Bj9D,KAAK+iE,QAAQjgE,OAAOk6D,EAASC,GAC7Bj9D,KAAKkjE,KAAKpgE,OAAOk6D,EAASC,EAAAA,EAOrB94D,EAAAA,UAAAA,cAAP,SAAqBW,GACnB9E,KAAK+iE,QAAQn+C,cAAc9f,GAC3B9E,KAAKkjE,KAAKt+C,cAAc9f,EAAAA,EAE5BX,CAlHA,CAAAM,CANAvC,EAAAA,KAM+Bsd,YAAlBrb,EAAAA,UAAAA,CAAAi/D,E,sjBCVb,aACA5+D,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,MAKAC,EAAAA,SAAAA,GAAA,0BAAAvC,GAAAA,EAAA,4B,OAQSgC,EAAAA,QAAU,EACVA,EAAAA,GAAK,EACLA,EAAAA,GAAK,EACLA,EAAAA,SAA2B,IAAIM,EAAAA,cAC/BN,EAAAA,aAAe,GAJf,CAwET,QAhF8B0D,EAAAA,EAAAA,GAEd1D,EAAAA,aAAd,SAA2BmH,GACzB,IAAM+3D,EAAM,IAAIC,EAEhB,OADAD,EAAIE,gBAAgBj4D,GACb+3D,CAAAA,EASFl/D,EAAAA,UAAAA,WAAP,WACE,OAAsB,QAAfnE,KAAK+T,OAAAA,EAGP5P,EAAAA,UAAAA,SAAP,WACE,OAAOnE,KAAK+T,SAAW,IAGlB5P,EAAAA,UAAAA,SAAP,WACE,OAAmB,QAAfnE,KAAK+T,QACA/T,KAAK+7C,aAEK,QAAf/7C,KAAK+T,SAAAA,EACA,EAAAgiD,qBAAmC,QAAf/1D,KAAK+T,SAE3B,IAQF5P,EAAAA,UAAAA,QAAP,WACE,OAAQnE,KAAKq2D,aACTr2D,KAAK+7C,aAAantB,WAAW5uB,KAAK+7C,aAAaj2C,OAAS,GACzC,QAAf9F,KAAK+T,OAAAA,EAGJ5P,EAAAA,UAAAA,gBAAP,SAAuBmH,GACrBtL,KAAK8M,GAAKxB,EAAM9G,EAAAA,sBAChBxE,KAAK6M,GAAK,EACV,IAAI22D,GAAAA,EAEJ,GAAIl4D,EAAM9G,EAAAA,sBAAsBsB,OAAS,EACvC09D,GAAAA,OAEG,GAA2C,IAAvCl4D,EAAM9G,EAAAA,sBAAsBsB,OAAc,CACjD,IAAM05B,EAAOl0B,EAAM9G,EAAAA,sBAAsBoqB,WAAW,GAGpD,GAAI,OAAU4Q,GAAQA,GAAQ,MAAQ,CACpC,IAAMm6B,EAASruD,EAAM9G,EAAAA,sBAAsBoqB,WAAW,GAClD,OAAU+qC,GAAUA,GAAU,MAChC35D,KAAK+T,QAA6B,MAAjByrB,EAAO,OAAkBm6B,EAAS,MAAS,MAAYruD,EAAM9G,EAAAA,wBAA0B,GAGxGg/D,GAAAA,CAAW,MAIbA,GAAAA,CAAW,MAIbxjE,KAAK+T,QAAUzI,EAAM9G,EAAAA,sBAAsBoqB,WAAW,GAAMtjB,EAAM9G,EAAAA,wBAA0B,GAE1Fg/D,IACFxjE,KAAK+7C,aAAezwC,EAAM9G,EAAAA,sBAC1BxE,KAAK+T,QAAU,QAA4BzI,EAAM9G,EAAAA,wBAA0B,KAIxEL,EAAAA,UAAAA,cAAP,WACE,MAAO,CAACnE,KAAK8M,GAAI9M,KAAKwhC,WAAYxhC,KAAK0lB,WAAY1lB,KAAKsiC,UAAAA,EAE5Dn+B,CAhFA,CAAAO,CAA8BD,EAAAA,eAAjBN,EAAAA,SAAAA,CAAAm/D,E,0TCRAn/D,EAAAA,cAAgB,IAChBA,EAAAA,aAAe,IAAaA,EAAAA,eAAiB,EAE7CA,EAAAA,qBAAuB,EACvBA,EAAAA,qBAAuB,EACvBA,EAAAA,sBAAwB,EACxBA,EAAAA,qBAAuB,EAOvBA,EAAAA,eAAiB,GACjBA,EAAAA,gBAAkB,EAClBA,EAAAA,eAAiB,EAOjBA,EAAAA,qBAAuB,IACvBA,EAAAA,sBAAwB,EACxBA,EAAAA,qBAAuB,EAAE,E,qjBCxBtC,cAIAK,EAAAA,SAAAA,GAWE,WACSkR,GADT,MAGEvT,EAAAA,KAAAA,OAAO,K,OAFA2C,EAAAA,KAAAA,EATDA,EAAAA,IAAc2+D,EAAOC,UACtB5+D,EAAAA,YAAAA,EAICA,EAAAA,WAAa,IAAIkI,EAAAA,aAIhB,CAeX,QA3B4BnF,EAAAA,EAAAA,GAM1BnG,OAAAA,eAAWyC,EAAAA,UAAA,KAAE,C,IAAb,WAA0B,OAAOnE,KAAK4wC,GAAAA,E,gCAGtClvC,OAAAA,eAAWyC,EAAAA,UAAA,YAAS,C,IAApB,WAAuC,OAAOnE,KAAK2jE,WAAWjxD,KAAAA,E,gCAQvDvO,EAAAA,UAAAA,QAAP,WACMnE,KAAK4jE,aAGT5jE,KAAK4jE,YAAAA,EACL5jE,KAAK0V,MAAQ,EAEb1V,KAAK2jE,WAAW9sD,OAChB1U,EAAAA,UAAM2F,QAAOjG,KAAA,QAxBAsC,EAAAA,QAAU,EA0B3BA,CA3BA,CAAAK,CAHAtC,EAAAA,KAG4Bsd,YAAfrb,EAAAA,OAAAA,CAAAs/D,E,kGCGAt/D,EAAAA,SAAoD,CAAC,EAKrDA,EAAAA,gBAAwCA,EAAAA,SAAYoc,EAYjEpc,EAAAA,SAAAA,GAAgB,CACd,IAAK,IACLM,EAAK,IACLoJ,EAAK,IACLnJ,EAAK,IACL+U,EAAK,IACLtX,EAAK,IACLtC,EAAK,IACL+N,EAAK,IACLhJ,EAAK,IACLE,EAAK,IACLqV,EAAK,IACL+F,EAAK,IACLvb,EAAK,IACLgb,EAAK,IACL9X,EAAK,IACLmF,EAAK,IACL0S,EAAK,IACLmB,EAAK,IACL3e,EAAK,IACLsC,EAAK,IACLL,EAAK,IACLU,EAAK,IACL8I,EAAK,IACLmS,EAAK,IACL9J,EAAK,IACLC,EAAK,IACL6f,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQP3xB,EAAAA,SAAAA,EAAgB,CACd,IAAK,KAOPA,EAAAA,SAAAA,OAAAA,EAOAA,EAAAA,SAAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,KACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EACAA,EAAAA,SAAAA,GAAgB,CACd,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EACAA,EAAAA,SAAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,EACAA,EAAAA,SAAAA,GAAgB,CACd,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SAAAA,KAAgB,CACd,IAAK,IACL,IAAK,IACL,IAAK,IACL,KAAM,IACN,IAAK,IACL,IAAK,IAEL+S,EAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAbS,E,aCxOhB,IAAiB2sD,EA2EAC,E,+EA3EjB,SAAiBD,GAEF1hE,EAAAA,IAAM,KAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,GAAM,KAENA,EAAAA,GAAM,KAENA,EAAAA,GAAM,KAENA,EAAAA,GAAM,KAENA,EAAAA,GAAM,KAENA,EAAAA,GAAM,KAENA,EAAAA,GAAM,IAENA,EAAAA,GAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,GAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,GAAM,IAENA,EAAAA,GAAM,IAENA,EAAAA,GAAM,IAENA,EAAAA,GAAM,IAENA,EAAAA,GAAM,IAENA,EAAAA,IAAM,GApErB,EAAiB0hE,EAAAA,EAAAA,KAAAA,EAAAA,GAAE,MA2EFC,EAAAA,EAAAA,KAAAA,EAAAA,GAAE,KAEJC,IAAM,IAENj/D,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,GAAK,IAELA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,GAAK,IAELA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,KAAO,IAEPA,EAAAA,IAAM,IAENA,EAAAA,IAAM,IAENA,EAAAA,GAAK,IAELA,EAAAA,IAAM,IAENA,EAAAA,GAAK,IAELA,EAAAA,IAAM,KAEJX,EAAAA,aAAAA,EAAAA,WAAU,KACZof,GAAQsgD,EAAGxgD,IAAG,M,+FChJ7B,IAAAve,EAAA,QAGMk/D,EAA2D,CAE/D,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KACV,GAAI,CAAC,IAAK,KAGV,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,KAAM,KACZ,IAAK,CAAC,IAAK,KACX,IAAK,CAAC,IAAM,MAGd7/D,EAAAA,sBAAAA,SACEqH,EACAy4D,EACA91C,EACAC,GAEA,IAAMnuB,EAA0B,CAC9B4R,KAAM,EAGNyZ,QAAQ,EAER9pB,SAAK,GAED0iE,GAAa14D,EAAGuf,SAAW,EAAI,IAAMvf,EAAGsf,OAAS,EAAI,IAAMtf,EAAGof,QAAU,EAAI,IAAMpf,EAAGmjB,QAAU,EAAI,GACzG,OAAQnjB,EAAG2jB,SACT,KAAK,EACY,sBAAX3jB,EAAGhK,IAEHvB,EAAOuB,IADLyiE,EACWn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAGN,wBAAX7X,EAAGhK,IAERvB,EAAOuB,IADLyiE,EACWn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAGN,yBAAX7X,EAAGhK,IAERvB,EAAOuB,IADLyiE,EACWn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAGN,wBAAX7X,EAAGhK,MAERvB,EAAOuB,IADLyiE,EACWn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,MAG1B,MACF,KAAK,EAEH,GAAI7X,EAAGuf,SAAU,CACf9qB,EAAOuB,IAAMsD,EAAAA,GAAG4sD,GAChB,KACK,IAAIlmD,EAAGsf,OAAQ,CACpB7qB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAMve,EAAAA,GAAGq/D,IACzB,KAEFlkE,CAAAA,EAAOuB,IAAMsD,EAAAA,GAAGq/D,IAChB,MACF,KAAK,EAEH,GAAI34D,EAAGuf,SAAU,CACf9qB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,KACtB,KAEFpjB,CAAAA,EAAOuB,IAAMsD,EAAAA,GAAG8sD,GAChB3xD,EAAOqrB,QAAAA,EACP,MACF,KAAK,GAEHrrB,EAAOuB,IAAMgK,EAAGsf,OAAShmB,EAAAA,GAAGue,IAAMve,EAAAA,GAAGgqB,GAAKhqB,EAAAA,GAAGgqB,GAC7C7uB,EAAOqrB,QAAAA,EACP,MACF,KAAK,GAEHrrB,EAAOuB,IAAMsD,EAAAA,GAAGue,IACZ7X,EAAGsf,SACL7qB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAMve,EAAAA,GAAGue,KAE3BpjB,EAAOqrB,QAAAA,EACP,MACF,KAAK,GAEH,GAAI9f,EAAGmjB,QACL,MAEEu1C,GACFjkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAI5CjkE,EAAOuB,MAAQsD,EAAAA,GAAGue,IAAM,UAC1BpjB,EAAOuB,IAAMsD,EAAAA,GAAGue,KAAO8K,EAAQ,IAAM,WAGvCluB,EAAOuB,IADEyiE,EACIn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,GAEH,GAAI7X,EAAGmjB,QACL,MAEEu1C,GACFjkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAI5CjkE,EAAOuB,MAAQsD,EAAAA,GAAGue,IAAM,UAC1BpjB,EAAOuB,IAAMsD,EAAAA,GAAGue,KAAO8K,EAAQ,IAAM,WAGvCluB,EAAOuB,IADEyiE,EACIn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,GAEH,GAAI7X,EAAGmjB,QACL,MAEEu1C,GACFjkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAI3C/1C,GAASluB,EAAOuB,MAAQsD,EAAAA,GAAGue,IAAM,UACpCpjB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,UAGxBpjB,EAAOuB,IADEyiE,EACIn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,GAEH,GAAI7X,EAAGmjB,QACL,MAEEu1C,GACFjkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAI3C/1C,GAASluB,EAAOuB,MAAQsD,EAAAA,GAAGue,IAAM,UACpCpjB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,UAGxBpjB,EAAOuB,IADEyiE,EACIn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,GAEE7X,EAAGuf,UAAavf,EAAGof,UAGtB3qB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,GAGDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAEnCp/D,EAAAA,GAAGue,IAAM,MAExB,MACF,KAAK,GAGDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IACvCD,EACIn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,GAGDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IACvCD,EACIn/D,EAAAA,GAAGue,IAAM,KAETve,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,GAEC7X,EAAGuf,SACL9qB,EAAO4R,KAAO,EACLrG,EAAGof,QACZ3qB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAEhDjkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,MAExB,MACF,KAAK,GAEC7X,EAAGuf,SACL9qB,EAAO4R,KAAO,EACLrG,EAAGof,QACZ3qB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAEhDjkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM,MAExB,MACF,KAAK,IAGDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAEnCp/D,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAEnCp/D,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAEnCp/D,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,OAAS6gD,EAAY,GAAK,IAEnCp/D,EAAAA,GAAGue,IAAM,KAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,KAAK,IAEDpjB,EAAOuB,IADL0iE,EACWp/D,EAAAA,GAAGue,IAAM,QAAU6gD,EAAY,GAAK,IAEpCp/D,EAAAA,GAAGue,IAAM,OAExB,MACF,QAEE,IAAI7X,EAAGof,SAAYpf,EAAGuf,UAAavf,EAAGsf,QAAWtf,EAAGmjB,QAiB7C,GAAMR,IAASC,IAAoB5iB,EAAGsf,QAAWtf,EAAGmjB,SA0BhDR,GAAU3iB,EAAGsf,QAAWtf,EAAGof,SAAYpf,EAAGuf,WAAYvf,EAAGmjB,QAIzDnjB,EAAGhK,MAAQgK,EAAGof,UAAYpf,EAAGsf,SAAWtf,EAAGmjB,SAAWnjB,EAAG2jB,SAAW,IAAwB,IAAlB3jB,EAAGhK,IAAIsE,OAE1F7F,EAAOuB,IAAMgK,EAAGhK,IACPgK,EAAGhK,KAAOgK,EAAGof,UACP,MAAXpf,EAAGhK,MACLvB,EAAOuB,IAAMsD,EAAAA,GAAGs/D,IAEH,MAAX54D,EAAGhK,MACLvB,EAAOuB,IAAMsD,EAAAA,GAAGu/D,MAXC,KAAf74D,EAAG2jB,UACLlvB,EAAO4R,KAAO,OA5BkD,CAElE,IAAMyyD,EAAaN,EAAqBx4D,EAAG2jB,SACrC3tB,EAAM8iE,MAAAA,OAAAA,EAAAA,EAAc94D,EAAGuf,SAAe,EAAJ,GACxC,GAAIvpB,EACFvB,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAM7hB,OACjB,GAAIgK,EAAG2jB,SAAW,IAAM3jB,EAAG2jB,SAAW,GAAI,CAC/C,IAAMA,EAAU3jB,EAAGof,QAAUpf,EAAG2jB,QAAU,GAAK3jB,EAAG2jB,QAAU,GACxDo1C,EAAY/0C,OAAOC,aAAaN,GAChC3jB,EAAGuf,WACLw5C,EAAYA,EAAUC,eAExBvkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAMkhD,CAAAA,KACF,SAAX/4D,EAAGhK,KAAkBgK,EAAGg0B,KAAKqP,WAAW,SAM7C01B,EAAY/4D,EAAGg0B,KAAKtwB,MAAM,EAAG,GAC5B1D,EAAGuf,WACNw5C,EAAYA,EAAUE,eAExBxkE,EAAOuB,IAAMsD,EAAAA,GAAGue,IAAMkhD,EACtBtkE,EAAOqrB,QAAAA,EAAS,MAxCd9f,EAAG2jB,SAAW,IAAM3jB,EAAG2jB,SAAW,GACpClvB,EAAOuB,IAAMguB,OAAOC,aAAajkB,EAAG2jB,QAAU,IACtB,KAAf3jB,EAAG2jB,QACZlvB,EAAOuB,IAAMsD,EAAAA,GAAGu/D,IACP74D,EAAG2jB,SAAW,IAAM3jB,EAAG2jB,SAAW,GAE3ClvB,EAAOuB,IAAMguB,OAAOC,aAAajkB,EAAG2jB,QAAU,GAAK,IAC3B,KAAf3jB,EAAG2jB,QACZlvB,EAAOuB,IAAMsD,EAAAA,GAAGq/D,IACQ,MAAf34D,EAAG2jB,QACZlvB,EAAOuB,IAAMsD,EAAAA,GAAGue,IACQ,MAAf7X,EAAG2jB,QACZlvB,EAAOuB,IAAMsD,EAAAA,GAAG4/D,GACQ,MAAfl5D,EAAG2jB,UACZlvB,EAAOuB,IAAMsD,EAAAA,GAAG6/D,IA8CxB,OAAO1kE,CAAAA,CAvWT,E,wICzBAkE,EAAAA,oBAAAA,SAAoC+8D,GAClC,OAAIA,EAAY,OACdA,GAAa,MACN1xC,OAAOC,aAAiC,OAAnByxC,GAAa,KAAgB1xC,OAAOC,aAAcyxC,EAAY,KAAS,QAE9F1xC,OAAOC,aAAayxC,EAAAA,EAQ7B/8D,EAAAA,cAAAA,SAA8B+M,EAAmBvK,EAAmBC,QAAAA,IAAnBD,IAAAA,EAAAA,QAAA,IAAmBC,IAAAA,EAAcsK,EAAKpL,QAErF,IADA,IAAI7F,EAAS,GACJ6E,EAAI6B,EAAO7B,EAAI8B,IAAO9B,EAAG,CAChC,IAAIusC,EAAYngC,EAAKpM,GACjBusC,EAAY,OAMdA,GAAa,MACbpxC,GAAUuvB,OAAOC,aAAiC,OAAnB4hB,GAAa,KAAgB7hB,OAAOC,aAAc4hB,EAAY,KAAS,QAEtGpxC,GAAUuvB,OAAOC,aAAa4hB,EAGlC,QAAOpxC,CAAAA,EAOT,0BAAAkC,IACU,KAAAyiE,SAAmB,CAkE7B,QA7DSziE,EAAAA,UAAAA,MAAP,WACEnC,KAAK4kE,SAAW,GAWXziE,EAAAA,UAAAA,OAAP,SAAc62B,EAAe15B,GAC3B,IAAMwG,EAASkzB,EAAMlzB,OAErB,IAAKA,EACH,OAAO,EAGT,IAAIwT,EAAO,EACPurD,EAAW,EAGX7kE,KAAK4kE,WAEH,QADEjL,EAAS3gC,EAAMpK,WAAWi2C,OACRlL,GAAU,MAChCr6D,EAAOga,KAAqC,MAA1BtZ,KAAK4kE,SAAW,OAAkBjL,EAAS,MAAS,OAGtEr6D,EAAOga,KAAUtZ,KAAK4kE,SACtBtlE,EAAOga,KAAUqgD,GAEnB35D,KAAK4kE,SAAW,GAGlB,IAAK,IAAI9/D,EAAI+/D,EAAU//D,EAAIgB,IAAUhB,EAAG,CACtC,IAAM06B,EAAOxG,EAAMpK,WAAW9pB,GAE9B,GAAI,OAAU06B,GAAQA,GAAQ,MAA9B,CACE,KAAM16B,GAAKgB,EAET,OADA9F,KAAK4kE,SAAWplC,EACTlmB,EAET,IAAMqgD,EACF,QADEA,EAAS3gC,EAAMpK,WAAW9pB,KACR60D,GAAU,MAChCr6D,EAAOga,KAA4B,MAAjBkmB,EAAO,OAAkBm6B,EAAS,MAAS,OAG7Dr6D,EAAOga,KAAUkmB,EACjBlgC,EAAOga,KAAUqgD,EAAAA,MAIR,QAATn6B,IAIJlgC,EAAOga,KAAUkmB,EAEnB,QAAOlmB,CAAAA,EAEXnX,CAnEA,IAAagC,EAAAA,cAAAA,EAwEb,0BAAAhC,IACS,KAAA2iE,QAAsB,IAAIrf,WAAW,EAgO9C,QA3NStjD,EAAAA,UAAAA,MAAP,WACEnC,KAAK8kE,QAAQj1B,KAAK,IAWb1tC,EAAAA,UAAAA,OAAP,SAAc62B,EAAmB15B,GAC/B,IAAMwG,EAASkzB,EAAMlzB,OAErB,IAAKA,EACH,OAAO,EAGT,IACIi/D,EACAC,EACAC,EACAC,EAJA5rD,EAAO,EAKP+3B,EAAY,EACZwzB,EAAW,EAGf,GAAI7kE,KAAK8kE,QAAQ,GAAI,CACnB,IAAIK,GAAAA,EACAlE,EAAKjhE,KAAK8kE,QAAQ,GACtB7D,GAAyB,MAAV,IAALA,GAAwB,GAAyB,MAAV,IAALA,GAAwB,GAAO,EAG3E,IAFA,IAAIv1D,EAAM,EACN05D,OAAAA,GACIA,EAA4B,GAAtBplE,KAAK8kE,UAAUp5D,KAAgBA,EAAM,GACjDu1D,IAAO,EACPA,GAAMmE,EAKR,IAFA,IAAMvzD,EAAsC,MAAV,IAAlB7R,KAAK8kE,QAAQ,IAAwB,EAAmC,MAAV,IAAlB9kE,KAAK8kE,QAAQ,IAAwB,EAAI,EAC/FO,EAAUxzD,EAAOnG,EAChBm5D,EAAWQ,GAAS,CACzB,GAAIR,GAAY/+D,EACd,OAAO,EAGT,GAAqB,MAAV,KADXs/D,EAAMpsC,EAAM6rC,OACe,CAEzBA,IACAM,GAAAA,EACA,KAGAnlE,CAAAA,KAAK8kE,QAAQp5D,KAAS05D,EACtBnE,IAAO,EACPA,GAAY,GAANmE,CAGLD,CAAAA,IAEU,IAATtzD,EACEovD,EAAK,IAEP4D,IAEAvlE,EAAOga,KAAU2nD,EAED,IAATpvD,EACLovD,EAAK,MAAWA,GAAM,OAAUA,GAAM,OAAkB,QAAPA,IAGnD3hE,EAAOga,KAAU2nD,GAGfA,EAAK,OAAYA,EAAK,UAGxB3hE,EAAOga,KAAU2nD,IAIvBjhE,KAAK8kE,QAAQj1B,KAAK,EAMpB,KAFA,IAAMy1B,EAAWx/D,EAAS,EACtBhB,EAAI+/D,EACD//D,EAAIgB,GAAQ,CAejB,SAAOhB,EAAIwgE,IACiB,KAApBP,EAAQ/rC,EAAMl0B,KACU,KAAxBkgE,EAAQhsC,EAAMl0B,EAAI,KACM,KAAxBmgE,EAAQjsC,EAAMl0B,EAAI,KACM,KAAxBogE,EAAQlsC,EAAMl0B,EAAI,MAExBxF,EAAOga,KAAUyrD,EACjBzlE,EAAOga,KAAU0rD,EACjB1lE,EAAOga,KAAU2rD,EACjB3lE,EAAOga,KAAU4rD,EACjBpgE,GAAK,EAOP,IAHAigE,EAAQ/rC,EAAMl0B,MAGF,IACVxF,EAAOga,KAAUyrD,OAGZ,GAAuB,MAAV,IAARA,GAAwB,CAClC,GAAIjgE,GAAKgB,EAEP,OADA9F,KAAK8kE,QAAQ,GAAKC,EACXzrD,EAGT,GAAuB,MAAV,KADb0rD,EAAQhsC,EAAMl0B,OACe,CAE3BA,IACA,QAGF,KADAusC,GAAqB,GAAR0zB,IAAiB,EAAa,GAARC,GACnB,IAAM,CAEpBlgE,IACA,QAEFxF,CAAAA,EAAOga,KAAU+3B,CAAAA,MAGZ,GAAuB,MAAV,IAAR0zB,GAAwB,CAClC,GAAIjgE,GAAKgB,EAEP,OADA9F,KAAK8kE,QAAQ,GAAKC,EACXzrD,EAGT,GAAuB,MAAV,KADb0rD,EAAQhsC,EAAMl0B,OACe,CAE3BA,IACA,QAEF,IAAIA,GAAKgB,EAGP,OAFA9F,KAAK8kE,QAAQ,GAAKC,EAClB/kE,KAAK8kE,QAAQ,GAAKE,EACX1rD,EAGT,GAAuB,MAAV,KADb2rD,EAAQjsC,EAAMl0B,OACe,CAE3BA,IACA,QAGF,KADAusC,GAAqB,GAAR0zB,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GAC1C,MAAW5zB,GAAa,OAAUA,GAAa,OAAyB,QAAdA,EAExE,SAEF/xC,EAAOga,KAAU+3B,CAAAA,MAGZ,GAAuB,MAAV,IAAR0zB,GAAwB,CAClC,GAAIjgE,GAAKgB,EAEP,OADA9F,KAAK8kE,QAAQ,GAAKC,EACXzrD,EAGT,GAAuB,MAAV,KADb0rD,EAAQhsC,EAAMl0B,OACe,CAE3BA,IACA,QAEF,IAAIA,GAAKgB,EAGP,OAFA9F,KAAK8kE,QAAQ,GAAKC,EAClB/kE,KAAK8kE,QAAQ,GAAKE,EACX1rD,EAGT,GAAuB,MAAV,KADb2rD,EAAQjsC,EAAMl0B,OACe,CAE3BA,IACA,QAEF,IAAIA,GAAKgB,EAIP,OAHA9F,KAAK8kE,QAAQ,GAAKC,EAClB/kE,KAAK8kE,QAAQ,GAAKE,EAClBhlE,KAAK8kE,QAAQ,GAAKG,EACX3rD,EAGT,GAAuB,MAAV,KADb4rD,EAAQlsC,EAAMl0B,OACe,CAE3BA,IACA,QAGF,KADAusC,GAAqB,EAAR0zB,IAAiB,IAAc,GAARC,IAAiB,IAAc,GAARC,IAAiB,EAAa,GAARC,GACjE,OAAY7zB,EAAY,QAEtC,SAEF/xC,EAAOga,KAAU+3B,CAAAA,CAKrB,QAAO/3B,CAAAA,EAEXnX,CAjOA,IAAagC,EAAAA,YAAAA,CAAAA,E,kFCnHb,IA0DIohE,EA1DJ,UAIMC,EAAgB,CACpB,CAAC,IAAQ,KAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,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","sources":["webpack://kube-manage-web/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://kube-manage-web/./node_modules/core-js/internals/regexp-flags.js","webpack://kube-manage-web/./node_modules/core-js/modules/es.regexp.flags.js","webpack://kube-manage-web/FitAddon/webpack/universalModuleDefinition","webpack://kube-manage-web/FitAddon/src/FitAddon.ts","webpack://kube-manage-web/FitAddon/webpack/bootstrap","webpack://kube-manage-web/FitAddon/webpack/startup","webpack://kube-manage-web/xterm/webpack/universalModuleDefinition","webpack://kube-manage-web/xterm/src/browser/AccessibilityManager.ts","webpack://kube-manage-web/xterm/src/browser/Clipboard.ts","webpack://kube-manage-web/xterm/src/browser/ColorContrastCache.ts","webpack://kube-manage-web/xterm/src/browser/ColorManager.ts","webpack://kube-manage-web/xterm/src/browser/Dom.ts","webpack://kube-manage-web/xterm/src/browser/Lifecycle.ts","webpack://kube-manage-web/xterm/src/browser/Linkifier.ts","webpack://kube-manage-web/xterm/src/browser/Linkifier2.ts","webpack://kube-manage-web/xterm/src/browser/LocalizableStrings.ts","webpack://kube-manage-web/xterm/src/browser/MouseZoneManager.ts","webpack://kube-manage-web/xterm/src/browser/RenderDebouncer.ts","webpack://kube-manage-web/xterm/src/browser/ScreenDprMonitor.ts","webpack://kube-manage-web/xterm/src/browser/Terminal.ts","webpack://kube-manage-web/xterm/src/browser/TimeBasedDebouncer.ts","webpack://kube-manage-web/xterm/src/browser/Viewport.ts","webpack://kube-manage-web/xterm/src/browser/decorations/BufferDecorationRenderer.ts","webpack://kube-manage-web/xterm/src/browser/decorations/ColorZoneStore.ts","webpack://kube-manage-web/xterm/src/browser/decorations/OverviewRulerRenderer.ts","webpack://kube-manage-web/xterm/src/browser/input/CompositionHelper.ts","webpack://kube-manage-web/xterm/src/browser/input/Mouse.ts","webpack://kube-manage-web/xterm/src/browser/input/MoveToCell.ts","webpack://kube-manage-web/xterm/src/browser/public/Terminal.ts","webpack://kube-manage-web/xterm/src/browser/renderer/BaseRenderLayer.ts","webpack://kube-manage-web/xterm/src/browser/renderer/CursorRenderLayer.ts","webpack://kube-manage-web/xterm/src/browser/renderer/CustomGlyphs.ts","webpack://kube-manage-web/xterm/src/browser/renderer/GridCache.ts","webpack://kube-manage-web/xterm/src/browser/renderer/LinkRenderLayer.ts","webpack://kube-manage-web/xterm/src/browser/renderer/Renderer.ts","webpack://kube-manage-web/xterm/src/browser/renderer/RendererUtils.ts","webpack://kube-manage-web/xterm/src/browser/renderer/SelectionRenderLayer.ts","webpack://kube-manage-web/xterm/src/browser/renderer/TextRenderLayer.ts","webpack://kube-manage-web/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://kube-manage-web/xterm/src/browser/renderer/atlas/CharAtlasCache.ts","webpack://kube-manage-web/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://kube-manage-web/xterm/src/browser/renderer/atlas/Constants.ts","webpack://kube-manage-web/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://kube-manage-web/xterm/src/browser/renderer/atlas/LRUMap.ts","webpack://kube-manage-web/xterm/src/browser/renderer/dom/DomRenderer.ts","webpack://kube-manage-web/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://kube-manage-web/xterm/src/browser/selection/SelectionModel.ts","webpack://kube-manage-web/xterm/src/browser/services/CharSizeService.ts","webpack://kube-manage-web/xterm/src/browser/services/CharacterJoinerService.ts","webpack://kube-manage-web/xterm/src/browser/services/CoreBrowserService.ts","webpack://kube-manage-web/xterm/src/browser/services/MouseService.ts","webpack://kube-manage-web/xterm/src/browser/services/RenderService.ts","webpack://kube-manage-web/xterm/src/browser/services/SelectionService.ts","webpack://kube-manage-web/xterm/src/browser/services/Services.ts","webpack://kube-manage-web/xterm/src/browser/services/SoundService.ts","webpack://kube-manage-web/xterm/src/common/CircularList.ts","webpack://kube-manage-web/xterm/src/common/Clone.ts","webpack://kube-manage-web/xterm/src/common/Color.ts","webpack://kube-manage-web/xterm/src/common/CoreTerminal.ts","webpack://kube-manage-web/xterm/src/common/EventEmitter.ts","webpack://kube-manage-web/xterm/src/common/InputHandler.ts","webpack://kube-manage-web/xterm/src/common/Lifecycle.ts","webpack://kube-manage-web/xterm/src/common/Platform.ts","webpack://kube-manage-web/xterm/src/common/SortedList.ts","webpack://kube-manage-web/xterm/src/common/TypedArrayUtils.ts","webpack://kube-manage-web/xterm/src/common/WindowsMode.ts","webpack://kube-manage-web/xterm/src/common/buffer/AttributeData.ts","webpack://kube-manage-web/xterm/src/common/buffer/Buffer.ts","webpack://kube-manage-web/xterm/src/common/buffer/BufferLine.ts","webpack://kube-manage-web/xterm/src/common/buffer/BufferRange.ts","webpack://kube-manage-web/xterm/src/common/buffer/BufferReflow.ts","webpack://kube-manage-web/xterm/src/common/buffer/BufferSet.ts","webpack://kube-manage-web/xterm/src/common/buffer/CellData.ts","webpack://kube-manage-web/xterm/src/common/buffer/Constants.ts","webpack://kube-manage-web/xterm/src/common/buffer/Marker.ts","webpack://kube-manage-web/xterm/src/common/data/Charsets.ts","webpack://kube-manage-web/xterm/src/common/data/EscapeSequences.ts","webpack://kube-manage-web/xterm/src/common/input/Keyboard.ts","webpack://kube-manage-web/xterm/src/common/input/TextDecoder.ts","webpack://kube-manage-web/xterm/src/common/input/UnicodeV6.ts","webpack://kube-manage-web/xterm/src/common/input/WriteBuffer.ts","webpack://kube-manage-web/xterm/src/common/input/XParseColor.ts","webpack://kube-manage-web/xterm/src/common/parser/Constants.ts","webpack://kube-manage-web/xterm/src/common/parser/DcsParser.ts","webpack://kube-manage-web/xterm/src/common/parser/EscapeSequenceParser.ts","webpack://kube-manage-web/xterm/src/common/parser/OscParser.ts","webpack://kube-manage-web/xterm/src/common/parser/Params.ts","webpack://kube-manage-web/xterm/src/common/public/AddonManager.ts","webpack://kube-manage-web/xterm/src/common/public/BufferApiView.ts","webpack://kube-manage-web/xterm/src/common/public/BufferLineApiView.ts","webpack://kube-manage-web/xterm/src/common/public/BufferNamespaceApi.ts","webpack://kube-manage-web/xterm/src/common/public/ParserApi.ts","webpack://kube-manage-web/xterm/src/common/public/UnicodeApi.ts","webpack://kube-manage-web/xterm/src/common/services/BufferService.ts","webpack://kube-manage-web/xterm/src/common/services/CharsetService.ts","webpack://kube-manage-web/xterm/src/common/services/CoreMouseService.ts","webpack://kube-manage-web/xterm/src/common/services/CoreService.ts","webpack://kube-manage-web/xterm/src/common/services/DecorationService.ts","webpack://kube-manage-web/xterm/src/common/services/DirtyRowService.ts","webpack://kube-manage-web/xterm/src/common/services/InstantiationService.ts","webpack://kube-manage-web/xterm/src/common/services/LogService.ts","webpack://kube-manage-web/xterm/src/common/services/OptionsService.ts","webpack://kube-manage-web/xterm/src/common/services/ServiceRegistry.ts","webpack://kube-manage-web/xterm/src/common/services/Services.ts","webpack://kube-manage-web/xterm/src/common/services/UnicodeService.ts","webpack://kube-manage-web/xterm/webpack/bootstrap","webpack://kube-manage-web/xterm/webpack/startup","webpack://kube-manage-web/./src/views/pod/Pod.vue","webpack://kube-manage-web/./src/views/pod/Pod.vue?b0b3"],"sourcesContent":["var makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es-x/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'common/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex, IColor } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionForeground: undefined,\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    const nullColor: IColor = {\n      css: '',\n      rgba: 0\n    };\n    this.colors.selectionForeground = theme.selectionForeground ? this._parseColor(theme.selectionForeground, nullColor) : undefined;\n    if (this.colors.selectionForeground === nullColor) {\n      this.colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: this.colors.ansi.slice()\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n    }\n    this.optionsService.onOptionChange(() => {\n      if (!this._overviewRulerRenderer && this.options.overviewRulerWidth && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n  }\n\n  public override dispose(): void {\n    this._container.remove();\n    this._decorationElements.clear();\n    super.dispose();\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this.refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.actualCellWidth)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.actualCellHeight}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        decoration.onDispose(() => this._removeDecoration(decoration));\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.actualCellHeight}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onOptionChange(o => {\n      if (o === 'overviewRulerWidth') {\n        this._queueRefresh(true);\n      }\n    }));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(window, 'resize', () => {\n      this._queueRefresh(true);\n    }));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  public override dispose(): void {\n    this._canvas?.remove();\n    super.dispose();\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * window.devicePixelRatio);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * window.devicePixelRatio);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * window.devicePixelRatio);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * window.devicePixelRatio);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    // TODO: Is _decorationElements needed?\n\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData, IColor } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { excludeFromContrastRatioDemands, throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _decorationService: IDecorationService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell, x, y);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n\n    // Don't try cache the glyph if it uses any decoration foreground/background override.\n    let hasOverrides = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.backgroundColorRGB || d.foregroundColorRGB) {\n        hasOverrides = true;\n        break;\n      }\n    }\n\n    const atlasDidDraw = hasOverrides ? false : this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData, x: number, y: number): IColor | undefined {\n    // Get any decoration foreground/background overrides, this must be fetched before the early\n    // exist but applied after inverse\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n    let isTop = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.options.layer !== 'top' && isTop) {\n        continue;\n      }\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba;\n      }\n      isTop = d.options.layer === 'top';\n    }\n\n    // Apply selection foreground if applicable\n    if (!isTop) {\n      if (this._colors.selectionForeground && this._isCellInSelection(x, y)) {\n        fgOverride = this._colors.selectionForeground.rgba;\n      }\n    }\n\n    if (!bgOverride && !fgOverride && (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode()))) {\n      return undefined;\n    }\n\n    if (!bgOverride && !fgOverride) {\n      // Try get from cache\n      const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n      if (adjustedColor !== undefined) {\n        return adjustedColor || undefined;\n      }\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgOverride !== undefined ? Attributes.CM_RGB : bgColorMode, bgOverride ?? bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    let result = rgba.ensureContrastRatio(bgOverride ?? bgRgba, fgOverride ?? fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      if (!fgOverride) {\n        this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n        return undefined;\n      }\n      // If it was an override and there was no contrast change, set as the result\n      result = fgOverride;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    if (!bgOverride && !fgOverride) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n    }\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      return x >= start[0] && y >= start[1] &&\n        x < end[0] && y < end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService, IDecorationService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n    // Selection foreground requires a full re-render\n    if (this._colors.selectionForeground) {\n      this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n    }\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    super.onSelectionChanged(start, end, columnSelectMode);\n\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      // Get any decoration foreground/background overrides, this must be fetched before the early\n      // exist but applied after inverse\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, this._bufferService.buffer.ydisp + y)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          nextFillStyle = d.backgroundColorRGB.css;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi.slice()\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'common/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'common/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService, IDecorationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e)));\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e)));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionOpaque.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.onSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ISelectionService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/RendererUtils';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, row)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (this._colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = this._colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._colors.selectionOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = this._colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = this._colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = this._colors.background;\n          }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer, IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRenderedViewportChange = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedViewportChange(): IEvent<{ start: number, end: number }> { return this._onRenderedViewportChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  protected _onWriteParsed = new EventEmitter<void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    const i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    let i = this._search(key, 0, this._array.length - 1);\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    let i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    if (this._getKey(this._array[mid]) > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (this._getKey(this._array[mid]) < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  private _onWriteParsed = new EventEmitter<void>();\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e.marker.line);\n\n  private _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRegistered(): IEvent<IInternalDecoration> { return this._onDecorationRegistered.event; }\n  private _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRemoved(): IEvent<IInternalDecoration> { return this._onDecorationRemoved.event; }\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration> {\n    return this._decorations.getKeyIterator(line);\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: undefined\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColorRGB, IColor } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  selectionForeground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /** Iterates over the decorations at a line (in no particular order). */\n  getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration>;\n  /** Iterates over the decorations at a cell (in no particular order). */\n  getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration>;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n","<template>\n  <div class=\"pod\">\n    <el-row>\n      <!-- 头部1 -->\n      <el-col :span=\"24\">\n        <div>\n          <el-card\n            class=\"pod-head-card\"\n            shadow=\"never\"\n            :body-style=\"{ padding: '10px' }\"\n          >\n            <el-row>\n              <el-col :span=\"6\">\n                <div>\n                  <span>命名空间: </span>\n                  <el-select\n                    v-model=\"namespaceValue\"\n                    filterable\n                    placeholder=\"请选择\"\n                  >\n                    <el-option\n                      v-for=\"(item, index) in namespaceList\"\n                      :key=\"index\"\n                      :label=\"item.metadata.name\"\n                      :value=\"item.metadata.name\"\n                    >\n                    </el-option>\n                  </el-select>\n                </div>\n              </el-col>\n              <el-col :span=\"2\" :offset=\"16\">\n                <div>\n                  <el-button\n                    style=\"border-radius: 2px\"\n                    icon=\"Refresh\"\n                    plain\n                    @click=\"getPods()\"\n                    >刷新</el-button\n                  >\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <!-- 头部2 -->\n      <el-col :span=\"24\">\n        <div>\n          <el-card\n            class=\"pod-head-card\"\n            shadow=\"never\"\n            :body-style=\"{ padding: '10px' }\"\n          >\n            <el-row>\n              <el-col :span=\"2\">\n                <div>\n                  <el-button\n                    disabled\n                    style=\"border-radius: 2px\"\n                    icon=\"Edit\"\n                    type=\"primary\"\n                    >创建</el-button\n                  >\n                </div>\n              </el-col>\n              <el-col :span=\"6\">\n                <div>\n                  <el-input\n                    class=\"pod-head-search\"\n                    clearable\n                    placeholder=\"请输入\"\n                    v-model=\"searchInput\"\n                  ></el-input>\n                  <el-button\n                    style=\"border-radius: 2px\"\n                    icon=\"Search\"\n                    type=\"primary\"\n                    plain\n                    @click=\"getPods()\"\n                    >搜索</el-button\n                  >\n                </div>\n              </el-col>\n            </el-row>\n          </el-card>\n        </div>\n      </el-col>\n      <!-- 数据表格 -->\n      <el-col :span=\"24\">\n        <div>\n          <el-card\n            class=\"pod-body-card\"\n            shadow=\"never\"\n            :body-style=\"{ padding: '5px' }\"\n          >\n            <!-- 数据表格 -->\n            <!-- row-key 用来定义行数据的key，结合expand-row-keys使用，往expandKeys中增加key来展开行 -->\n            <!-- expand-row-keys 展开的行的key数组 -->\n            <!-- expand-change 展开触发时，调用这个方法 -->\n            <el-table\n              style=\"width: 100%; font-size: 12px; margin-bottom: 10px\"\n              :data=\"podList\"\n              v-loading=\"appLoading\"\n              :row-key=\"getRowKeys\"\n              :expand-row-keys=\"expandKeys\"\n              @expand-change=\"expandChange\"\n            >\n              <el-table-column width=\"10\"></el-table-column>\n              <!-- 展开 -->\n              <el-table-column type=\"expand\">\n                <!-- 插槽，里面是展开的内容,props标识展开的行的数据 -->\n                <template #default=\"props\">\n                  <el-tabs v-model=\"activeName\" type=\"card\">\n                    <!-- tab容器标签页 -->\n                    <el-tab-pane label=\"容器\" name=\"container\">\n                      <el-card\n                        shadow=\"never\"\n                        style=\"border-radius: 1px\"\n                        :body-style=\"{ padding: '5px' }\"\n                      >\n                        <!-- 嵌套数据表格 -->\n                        <el-table\n                          style=\"width: 100%; font-size: 12px\"\n                          :data=\"props.row.spec.containers\"\n                        >\n                          <el-table-column\n                            align=\"left\"\n                            prop=\"name\"\n                            label=\"容器名\"\n                          ></el-table-column>\n                          <el-table-column\n                            align=\"left\"\n                            prop=\"image\"\n                            label=\"镜像\"\n                          ></el-table-column>\n                          <el-table-column align=\"center\" label=\"Pod IP\">\n                            <span>{{ props.row.status.podIP }}</span>\n                          </el-table-column>\n                          <el-table-column\n                            align=\"center\"\n                            prop=\"args\"\n                            label=\"启动命令\"\n                          ></el-table-column>\n                          <el-table-column align=\"center\" label=\"环境变量\">\n                            <template v-slot=\"scope\">\n                              <!-- 气泡弹出框，内容是所有的环境变量 -->\n                              <el-popover\n                                :width=\"500\"\n                                placement=\"left\"\n                                trigger=\"hover\"\n                              >\n                                <el-table\n                                  style=\"width: 100%; font-size: 12px\"\n                                  size=\"mini\"\n                                  :show-header=\"false\"\n                                  :data=\"scope.row.env\"\n                                >\n                                  <el-table-column\n                                    property=\"name\"\n                                    label=\"名称\"\n                                  ></el-table-column>\n                                  <el-table-column\n                                    property=\"value\"\n                                    label=\"值\"\n                                  ></el-table-column>\n                                </el-table>\n                                <template #reference>\n                                  <el-button size=\"small\">此处查看</el-button>\n                                </template>\n                              </el-popover>\n                            </template>\n                          </el-table-column>\n                        </el-table>\n                      </el-card>\n                    </el-tab-pane>\n                    <!-- tab日志标签页 -->\n                    <el-tab-pane label=\"日志\" name=\"log\">\n                      <el-card\n                        shadow=\"never\"\n                        style=\"border-radius: 1px\"\n                        :body-style=\"{ padding: '5px' }\"\n                      >\n                        <el-row :gutter=\"10\">\n                          <el-col :span=\"3\">\n                            <!-- 容器选择框 -->\n                            <el-select\n                              size=\"small\"\n                              v-model=\"containerValue\"\n                              placeholder=\"请选择\"\n                            >\n                              <el-option\n                                v-for=\"item in containerList\"\n                                :key=\"item\"\n                                :value=\"item\"\n                              >\n                              </el-option>\n                            </el-select>\n                          </el-col>\n                          <el-col :span=\"2\">\n                            <!-- 查看日志按钮 -->\n                            <el-button\n                              style=\"border-radius: 2px\"\n                              size=\"small\"\n                              type=\"primary\"\n                              @click=\"getPodLog(props.row.metadata.name)\"\n                              >查看</el-button\n                            >\n                          </el-col>\n                          <el-col :span=\"24\" style=\"margin-top: 5px\">\n                            <!-- 显示日志内容 -->\n                            <el-card\n                              shadow=\"never\"\n                              class=\"pod-body-log-card\"\n                              :body-style=\"{ padding: '5px' }\"\n                            >\n                              <span class=\"pod-body-log-span\">{{\n                                logContent\n                              }}</span>\n                            </el-card>\n                          </el-col>\n                        </el-row>\n                      </el-card>\n                    </el-tab-pane>\n                    <!-- tab终端标签页 -->\n                    <el-tab-pane label=\"终端\" name=\"shell\">\n                      <el-card\n                        shadow=\"never\"\n                        style=\"border-radius: 1px\"\n                        :body-style=\"{ padding: '5px' }\"\n                      >\n                        <el-row :gutter=\"10\">\n                          <el-col :span=\"3\">\n                            <!-- 容器选择框 -->\n                            <el-select\n                              size=\"small\"\n                              v-model=\"containerValue\"\n                              placeholder=\"请选择\"\n                            >\n                              <el-option\n                                v-for=\"item in containerList\"\n                                :key=\"item\"\n                                :value=\"item\"\n                              >\n                              </el-option>\n                            </el-select>\n                          </el-col>\n                          <el-col :span=\"1\">\n                            <!-- 连接按钮 -->\n                            <el-button\n                              style=\"border-radius: 2px\"\n                              size=\"small\"\n                              type=\"primary\"\n                              @click=\"initSocket(props.row)\"\n                              >连接</el-button\n                            >\n                          </el-col>\n                          <el-col :span=\"1\">\n                            <!-- 关闭连接按钮 -->\n                            <el-button\n                              style=\"border-radius: 2px\"\n                              size=\"small\"\n                              type=\"danger\"\n                              @click=\"closeSocket()\"\n                              >关闭</el-button\n                            >\n                          </el-col>\n                          <el-col :span=\"24\" style=\"margin-top: 5px\">\n                            <el-card\n                              shadow=\"never\"\n                              class=\"pod-body-shell-card\"\n                              :body-style=\"{ padding: '5px' }\"\n                            >\n                              <!-- xterm虚拟终端 -->\n                              <div id=\"xterm\"></div>\n                            </el-card>\n                          </el-col>\n                        </el-row>\n                      </el-card>\n                    </el-tab-pane>\n                  </el-tabs>\n                </template>\n              </el-table-column>\n              <el-table-column align=\"left\" label=\"Pod名\">\n                <template v-slot=\"scope\">\n                  <!-- 三元运算：expandMap[scope.row.metadata.name]为1则\n                  触发关闭（expandedRows为空数组），为0则触发展开expandedRows有值 -->\n                  <a\n                    class=\"pod-body-podname\"\n                    @click=\"\n                      expandMap[scope.row.metadata.name]\n                        ? expandChange(scope.row, [])\n                        : expandChange(scope.row, [scope.row])\n                    \"\n                    >{{ scope.row.metadata.name }}</a\n                  >\n                </template>\n              </el-table-column>\n              <el-table-column align=\"center\" min-width=\"150\" label=\"节点\">\n                <template v-slot=\"scope\">\n                  <el-tag\n                    v-if=\"scope.row.spec.nodeName !== undefined\"\n                    type=\"warning\"\n                    >{{ scope.row.spec.nodeName }}</el-tag\n                  >\n                </template>\n              </el-table-column>\n              <el-table-column align=\"center\" label=\"状态\">\n                <template v-slot=\"scope\">\n                  <div\n                    :class=\"{\n                      'success-dot': scope.row.status.phase == 'Running',\n                      'warning-dot': scope.row.status.phase == 'Pending',\n                      'error-dot':\n                        scope.row.status.phase != 'Running' &&\n                        scope.row.status.phase != 'Pending',\n                    }\"\n                  ></div>\n                  <span\n                    :class=\"{\n                      'success-status': scope.row.status.phase == 'Running',\n                      'warning-status': scope.row.status.phase == 'Pending',\n                      'error-status':\n                        scope.row.status.phase != 'Running' &&\n                        scope.row.status.phase != 'Pending',\n                    }\"\n                    >{{ scope.row.status.phase }}\n                  </span>\n                </template>\n              </el-table-column>\n              <el-table-column align=\"center\" label=\"重启数\">\n                <template v-slot=\"scope\">\n                  <span>{{ restartTotal(scope) }} </span>\n                </template>\n              </el-table-column>\n              <el-table-column align=\"center\" min-width=\"100\" label=\"创建时间\">\n                <template v-slot=\"scope\">\n                  <el-tag type=\"info\"\n                    >{{ timeTrans(scope.row.metadata.creationTimestamp) }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column align=\"center\" label=\"操作\" width=\"200\">\n                <template v-slot=\"scope\">\n                  <el-button\n                    size=\"small\"\n                    style=\"border-radius: 2px\"\n                    icon=\"Edit\"\n                    type=\"primary\"\n                    plain\n                    @click=\"getPodDetail(scope)\"\n                    >YAML</el-button\n                  >\n                  <el-button\n                    size=\"small\"\n                    style=\"border-radius: 2px\"\n                    icon=\"Delete\"\n                    type=\"danger\"\n                    @click=\"handleConfirm(scope, '删除', delPod)\"\n                    >删除</el-button\n                  >\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-pagination\n              class=\"pod-body-pagination\"\n              background\n              @size-change=\"handleSizeChange\"\n              @current-change=\"handleCurrentChange\"\n              :current-page=\"currentPage\"\n              :page-sizes=\"pagesizeList\"\n              :page-size=\"pagesize\"\n              layout=\"total, sizes, prev, pager, next, jumper\"\n              :total=\"podTotal\"\n            >\n            </el-pagination>\n          </el-card>\n        </div>\n      </el-col>\n    </el-row>\n    <!-- 展示YAML信息的弹框 -->\n    <el-dialog title=\"YAML信息\" v-model=\"yamlDialog\" width=\"45%\" top=\"5%\">\n      <codemirror\n        :value=\"contentYaml\"\n        border\n        :options=\"cmOptions\"\n        height=\"500\"\n        style=\"font-size: 14px\"\n        @change=\"onChange\"\n      ></codemirror>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"yamlDialog = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"updatePod()\">更 新</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport common from \"../common/Config\";\nimport { getNamespecelist } from \"@/api/namespace\";\n//引入xterm终端依赖\nimport { Terminal } from \"xterm\";\nimport { FitAddon } from \"xterm-addon-fit\";\nimport \"xterm/css/xterm.css\";\nimport \"xterm/lib/xterm.js\";\nimport yaml2obj from \"js-yaml\";\nimport json2yaml from \"json2yaml\";\nimport {\n  DeletePod,\n  GetPodContainer,\n  GetPodDetail,\n  getPodList,\n  GetPodLog,\n  UpdatePod,\n} from \"@/api/pod\";\nexport default {\n  data() {\n    return {\n      //编辑器配置\n      cmOptions: common.cmOptions,\n      contentYaml: \"\",\n      //分页\n      currentPage: 1,\n      pagesize: 10,\n      pagesizeList: [10, 20, 30],\n      //\n      searchInput: \"\",\n      namespaceValue: \"default\",\n      namespaceList: [],\n      namespaceListUrl: common.k8sNamespaceList,\n      appLoading: false,\n      podList: [],\n      podTotal: 0,\n      getPodsData: {\n        url: common.k8sPodList,\n        params: {\n          filter_name: \"\",\n          namespace: \"\",\n          page: \"\",\n          limit: \"\",\n        },\n      },\n      //详情\n      podDetail: {},\n      getPodDetailData: {\n        url: common.k8sPodDetail,\n        params: {\n          pod_name: \"\",\n          namespace: \"\",\n        },\n      },\n      //yaml更新\n      yamlDialog: false,\n      updatePodData: {\n        url: common.k8sPodUpdate,\n        params: {\n          namespace: \"\",\n          content: \"\",\n        },\n      },\n      //删除\n      delPodData: {\n        url: common.k8sPodDel,\n        params: {\n          pod_name: \"\",\n          namespace: \"\",\n        },\n      },\n      //expand扩展\n      activeName: \"container\",\n      expandKeys: [],\n      expandMap: {},\n      //日志\n      containerList: {},\n      containerValue: \"\",\n      getPodContainerData: {\n        url: common.k8sPodContainer,\n        params: {\n          pod_name: \"\",\n          namespace: \"\",\n        },\n      },\n      logContent: \"\",\n      getPodLogData: {\n        url: common.k8sPodLog,\n        params: {\n          container_name: \"\",\n          pod_name: \"\",\n          namespace: \"\",\n        },\n      },\n      //terminal\n      term: null,\n      socket: null,\n    };\n  },\n  methods: {\n    transYaml(content) {\n      return json2yaml.stringify(content);\n    },\n    transObj(content) {\n      return yaml2obj.load(content);\n    },\n    onChange(val) {\n      this.contentYaml = val;\n    },\n    handleSizeChange(size) {\n      this.pagesize = size;\n      this.getPods();\n    },\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getPods();\n    },\n    handleClose(done) {\n      this.$confirm(\"确认关闭？\")\n        .then(() => {\n          done();\n        })\n        .catch(() => {});\n    },\n    ellipsis(value) {\n      return value.length > 15 ? value.substring(0, 15) + \"...\" : value;\n    },\n    timeTrans(timestamp) {\n      let date = new Date(new Date(timestamp).getTime() + 8 * 3600 * 1000);\n      date = date.toJSON();\n      date = date.substring(0, 19).replace(\"T\", \" \");\n      return date;\n    },\n    restartTotal(e) {\n      let index,\n        sum = 0;\n      let containerStatuses = e.row.status.containerStatuses;\n      for (index in containerStatuses) {\n        sum = sum + containerStatuses[index].restartCount;\n      }\n      return sum;\n    },\n    getNamespaces() {\n      getNamespecelist(this.namespaceListUrl)\n        .then((res) => {\n          this.namespaceList = res.data.items;\n        })\n        .catch((res) => {\n          this.$message.error({\n            message: res.msg,\n          });\n        });\n    },\n    getPods() {\n      this.appLoading = true;\n      this.getPodsData.params.filter_name = this.searchInput;\n      this.getPodsData.params.namespace = this.namespaceValue;\n      this.getPodsData.params.page = this.currentPage;\n      this.getPodsData.params.limit = this.pagesize;\n      getPodList(this.getPodsData.params)\n        .then((res) => {\n          this.podList = res.data.items;\n          this.podTotal = res.data.total;\n        })\n        .catch((res) => {\n          this.$message.error({\n            message: res.msg,\n          });\n        });\n      this.appLoading = false;\n    },\n    getPodDetail(e) {\n      this.getPodDetailData.params.pod_name = e.row.metadata.name;\n      this.getPodDetailData.params.namespace = this.namespaceValue;\n      GetPodDetail(this.getPodDetailData.params)\n        .then((res) => {\n          this.podDetail = res.data;\n          this.contentYaml = this.transYaml(this.podDetail);\n          this.yamlDialog = true;\n        })\n        .catch((res) => {\n          this.$message.error({\n            message: res.msg,\n          });\n        });\n    },\n    updatePod() {\n      let content = JSON.stringify(this.transObj(this.contentYaml));\n      this.updatePodData.params.namespace = this.namespaceValue;\n      this.updatePodData.params.content = content;\n      UpdatePod(this.updatePodData.params)\n        .then((res) => {\n          this.$message.success({\n            message: res.msg,\n          });\n        })\n        .catch((res) => {\n          this.$message.error({\n            message: res.msg,\n          });\n        });\n      this.yamlDialog = false;\n    },\n    delPod(e) {\n      this.delPodData.params.pod_name = e.row.metadata.name;\n      this.delPodData.params.namespace = this.namespaceValue;\n      DeletePod(this.delPodData.params)\n        .then((res) => {\n          this.getPods();\n          this.$message.success({\n            message: res.msg,\n          });\n        })\n        .catch((res) => {\n          this.$message.error({\n            message: res.msg,\n          });\n        });\n    },\n    handleConfirm(obj, operateName, fn) {\n      this.confirmContent = \"确认继续 \" + operateName + \" 操作吗？\";\n      this.$confirm(this.confirmContent, \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n      })\n        .then(() => {\n          fn(obj);\n        })\n        .catch(() => {\n          this.$message.info({\n            message: \"已取消操作\",\n          });\n        });\n    },\n    getRowKeys(row) {\n      return row.metadata.name;\n    },\n    //row，展开的当前行的数据\n    //expandedRows，展开的所有行的数据组成的数组，但是这里用法是只会有一行，也就是数组长度永远为1\n    expandChange(row, expandedRows) {\n      //初始化变量\n      //清空expandKeys，代表关闭所有展开的行\n      this.expandKeys = [];\n      //清空日志内容\n      this.logContent = \"\";\n      //清空containervalue，展开时不显示上次的值\n      this.containerValue = \"\";\n      //将tab标签页顶部页面调成容器\n      this.activeName = \"container\";\n      //expandedRows.length == 1表示展开，expandedRows.length == 0 表示关闭\n      if (expandedRows.length > 0) {\n        //expandMap key表示展开过的行的key，值为1表示展开标记，值为0表示关闭标记\n        //expandMap用于数据表格点击name的展开，用于判断这一行是展开还是关闭的行为\n        this.expandMap[row.metadata.name] = 1;\n        //将expandMap除了row.metadata.name，其他key的值都置为0\n        this.setExpandMap(row.metadata.name);\n        //这里才是真正的展开，将row.metadata.name添加到expandKeys数组中展开，然后执行方法获取container\n        row\n          ? (this.expandKeys.push(row.metadata.name), this.getPodContainer(row))\n          : \"\";\n      } else {\n        //关闭标记\n        this.expandMap[row.metadata.name] = 0;\n      }\n    },\n    //匹配expandMap中podName，不相等的全都置为0，意为除了podName这行，其他全都标记关闭\n    setExpandMap(podName) {\n      let key;\n      for (key in this.expandMap) {\n        key !== podName ? (this.expandMap[key] = 0) : \"\";\n      }\n    },\n    getPodContainer(row) {\n      this.getPodContainerData.params.pod_name = row.metadata.name;\n      this.getPodContainerData.params.namespace = this.namespaceValue;\n      GetPodContainer(this.getPodContainerData.params)\n        .then((res) => {\n          this.containerList = res.data;\n          this.containerValue = this.containerList[0];\n        })\n        .catch((res) => {\n          this.$message.error({\n            message: res.msg,\n          });\n        });\n    },\n    getPodLog(podName) {\n      this.getPodLogData.params.pod_name = podName;\n      this.getPodLogData.params.container_name = this.containerValue;\n      this.getPodLogData.params.namespace = this.namespaceValue;\n      GetPodLog(this.getPodLogData.params)\n        .then((res) => {\n          this.logContent = res.data;\n        })\n        .catch((res) => {\n          this.$message.error({\n            message: res.msg,\n          });\n        });\n    },\n    initTerm() {\n      //初始化xterm实例\n      this.term = new Terminal({\n        rendererType: \"canvas\", //渲染类型\n        rows: 30, //行数\n        cols: 110,\n        convertEol: false, //启用时，光标将设置为下一行的开头\n        scrollback: 10, //终端中的回滚量\n        disableStdin: false, //是否应禁用输入\n        cursorStyle: \"underline\", //光标样式\n        cursorBlink: true, //光标闪烁\n        theme: {\n          foreground: \"white\", //字体\n          background: \"#060101\", //背景色\n          cursor: \"help\", //设置光标\n        },\n      });\n      //绑定dom\n      this.term.open(document.getElementById(\"xterm\"));\n      //终端适应父元素大小\n      const fitAddon = new FitAddon();\n      this.term.loadAddon(fitAddon);\n      fitAddon.fit();\n      //获取终端的焦点\n      this.term.focus();\n      let _this = this; //一定要重新定义一个this，不然this指向会出问题\n      //onData方法用于定义输入的动作\n      this.term.onData(function (key) {\n        // 这里key值是输入的值，数据格式就是后端定义的 {\"operation\":\"stdin\",\"data\":\"ls\"}\n        let msgOrder = {\n          operation: \"stdin\",\n          data: key,\n        };\n        //发送数据\n        _this.socket.send(JSON.stringify(msgOrder));\n      });\n      //发送resize请求\n      let msgOrder2 = {\n        operation: \"resize\",\n        cols: this.term.cols,\n        rows: this.term.rows,\n      };\n      this.socket.send(JSON.stringify(msgOrder2));\n    },\n    //初始化websocket\n    initSocket(row) {\n      //定义websocket连接地址\n      let terminalWsUrl =\n        common.k8sTerminalWs +\n        \"?pod_name=\" +\n        row.metadata.name +\n        \"&container_name=\" +\n        this.containerValue +\n        \"&namespace=\" +\n        this.namespaceValue;\n      //实例化\n      this.socket = new WebSocket(terminalWsUrl);\n      //关闭连接时的方法\n      this.socketOnClose();\n      //建立连接时的方法\n      this.socketOnOpen();\n      //接收消息的方法\n      this.socketOnMessage();\n      //报错时的方法\n      this.socketOnError();\n    },\n    socketOnOpen() {\n      this.socket.onopen = () => {\n        //简历连接成功后，初始化虚拟终端\n        this.initTerm();\n      };\n    },\n    socketOnMessage() {\n      this.socket.onmessage = (msg) => {\n        //接收到消息后将字符串转为对象，输出data内容\n        let content = JSON.parse(msg.data);\n        this.term.write(content.data);\n      };\n    },\n    socketOnClose() {\n      this.socket.onclose = () => {\n        //关闭连接后打印在终端里\n        this.term.write(\"链接已关闭\");\n      };\n    },\n    socketOnError() {\n      this.socket.onerror = () => {\n        console.log(\"socket 链接失败\");\n      };\n    },\n    //关闭连接\n    closeSocket() {\n      //若没有实例化，则不需要关闭\n      if (this.socket === null) {\n        return;\n      }\n      this.term.write(\"链接关闭中。。。\");\n      this.socket.close();\n    },\n  },\n  watch: {\n    namespaceValue: {\n      handler() {\n        localStorage.setItem(\"namespace\", this.namespaceValue);\n        this.currentPage = 1;\n        this.getPods();\n      },\n    },\n    //若tab标签页切到日志，则重新加载日志内容\n    activeName: {\n      handler() {\n        if (this.activeName == \"log\") {\n          this.expandKeys.length == 1 ? this.getPodLog(this.expandKeys[0]) : \"\";\n        }\n      },\n    },\n  },\n  beforeMount() {\n    if (\n      localStorage.getItem(\"namespace\") !== undefined &&\n      localStorage.getItem(\"namespace\") !== null\n    ) {\n      this.namespaceValue = localStorage.getItem(\"namespace\");\n    }\n    this.getNamespaces();\n    this.getPods();\n  },\n  beforeUnmount() {\n    //若websocket连接没有关闭，则在改生命周期关闭\n    if (this.socket !== null) {\n      this.socket.close();\n    }\n  },\n};\n</script>\n\n<style scoped>\n.pod-head-card,\n.pod-body-card {\n  border-radius: 1px;\n  margin-bottom: 5px;\n}\n.pod-head-search {\n  width: 160px;\n  margin-right: 10px;\n}\n.pod-body-podname {\n  color: #4795ee;\n}\n.pod-body-podname:hover {\n  color: rgb(84, 138, 238);\n  cursor: pointer;\n  font-weight: bold;\n}\n/* pod状态栏圆点的css实现 */\n.success-dot {\n  display: inline-block;\n  width: 7px;\n  height: 7px;\n  background: rgb(27, 202, 21);\n  border-radius: 50%;\n  border: 1px solid rgb(27, 202, 21);\n  margin-right: 10px;\n}\n.warning-dot {\n  display: inline-block;\n  width: 7px;\n  height: 7px;\n  background: rgb(233, 200, 16);\n  border-radius: 50%;\n  border: 1px solid rgb(233, 200, 16);\n  margin-right: 10px;\n}\n.error-dot {\n  display: inline-block;\n  width: 7px;\n  height: 7px;\n  background: rgb(226, 23, 23);\n  border-radius: 50%;\n  border: 1px solid rgb(226, 23, 23);\n  margin-right: 10px;\n}\n.success-status {\n  color: rgb(27, 202, 21);\n}\n.warning-status {\n  color: rgb(233, 200, 16);\n}\n.error-status {\n  color: rgb(226, 23, 23);\n}\n/deep/ .el-tabs__item {\n  font-size: 12px;\n}\n/deep/ .el-tabs__header {\n  margin-bottom: 8px;\n}\n.pod-body-log-card,\n.pod-body-shell-card {\n  border-radius: 1px;\n  height: 600px;\n  overflow: auto;\n  background-color: #060101;\n}\n.pod-body-log-card {\n  color: aliceblue;\n}\n.pod-body-log-span {\n  white-space: pre;\n}\n</style>\n","import { render } from \"./Pod.vue?vue&type=template&id=939e6660&scoped=true\"\nimport script from \"./Pod.vue?vue&type=script&lang=js\"\nexport * from \"./Pod.vue?vue&type=script&lang=js\"\n\nimport \"./Pod.vue?vue&type=style&index=0&id=939e6660&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/allen/k8s-platform-fe/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-939e6660\"]])\n\nexport default __exports__"],"names":["makeBuiltIn","defineProperty","module","exports","target","name","descriptor","get","getter","set","setter","f","anObject","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","pairs","getOwnPropertyDescriptor","call","configurable","root","factory","self","r","e","terminal","_terminal","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","t","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","s","a","c","l","h","u","i","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","bind","_refreshRows","_liveRegion","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","_onChar","char","onLineFeed","onA11yTab","_onTab","spaceCount","onKey","_onKey","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","setListener","addDisposableDomListener","n","dispose","removeElementFromParent","position","boundaryElement","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","_liveRegionLineCount","MAX_ROWS_TO_READ","_charsToConsume","_charsToAnnounce","textContent","Strings","tooMuchOutput","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","style","height","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","_rgba","bg","fg","undefined","o","DEFAULT_FOREGROUND","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","css","rgba","freeze","colors","v","g","b","toCss","toRgba","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","blend","selectionForeground","ansi","slice","contrastCache","_updateRestoreColors","theme","_parseColor","selection","nullColor","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","Number","component","alpha","round","ColorManager","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","mouseZoneManager","_element","_mouseZoneManager","min","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","ceil","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","matcherId","rowIndex","match","rex","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","clickCallback","hoverCallback","_","getDisposeArrayDisposable","_linkCacheDisposables","_currentLink","linkProvider","_linkProviders","providerIndex","mouseService","renderService","_mouseService","_isMouseOut","_clearCurrentLink","_onMouseMove","_handleMouseDown","_handleMouseUp","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_activeLine","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","size","_removeIntersectingLinks","entries","d","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","_screenElement","_selectionService","_optionsService","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_zones","_activate","_currentZone","_areZonesActive","_lastHoverCoords","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_initialSelectionLength","_getSelectionLength","currentSelectionLength","MouseZoneManager","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","callback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","_runRefreshCallbacks","RenderDebouncer","devicePixelRatio","listener","_listener","clearListener","_outerListener","_currentDevicePixelRatio","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Disposable","ScreenDprMonitor","p","m","S","C","w","L","E","R","k","M","A","D","T","B","P","I","H","F","W","q","Browser","_setup","linkifier","_instantiationService","createInstance","linkifier2","_decorationService","setService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","_onCursorMove","onTitleChange","_onTitleChange","_onA11yCharEmitter","_onA11yTabEmitter","_afterResize","_onRender","_onSelectionChange","_onBell","_onFocus","_onBlur","_colorManager","req","acc","ident","channels","toColorRGB","ESC","toRgbString","ST","apply","color","restoreColor","setColors","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","sendFocus","updateCursorStyle","_showCursor","blur","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","promptLabel","_onTextAreaFocus","_onTextAreaBlur","coreBrowserService","_theme","onOptionChange","onOptionsChange","setTheme","_characterJoinerService","renderer","_compositionView","_soundService","amount","onRequestSyncScrollBar","_syncTextArea","onFocus","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","attachToDom","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","overviewRulerWidth","_overviewRulerRenderer","_initGlobal","bindMouse","rendererType","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","isCursorInitialized","disp","customKeyEventHandler","registerLinkMatcher","deregisterLinkMatcher","registerLinkProvider","joinerId","deregister","markers","cursorYOffset","normal","addMarker","decorationOptions","registerDecoration","column","setSelection","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","_keyDownHandled","_keyDownSeen","shouldIgnoreComposition","browser","isMac","macOptionIsMeta","keydown","scrollToBottom","_unprocessedDeadKey","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","_keyPressHandled","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearAllMarkers","getBlankLine","clearTextureAtlas","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","bellStyle","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","immediate","_refreshAnimationFrame","_currentRowHeight","_currentScaledCellHeight","_lastRecordedViewportHeight","offsetHeight","newBufferHeight","_lastRecordedBufferLength","_lastRecordedBufferHeight","scrollTop","_ignoreNextScrollEvent","_refresh","_lastScrollTop","offsetParent","diff","scrollPosFromTop","cancelable","_getPixelsScrolled","_bubbleScroll","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","_wheelPartialScroll","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","_lastTouchY","touches","Viewport","_container","_queueRefresh","_dimensionsChanged","_altBufferIsActive","onDecorationRegistered","onDecorationRemoved","_removeDecoration","decoration","_decorationElements","addRefreshCallback","refreshDecorations","_renderDecoration","_refreshStyle","_refreshXPosition","marker","display","onRenderEmitter","onDispose","_createElement","anchor","right","delete","BufferDecorationRenderer","_zonePool","_zonePoolIndex","_linePadding","full","center","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","padding","ColorZoneStore","drawHeight","drawWidth","drawX","_canvas","_refreshCanvasDimensions","insertBefore","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_lastKnownBufferLength","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","outerWidth","innerWidth","pixelsPerLine","nonFullHeight","_colorZoneStore","setPadding","_width","_refreshDrawConstants","_shouldUpdateDimensions","clearRect","addDecoration","lineWidth","zones","_renderColorZone","_shouldUpdateAnchor","updateCanvasDimensions","updateAnchor","_refreshDecorations","OverviewRulerRenderer","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","CompositionHelper","getCoordsRelativeToElement","rect","leftPadding","topPadding","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","_publicOptions","propName","_checkReadonlyOptions","desc","includes","allowProposedApi","onBell","onBinary","onData","onWriteParsed","_checkProposedApi","_parser","_buffer","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","attachCustomKeyEventHandler","registerCharacterJoiner","deregisterCharacterJoiner","_verifyPositiveIntegers","registerMarker","getSelection","getSelectionPosition","pageCount","scrollPages","scrollToTop","scrollToLine","getOption","setOption","addon","loadAddon","Infinity","isNaN","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_columnSelectMode","_currentGlyphIdentifier","chars","code","bold","dim","italic","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","_selectionStart","_selectionEnd","colorSet","_refreshCharAtlas","oldCanvas","cloneNode","replaceChild","onGridChanged","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","cellOffset","strokeRect","cell","font","_getFont","textBaseline","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","getBgColor","isFgDefault","getFgColor","drawBoldTextInBrightColors","isBold","getCode","isDim","isItalic","hasOverrides","getDecorationsAtCell","backgroundColorRGB","foregroundColorRGB","draw","fgOverride","save","opaque","join","globalAlpha","restore","beginPath","clip","fontWeightBold","fontWeight","bgOverride","isTop","layer","_isCellInSelection","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","getColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","bgRgba","_resolveBackgroundRgba","fgRgba","_resolveForegroundRgba","ensureContrastRatio","setColor","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","decorationService","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","block","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","onOptionsChanged","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","_cell","cursorStyle","_renderBlurCursor","isCursorVisible","_clearCells","_fillLeftLineAtCell","cursorWidth","_fillCells","_fillCharTrueColor","_fillBottomLineAtCells","strokeStyle","_strokeRectAtCell","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","patternCharacterDefinitions","xp","yp","U","N","K","G","V","X","Z","Y","J","$","Q","ee","te","re","ie","ne","oe","se","ae","ce","le","he","ue","fe","_e","de","pe","ve","ye","ge","me","be","Se","Ce","we","Le","Ee","xe","Re","ke","Me","Ae","Oe","De","Te","Be","Pe","Ie","He","je","Fe","We","Ue","qe","Ne","ze","Ke","Ge","Ve","Xe","Ze","Ye","Je","$e","Qe","et","tt","rt","it","nt","ot","st","at","ct","lt","ht","ut","ft","_t","dt","pt","vt","yt","gt","mt","bt","St","Ct","horizontalPadding","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","parseFloat","putImageData","createPattern","drawPatternChar","boxDrawingDefinition","instructions","actualInstructions","instruction","svgToCanvasInstructionMap","args","translateArgs","stroke","closePath","drawBoxDrawingChar","powerlineDefinition","fill","drawPowerlineChar","clamp","bezierCurveTo","lineTo","moveTo","cache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_renderLayers","_id","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","_runOperation","operation","letterSpacing","Renderer","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","SelectionRenderLayer","terminalFont","_characterWidth","_characterFont","_characterOverlapCache","firstRow","lastRow","joinedRanges","getJoinedCharacters","_workCell","isJoined","lastCharX","translateToString","_isOverlapping","getCodePoint","prevFillStyle","_forEachCell","nextFillStyle","isBgPalette","isInvisible","_drawChars","isUnderline","isStrikethrough","_fillMiddleLineAtCells","beginFrame","_drawBackground","_drawForeground","_setTransparency","hasOwnProperty","overlaps","measureText","TextRenderLayer","_didWarmUp","_doWarmUp","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","clonedColors","colorCode","DEFAULT_COLOR","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_cacheCanvas","_cacheCtx","_tmpCtx","_height","capacity","_cacheMap","prealloc","_bitmapCommitTimeout","_drawToCacheCount","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","isEmpty","cacheX","_toCoordinateX","cacheY","_toCoordinateY","drawImage","inBitmap","_bitmap","idx","_getColorFromAnsiIndex","_getBackgroundColor","fontStyle","_getForegroundColor","clearColor","offset","_addGlyphToBitmap","_glyphsWaitingOnBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","prev","tail","nodePool","_unlinkNode","_appendNode","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","_terminalClass","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","renderRows","documentFragment","isXFlipped","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DomRenderer","isCursorRow","lineLength","charElement","isInSelection","resolvedBg","_addStyle","padStart","_applyMinimumContrast","DomRendererRowFactory","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","CharSizeService","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","CharacterJoinerService","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","MouseService","_renderer","_renderDebouncer","onDevicePixelRatioChange","_fullRefresh","_handleOptionsChanged","onCharSizeChange","onCharSizeChanged","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","_isPaused","isIntersecting","intersectionRatio","_needsFullRefresh","isRedrawOnly","_isNextRenderRedrawOnly","_needsSelectionRefresh","_selectionState","_fireOnCanvasResize","_canvasWidth","_canvasHeight","RenderService","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_removeMouseDownListeners","_enabled","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","terminalHeight","macOptionClickForcesSelection","_mouseDownTimeStamp","timeStamp","_dragScrollAmount","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectWordAtCursor","_selectLineAt","previousSelectionEnd","_selectToWordAt","_getMouseEventScrollAmount","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_oldSelectionStart","_oldSelectionEnd","_fireOnSelectionChange","_oldHasSelection","charIndex","_isClickInSelection","followWrappedLinesAbove","followWrappedLinesBelow","_convertViewportColToCharacterIndex","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","_getWordAt","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","SelectionService","createDecorator","SoundService","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","clone","val","depth","clonedObject","isArray","rgb","toPaddedHex","contrastRatio","l1","l2","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","toChannels","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","reduceLuminance","cr","increaseLuminance","bgL","relativeLuminance","fgL","resultB","resultA","resultARatio","hasWriteSyncWarnHappened","_dirtyRowService","unicodeService","_charsetService","_onLineFeed","_onData","_onBinary","markRangeDirty","scrollBottom","_writeBuffer","promiseResult","parse","_onWriteParsed","_onScrollApi","_windowsMode","maxSubsequentCalls","WARN","writeSync","eraseAttr","scroll","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","final","updateWindowsModeWrappedState","CoreTerminal","_listeners","_disposed","_event","arg1","arg2","queue","from","to","WindowsOptionsReportType","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","params","concat","subarray","success","utf32ToString","_coreMouseService","paused","cursorStartX","cursorStartY","decodedLength","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","IND","NEL","nextLine","HTS","tabSet","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","DECRQSS","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","Promise","race","res","rej","catch","err","wasPaused","_parseBuffer","_logSlowResolvingAsync","DEBUG","clearRange","_stringDecoder","decode","_utf8Decoder","_preserveStack","chWidth","charset","curAttr","_curAttrData","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","addCodepointToCell","precedingCodepoint","isCombined","hasContent","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","diffToTop","_moveCursor","diffToBottom","param","tabs","prevStop","clearWrap","replaceCells","clearMarkers","_eraseInBufferLine","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","activeEncoding","activateAltBuffer","activateNormalBuffer","mode","c1","c2","c3","fromColorRGB","accu","cSpace","advance","hasSubParams","subparams","getSubParams","_updateAttrColor","underlineColor","underlineStyle","updateExtended","_processUnderline","_extractColor","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_windowTitleStack","_windowTitle","_iconNameStack","_iconName","_savedCharset","slots","spec","parseColor","_specialColors","_setOrReportSpecialColor","DEFAULT_CHARSET","collectAndFlag","scrollRegionHeight","shiftElements","_eraseAttrDataInternal","level","markAllDirty","InputHandler","_disposables","disposables","array","isNode","navigator","userAgent","platform","test","_getKey","_search","values","mid","SortedList","fillFallback","constructor","lastChar","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","AttributeData","isFgPalette","_hasScrollback","_nullCell","fromCharData","_whitespaceCell","_isClearing","_cols","_rows","_getCorrectBufferLength","maxLength","relativeY","correctBufferLength","scrollback","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","DEFAULT_ATTR_DATA","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","onInsert","onDelete","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","codePoint","eAttrs","keys","BufferLine","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","Buffer","fillViewportRows","_alt","inactiveBuffer","BufferSet","obj","CellData","setFromCharData","combined","Marker","_nextId","_onDispose","isDisposed","C0","C1","PAD","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","DEL","US","NUL","keyMapping","keyString","toUpperCase","toLowerCase","FS","GS","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","bisearch","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","handlerList","handlerIndex","unhook","hook","put","handlerResult","EMPTY_PARAMS","addParam","_handler","_params","_hitLimit","ret","codes","NON_ASCII_PRINTABLE","TransitionTable","blueprint","unused","PRINTABLES","EXECUTABLES","states","setDefault","addMany","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","finalRange","intermediate","finalCode","reverse","_identifier","registerHandler","clearHandler","setHandlerFallback","collect","abort","addSubParam","addDigit","handlersEsc","jj","EscapeSequenceParser","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","Params","newParams","store","cur","_addons","instance","loadedAddon","_wrappedAddonDispose","_line","_onBufferChange","_alternate","alternate","init","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","recycle","copyFrom","oldYdisp","scrollAmount","BufferService","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","CoreMouseService","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","disableStdin","CoreService","_onDecorationRegistered","_onDecorationRemoved","_decorations","Decoration","insert","getKeyIterator","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","_end","DirtyRowService","_entries","service","_services","ServiceCollection","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","InstantiationService","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","optionalParams","message","_evalLazyOptionalParams","_log","log","LogService","altClickMovesCursor","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","OptionsService","storeServiceDependency","di$target","di$dependencies","decorator","arguments","LogLevelEnum","_providers","_onChange","defaultProvider","_activeProvider","cachedModule","class","_createElementVNode","_createElementBlock","_createVNode","_component_el_row","_component_el_col","_component_el_card","shadow","_hoisted_2","_component_el_select","$data","$event","filterable","placeholder","_Fragment","_renderList","item","_createBlock","_component_el_option","label","metadata","_component_el_button","icon","plain","onClick","$options","disabled","_component_el_input","clearable","_component_el_table","onExpandChange","_component_el_table_column","default","props","_component_el_tabs","_component_el_tab_pane","containers","align","prop","_toDisplayString","status","podIP","scope","_component_el_popover","placement","trigger","reference","env","property","gutter","_hoisted_11","_hoisted_12","nodeName","_component_el_tag","phase","creationTimestamp","_component_el_pagination","onSizeChange","onCurrentChange","total","_component_el_dialog","title","footer","_component_codemirror","border","onChange","cmOptions","common","contentYaml","currentPage","pagesize","pagesizeList","searchInput","namespaceValue","namespaceList","namespaceListUrl","appLoading","podList","podTotal","getPodsData","url","filter_name","namespace","page","limit","podDetail","getPodDetailData","pod_name","yamlDialog","updatePodData","delPodData","activeName","expandKeys","expandMap","containerList","containerValue","getPodContainerData","logContent","getPodLogData","container_name","socket","methods","transYaml","json2yaml","stringify","transObj","yaml2obj","handleSizeChange","getPods","handleCurrentChange","handleClose","done","$confirm","ellipsis","timeTrans","timestamp","date","getTime","toJSON","restartTotal","sum","containerStatuses","restartCount","getNamespaces","getNamespecelist","$message","msg","getPodList","getPodDetail","GetPodDetail","updatePod","JSON","UpdatePod","delPod","DeletePod","handleConfirm","operateName","fn","confirmContent","confirmButtonText","cancelButtonText","getRowKeys","expandChange","expandedRows","setExpandMap","getPodContainer","podName","GetPodContainer","getPodLog","GetPodLog","initTerm","getElementById","fitAddon","FitAddon","fit","_this","msgOrder","send","msgOrder2","initSocket","terminalWsUrl","WebSocket","socketOnClose","socketOnOpen","socketOnMessage","socketOnError","onopen","onmessage","onclose","onerror","closeSocket","close","watch","localStorage","setItem","beforeMount","getItem","beforeUnmount","__exports__","render"],"sourceRoot":""}